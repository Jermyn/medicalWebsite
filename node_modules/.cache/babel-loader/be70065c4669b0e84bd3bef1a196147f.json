{"ast":null,"code":"import _objectSpread from \"/Users/jermz/Desktop/eclipse-workspace/medicalWebsite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/jermz/Desktop/eclipse-workspace/medicalWebsite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jermz/Desktop/eclipse-workspace/medicalWebsite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jermz/Desktop/eclipse-workspace/medicalWebsite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jermz/Desktop/eclipse-workspace/medicalWebsite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jermz/Desktop/eclipse-workspace/medicalWebsite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/jermz/Desktop/eclipse-workspace/medicalWebsite/src/Map.js\";\nimport React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { fetchMaps as _fetchMaps, confirmType as _confirmType, fetchSimulationCoordinates as _fetchSimulationCoordinates } from \"./actions/index\";\nimport MapGL, { Marker, Popup, NavigationControl } from 'react-map-gl';\nimport ReactMapboxGl from 'react-mapbox-gl';\nimport { Source, Layer, Feature } from \"react-mapbox-gl\";\nimport mapboxgl from 'mapbox-gl'; // import StatePin from './StatePin'\n\nimport { withStyles } from '@material-ui/core/styles';\nvar e = React.createElement;\nvar TOKEN = 'pk.eyJ1IjoiZnlwZW5nIiwiYSI6ImNqcmFlazM4YjAxejkzeW1wbWg2Zmp2aWsifQ.obOnEjbqcpEWu9HIh6zPlw'; // Set your mapbox token here\n\nvar graphqlUrlHTTPS = 'http://137.132.165.139:3000/graphql';\nvar ReactMap = ReactMapboxGl({\n  accessToken: \"\".concat(TOKEN),\n  maxZoom: 13,\n  minZoom: 8\n});\nvar navStyle = {\n  position: 'absolute',\n  top: 0,\n  left: 0,\n  padding: '10px'\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    maps: state.maps,\n    map: state.map,\n    devices: state.devices,\n    deviceLogs: state.deviceLogs,\n    patients: state.patients,\n    staff: state.staff,\n    assets: state.assets,\n    simulation: state.simulation\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    confirmType: function confirmType(type) {\n      return dispatch(_confirmType(type));\n    },\n    fetchMaps: function fetchMaps(maps) {\n      return dispatch(_fetchMaps(maps));\n    },\n    fetchSimulationCoordinates: function fetchSimulationCoordinates(coord) {\n      return dispatch(_fetchSimulationCoordinates(coord));\n    }\n  };\n};\n\nvar Map =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Map, _Component);\n\n  function Map(props) {\n    var _this;\n\n    _classCallCheck(this, Map);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Map).call(this, props));\n\n    _this.createBeaconMarkers = function () {\n      var map = _this.props.map;\n\n      if (map != \"\") {\n        var filteredLogs = _this.props.deviceLogs.filter(function (device) {\n          return device.map.id == map.id;\n        });\n\n        var mobileDevices = [];\n        var staffDevices = [];\n        var assetDevices = [];\n        filteredLogs.map(function (device) {\n          _this.props.patients.forEach(function (patient) {\n            if (patient.beacon != null) {\n              if (device.id == patient.beacon[0]) {\n                var newObj = JSON.parse(JSON.stringify(device));\n                newObj.id = patient.name;\n                mobileDevices.push(newObj);\n              }\n            }\n          });\n\n          _this.props.staff.forEach(function (staffmem) {\n            if (staffmem.beacon != null) {\n              if (device.id == staffmem.beacon[0]) {\n                var newObj = JSON.parse(JSON.stringify(device));\n                newObj.id = staffmem.name;\n                staffDevices.push(newObj);\n              }\n            }\n          });\n\n          _this.props.assets.forEach(function (asset) {\n            if (asset.beacon != null) {\n              if (device.id == asset.beacon[0]) {\n                var newObj = JSON.parse(JSON.stringify(device));\n                newObj.id = asset.name;\n                assetDevices.push(newObj);\n              }\n            }\n          });\n        });\n\n        _this.setState({\n          mobileDevices: mobileDevices\n        });\n\n        _this.setState({\n          staffDevices: staffDevices\n        });\n\n        _this.setState({\n          assetDevices: assetDevices\n        });\n      }\n    };\n\n    _this.initializeMap = function (map, jump) {\n      if (map != null) {\n        if (map.id == \"simulation_ward\") {\n          map = JSON.parse(JSON.stringify(map));\n          map.coordinates = [[0, 0.114], [0.6217262964, 0.114], [0.6217262964, 0], [0, 0]];\n\n          _this.setState({\n            map: map\n          });\n\n          _this.timer = setInterval(function () {\n            return _this.props.fetchSimulationCoordinates();\n          }, 1000);\n\n          _this.setState({\n            simulation: true\n          });\n        }\n      }\n\n      var sourceOptions = {\n        coordinates: map != null ? map.coordinates : undefined,\n        type: 'image',\n        url: map != null ? map.imageURL : undefined\n      };\n\n      _this.setState({\n        sourceOptions: sourceOptions\n      });\n\n      if (map != \"\") {\n        var bounds = new mapboxgl.LngLatBounds(_this.__guard__(map != null ? map.coordinates : undefined, function (x) {\n          return x[3];\n        }), _this.__guard__(map != null ? map.coordinates : undefined, function (x1) {\n          return x1[1];\n        }));\n        var center = bounds.getCenter();\n\n        _this.setState({\n          center: center\n        });\n\n        if (_this.state.simulation == false) {\n          _this.createBeaconMarkers();\n\n          var staticDevices = _this.props.devices.filter(function (device) {\n            return device.type == 'static';\n          });\n\n          staticDevices = staticDevices.filter(function (device) {\n            return device.location != null;\n          });\n          staticDevices = staticDevices.filter(function (device) {\n            return device.location.map.id == map.id;\n          });\n\n          _this.setState({\n            staticDevices: staticDevices\n          });\n        } else {\n          if (_this.props.simulation != \"\" && _this.props.simulation != null) {\n            var simulation = _this.props.simulation;\n            var devices = [];\n            var entries = Object.values(simulation);\n            entries.map(function (contact) {\n              if (typeof contact === 'object' && contact !== null && contact.beacon != null) {\n                devices.push(React.createElement(Feature, {\n                  key: contact.beacon,\n                  coordinates: [contact.latitude, contact.longitude],\n                  properties: {\n                    title: contact.beacon,\n                    id: contact.beacon\n                  },\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 209\n                  },\n                  __self: this\n                }));\n              }\n            });\n\n            _this.setState({\n              mobileDevices: devices\n            });\n          }\n        }\n      }\n    };\n\n    _this.onStyleLoad = function (mapgl) {\n      var _this$props = _this.props,\n          onLoad = _this$props.onLoad,\n          map = _this$props.map;\n\n      if (map != null) {\n        _this.initializeMap(map);\n      }\n    };\n\n    _this.getCirclePaint = function () {\n      return {\n        'circle-radius': _this.state.circleRadius,\n        'circle-color': '#FFFF00',\n        'circle-opacity': 0.4\n      };\n    };\n\n    _this._resize = function () {\n      _this.setState({\n        viewport: _objectSpread({}, _this.state.viewport, {\n          width: window.innerWidth,\n          height: '70vh'\n        })\n      });\n    };\n\n    _this._updateViewport = function (viewport) {\n      _this.setState({\n        viewport: viewport\n      });\n    };\n\n    _this.__guard__ = function (value, transform) {\n      return typeof value !== 'undefined' && value !== null ? transform(value) : undefined;\n    };\n\n    _this.renderHighlightDevices = function () {\n      var patients = _this.props.patients;\n      var staff = _this.props.staff;\n      var assets = _this.props.assets;\n      var beacons = _this.state.mobileDevices;\n      var devices = [];\n\n      var _loop = function _loop(i) {\n        beacons.map(function (device) {\n          if (patients[i].name == device.id && patients[i].highlight == true) {\n            devices.push(React.createElement(Feature, {\n              key: device.id,\n              coordinates: [device.lng, device.lat],\n              properties: {\n                title: device.id,\n                id: device.id\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 267\n              },\n              __self: this\n            }));\n          }\n        });\n      };\n\n      for (var i = 0; i < patients.length; i++) {\n        _loop(i);\n      }\n\n      var _loop2 = function _loop2(i) {\n        _this.state.staffDevices.map(function (device) {\n          if (staff[i].name == device.id && staff[i].highlight == true) {\n            devices.push(React.createElement(Feature, {\n              key: device.id,\n              coordinates: [device.lng, device.lat],\n              properties: {\n                title: device.id,\n                id: device.id\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 283\n              },\n              __self: this\n            }));\n          }\n        });\n      };\n\n      for (var i = 0; i < staff.length; i++) {\n        _loop2(i);\n      }\n\n      var _loop3 = function _loop3(i) {\n        _this.state.assetDevices.map(function (device) {\n          if (assets[i].name == device.id && assets[i].highlight == true) {\n            devices.push(React.createElement(Feature, {\n              key: device.id,\n              coordinates: [device.lng, device.lat],\n              properties: {\n                title: device.id,\n                id: device.id\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 299\n              },\n              __self: this\n            }));\n          }\n        });\n      };\n\n      for (var i = 0; i < assets.length; i++) {\n        _loop3(i);\n      }\n\n      return devices;\n    };\n\n    _this.renderStaffDevices = function () {\n      var devices = [];\n\n      _this.state.staffDevices.map(function (device) {\n        devices.push(React.createElement(Feature, {\n          key: device.id,\n          coordinates: [device.lng, device.lat],\n          properties: {\n            title: device.id,\n            id: device.id\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 317\n          },\n          __self: this\n        }));\n      });\n\n      return devices;\n    };\n\n    _this.renderAssetDevices = function () {\n      var devices = [];\n\n      _this.state.assetDevices.map(function (device) {\n        devices.push(React.createElement(Feature, {\n          key: device.id,\n          coordinates: [device.lng, device.lat],\n          properties: {\n            title: device.id,\n            id: device.id\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 334\n          },\n          __self: this\n        }));\n      });\n\n      return devices;\n    };\n\n    _this.renderDevices = function (type) {\n      var devices = [];\n      var createDevices = [];\n      if (type == 'static') createDevices = _this.state.staticDevices.map(function (device) {\n        devices.push(React.createElement(Feature, {\n          key: device.id,\n          coordinates: [device.location.lng, device.location.lat],\n          properties: {\n            title: device.id,\n            id: device.id\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 352\n          },\n          __self: this\n        }));\n      });else {\n        if (_this.state.simulation) {\n          if (_this.props.simulation != \"\" && _this.props.simulation != null) {\n            var simulation = _this.props.simulation;\n            var entries = Object.values(simulation);\n            createDevices = entries.map(function (contact) {\n              if (typeof contact === 'object' && contact !== null && contact.beacon != null) {\n                devices.push(React.createElement(Feature, {\n                  key: contact.beacon,\n                  coordinates: [contact.latitude, contact.longitude],\n                  properties: {\n                    title: contact.beacon,\n                    id: contact.beacon\n                  },\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 371\n                  },\n                  __self: this\n                }));\n              }\n            });\n          }\n        } else {\n          createDevices = _this.state.mobileDevices.map(function (device) {\n            devices.push(React.createElement(Feature, {\n              key: device.id,\n              coordinates: [device.lng, device.lat],\n              properties: {\n                title: device.id,\n                id: device.id\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 386\n              },\n              __self: this\n            }));\n          });\n        }\n      }\n      return devices;\n    };\n\n    _this.renderPopup = function () {\n      return _this.state.popupInfo && React.createElement(Popup, {\n        tipSize: 5,\n        anchor: \"bottom-right\",\n        longitude: _this.state.popupInfo.state.longitude,\n        latitude: _this.state.popupInfo.state.latitude,\n        onClose: function onClose() {\n          return _this.setState({\n            popupInfo: null\n          });\n        },\n        closeOnClick: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 401\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 407\n        },\n        __self: this\n      }, _this.state.popupInfo.state.fullName), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 408\n        },\n        __self: this\n      }, _this.state.popupInfo.incidentNumber, \" \", _this.state.popupInfo.disaster, \" incident(s)\"), React.createElement(\"div\", {\n        class: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 409\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: _this.state.popupInfo.icon.imgUrl,\n        style: {\n          height: \"50px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 410\n        },\n        __self: this\n      })));\n    };\n\n    _this.state = {\n      viewport: {\n        latitude: 37.785164,\n        longitude: -100,\n        zoom: 2.8,\n        bearing: 0,\n        pitch: 0,\n        width: 500,\n        height: 500\n      },\n      popupInfo: null,\n      map: '',\n      sourceOptions: {},\n      center: [-0.2416815, 51.5285582],\n      staticDevices: \"\",\n      mobileDevices: [],\n      staffDevices: [],\n      assetDevices: [],\n      circleRadius: 30,\n      simulation: false\n    }; // this.mapLocation = React.createRef(),\n    // this.inputNew = React.createRef()\n\n    return _this;\n  }\n\n  _createClass(Map, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      window.addEventListener('resize', this._resize); //this._resize();\n\n      if (this.props.map != null) {\n        this.initializeMap(this.props.map);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      window.removeEventListener('resize', this._resize);\n      clearInterval(this.timer);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (this.props.map !== prevProps.map) {\n        this.setState({\n          simulation: false\n        });\n        clearInterval(this.timer);\n        this.initializeMap(this.props.map);\n      }\n\n      if (this.props.deviceLogs !== prevProps.deviceLogs) {\n        this.createBeaconMarkers();\n      }\n    } //\n    // mapgl = () => {\n    //   return this.refs.map.getChildContext().map;\n    // }\n    // getChildContext = () => {\n    //   return { map: this.map };\n    // };\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var viewport = this.state.viewport;\n      var sourceOptions = this.state.sourceOptions;\n      var imageURL = \"mapbox://styles/mapbox/dark-v9\";\n      var center = this.state.center;\n\n      if (this.props.map != \"\") {}\n\n      var _this$props2 = this.props,\n          children = _this$props2.children,\n          onLoad = _this$props2.onLoad,\n          map = _this$props2.map,\n          height = _this$props2.height,\n          width = _this$props2.width;\n      var locationOrigin = window.location.origin;\n      var style = {\n        version: 8,\n        name: 'custom',\n        sources: {},\n        sprite: \"\".concat(locationOrigin, \"/mapbox-styles/maki\"),\n        glyphs: \"\".concat(locationOrigin, \"/mapbox-styles/font/{fontstack}/{range}.pbf\"),\n        layers: []\n      };\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 439\n        },\n        __self: this\n      }, React.createElement(ReactMap, {\n        style: style,\n        center: center,\n        movingMethod: 'jumpTo',\n        ref: this.mapLocation,\n        containerStyle: {\n          height: '70vh',\n          width: '100vw'\n        },\n        onStyleLoad: this.onStyleLoad,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 440\n        },\n        __self: this\n      }, React.createElement(Layer, {\n        type: \"symbol\",\n        id: \"staticDevices\",\n        layout: {\n          'icon-image': 'triangle-15',\n          'icon-allow-overlap': true,\n          'icon-ignore-placement': true,\n          'text-allow-overlap': true,\n          'text-ignore-placement': true,\n          'text-field': '{title}',\n          'text-font': ['Open Sans Semibold'],\n          'text-offset': [0, 0.8],\n          'text-anchor': 'top'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 451\n        },\n        __self: this\n      }), React.createElement(Layer, {\n        type: \"circle\",\n        paint: this.getCirclePaint(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 470\n        },\n        __self: this\n      }, this.renderHighlightDevices()), React.createElement(Layer, {\n        type: \"symbol\",\n        id: \"patientDevices\",\n        layout: {\n          'icon-image': 'marker-15',\n          'icon-allow-overlap': true,\n          'icon-ignore-placement': true,\n          'text-allow-overlap': true,\n          'text-ignore-placement': true,\n          'text-field': '{title}',\n          'text-font': ['Open Sans Semibold'],\n          'text-offset': [0, 0.8],\n          'text-anchor': 'top'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 475\n        },\n        __self: this\n      }, this.renderDevices('mobile')), React.createElement(Layer, {\n        type: \"symbol\",\n        id: \"staffDevices\",\n        layout: {\n          'icon-image': 'hospital-15',\n          'icon-allow-overlap': true,\n          'icon-ignore-placement': true,\n          'text-allow-overlap': true,\n          'text-ignore-placement': true,\n          'text-field': '{title}',\n          'text-font': ['Open Sans Semibold'],\n          'text-offset': [0, 0.8],\n          'text-anchor': 'top'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 494\n        },\n        __self: this\n      }, this.renderStaffDevices()), React.createElement(Layer, {\n        type: \"symbol\",\n        id: \"assetDevices\",\n        layout: {\n          'icon-image': 'suitcase-15',\n          'icon-allow-overlap': true,\n          'icon-ignore-placement': true,\n          'text-allow-overlap': true,\n          'text-ignore-placement': true,\n          'text-field': '{title}',\n          'text-font': ['Open Sans Semibold'],\n          'text-offset': [0, 0.8],\n          'text-anchor': 'top'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 513\n        },\n        __self: this\n      }, this.renderAssetDevices()), this.state.map != \"\" && sourceOptions.url != null ? React.createElement(Source, {\n        id: \"image_source\",\n        tileJsonSource: sourceOptions,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 532\n        },\n        __self: this\n      }) : null, this.state.map != \"\" && sourceOptions.url != null ? React.createElement(Layer, {\n        id: \"image_layer\",\n        before: \"staticDevices\",\n        type: \"raster\",\n        sourceId: \"image_source\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 535\n        },\n        __self: this\n      }) : null));\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(props, state) {\n      if (props.map != state.map && props.map != null) {\n        return {\n          map: props.map\n        };\n      }\n    }\n  }]);\n\n  return Map;\n}(Component);\n\nvar ConnectedMap = connect(mapStateToProps, mapDispatchToProps)(Map);\nexport default ConnectedMap;","map":{"version":3,"sources":["/Users/jermz/Desktop/eclipse-workspace/medicalWebsite/src/Map.js"],"names":["React","Component","connect","fetchMaps","confirmType","fetchSimulationCoordinates","MapGL","Marker","Popup","NavigationControl","ReactMapboxGl","Source","Layer","Feature","mapboxgl","withStyles","e","createElement","TOKEN","graphqlUrlHTTPS","ReactMap","accessToken","maxZoom","minZoom","navStyle","position","top","left","padding","mapStateToProps","state","maps","map","devices","deviceLogs","patients","staff","assets","simulation","mapDispatchToProps","dispatch","type","coord","Map","props","createBeaconMarkers","filteredLogs","filter","device","id","mobileDevices","staffDevices","assetDevices","forEach","patient","beacon","newObj","JSON","parse","stringify","name","push","staffmem","asset","setState","initializeMap","jump","coordinates","timer","setInterval","sourceOptions","undefined","url","imageURL","bounds","LngLatBounds","__guard__","x","x1","center","getCenter","staticDevices","location","entries","Object","values","contact","latitude","longitude","title","onStyleLoad","mapgl","onLoad","getCirclePaint","circleRadius","_resize","viewport","width","window","innerWidth","height","_updateViewport","value","transform","renderHighlightDevices","beacons","i","highlight","lng","lat","length","renderStaffDevices","renderAssetDevices","renderDevices","createDevices","renderPopup","popupInfo","fullName","incidentNumber","disaster","icon","imgUrl","zoom","bearing","pitch","addEventListener","removeEventListener","clearInterval","prevProps","children","locationOrigin","origin","style","version","sources","sprite","glyphs","layers","mapLocation","ConnectedMap"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { fetchMaps, confirmType, fetchSimulationCoordinates } from \"./actions/index\";\r\nimport MapGL, {Marker, Popup, NavigationControl} from 'react-map-gl';\r\nimport ReactMapboxGl from 'react-mapbox-gl';\r\nimport { Source, Layer, Feature } from \"react-mapbox-gl\";\r\nimport mapboxgl from 'mapbox-gl';\r\n// import StatePin from './StatePin'\r\nimport { withStyles } from '@material-ui/core/styles';\r\nconst e             = React.createElement;\r\n\r\n\r\nconst TOKEN = 'pk.eyJ1IjoiZnlwZW5nIiwiYSI6ImNqcmFlazM4YjAxejkzeW1wbWg2Zmp2aWsifQ.obOnEjbqcpEWu9HIh6zPlw'; // Set your mapbox token here\r\nconst graphqlUrlHTTPS = 'http://137.132.165.139:3000/graphql';\r\n\r\nconst ReactMap = ReactMapboxGl({\r\n  accessToken: `${TOKEN}`,\r\n  maxZoom:    13,\r\n  minZoom:    8,\r\n})\r\nconst navStyle = {\r\n  position: 'absolute',\r\n  top: 0,\r\n  left: 0,\r\n  padding: '10px'\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    maps: state.maps,\r\n    map: state.map,\r\n    devices: state.devices,\r\n    deviceLogs: state.deviceLogs,\r\n    patients: state.patients,\r\n    staff: state.staff,\r\n    assets: state.assets,\r\n    simulation: state.simulation,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    confirmType: type => dispatch(confirmType(type)),\r\n    fetchMaps: maps => dispatch(fetchMaps(maps)),\r\n    fetchSimulationCoordinates: coord => dispatch(fetchSimulationCoordinates(coord))\r\n  };\r\n};\r\n\r\nclass Map extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      viewport: {\r\n        latitude: 37.785164,\r\n        longitude: -100,\r\n        zoom: 2.8,\r\n        bearing: 0,\r\n        pitch: 0,\r\n        width: 500,\r\n        height: 500,\r\n      },\r\n      popupInfo: null,\r\n      map: '',\r\n      sourceOptions: {},\r\n      center: [-0.2416815, 51.5285582 ],\r\n      staticDevices: \"\",\r\n      mobileDevices: [],\r\n      staffDevices: [],\r\n      assetDevices: [],\r\n      circleRadius: 30,\r\n      simulation: false,\r\n\r\n    };\r\n    // this.mapLocation = React.createRef(),\r\n    // this.inputNew = React.createRef()\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.addEventListener('resize', this._resize);\r\n    //this._resize();\r\n    if(this.props.map != null) {\r\n      this.initializeMap(this.props.map);\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('resize', this._resize);\r\n    clearInterval(this.timer)\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if(this.props.map !== prevProps.map) {\r\n      this.setState({simulation: false})\r\n      clearInterval(this.timer)\r\n      this.initializeMap(this.props.map)\r\n    }\r\n\r\n    if(this.props.deviceLogs !== prevProps.deviceLogs) {\r\n      this.createBeaconMarkers()\r\n    }\r\n  }\r\n\r\n  //\r\n  // mapgl = () => {\r\n  //   return this.refs.map.getChildContext().map;\r\n  // }\r\n\r\n  // getChildContext = () => {\r\n  //   return { map: this.map };\r\n  // };\r\n\r\n  static getDerivedStateFromProps(props, state) {\r\n    if(props.map != state.map && props.map != null) {\r\n      return {\r\n        map: props.map\r\n      }\r\n    }\r\n  }\r\n\r\n  createBeaconMarkers = () => {\r\n\r\n    let map = this.props.map\r\n    if(map != \"\") {\r\n      let filteredLogs = this.props.deviceLogs.filter(device => device.map.id == map.id);\r\n      let mobileDevices = []\r\n      let staffDevices = []\r\n      let assetDevices = []\r\n\r\n      filteredLogs.map(device => {\r\n        this.props.patients.forEach(patient => {\r\n          if(patient.beacon != null) {\r\n          if(device.id == patient.beacon[0]) {\r\n            let newObj = JSON.parse(JSON.stringify(device))\r\n            newObj.id = patient.name\r\n            mobileDevices.push(newObj)\r\n          }\r\n        }\r\n        })\r\n\r\n        this.props.staff.forEach(staffmem => {\r\n          if(staffmem.beacon != null) {\r\n          if(device.id == staffmem.beacon[0]) {\r\n            let newObj = JSON.parse(JSON.stringify(device))\r\n            newObj.id = staffmem.name\r\n\r\n            staffDevices.push(newObj)\r\n          }\r\n        }\r\n        })\r\n\r\n        this.props.assets.forEach(asset => {\r\n          if(asset.beacon != null) {\r\n            if(device.id == asset.beacon[0]) {\r\n              let newObj = JSON.parse(JSON.stringify(device))\r\n              newObj.id = asset.name\r\n\r\n              assetDevices.push(newObj)\r\n            }\r\n          }\r\n        })\r\n\r\n\r\n      })\r\n      this.setState({mobileDevices})\r\n      this.setState({staffDevices})\r\n      this.setState({assetDevices})\r\n    }\r\n\r\n  }\r\n  initializeMap = (map, jump) => {\r\n\r\n    if(map != null) {\r\n      if(map.id == \"simulation_ward\") {\r\n        map = JSON.parse(JSON.stringify(map))\r\n        map.coordinates = [[0, 0.114], [0.6217262964, 0.114], [0.6217262964, 0],[0,0]]\r\n        this.setState({map})\r\n        this.timer = setInterval(()=> this.props.fetchSimulationCoordinates(), 1000);\r\n        this.setState({simulation: true})\r\n      }\r\n    }\r\n\r\n    let sourceOptions = {\r\n      coordinates: (map != null ? map.coordinates : undefined),\r\n      type:         'image',\r\n      url:          (map != null ? map.imageURL : undefined)\r\n    }\r\n    this.setState({sourceOptions})\r\n\r\n    if(map != \"\") {\r\n      const bounds = new mapboxgl.LngLatBounds(this.__guard__(map != null ? map.coordinates : undefined, x => x[3]), this.__guard__(map != null ? map.coordinates : undefined, x1 => x1[1]));\r\n      let center = bounds.getCenter();\r\n      this.setState({center});\r\n      if(this.state.simulation == false) {\r\n        this.createBeaconMarkers()\r\n        let staticDevices = this.props.devices.filter(device => device.type == 'static');\r\n        staticDevices = staticDevices.filter(device => device.location != null)\r\n        staticDevices = staticDevices.filter(device => device.location.map.id == map.id)\r\n        this.setState({staticDevices})\r\n      } else {\r\n        if(this.props.simulation != \"\" && this.props.simulation != null) {\r\n          let simulation = this.props.simulation\r\n          let devices = []\r\n          const entries = Object.values(simulation)\r\n\r\n          entries.map((contact) => {\r\n              if(typeof contact === 'object' && contact !== null && contact.beacon != null) {\r\n                devices.push(\r\n                <Feature\r\n                  key={contact.beacon}\r\n                  coordinates={[contact.latitude, contact.longitude]}\r\n                  properties={{\r\n                    title:  contact.beacon,\r\n                    id:     contact.beacon\r\n                  }}\r\n                />)\r\n              }\r\n              })\r\n              this.setState({mobileDevices: devices})\r\n        }\r\n      }\r\n\r\n    }\r\n  }\r\n\r\n  onStyleLoad = (mapgl) => {\r\n    const { onLoad, map } = this.props;\r\n    if (map != null) { this.initializeMap(map); }\r\n  }\r\n\r\n  getCirclePaint = () => ({\r\n    'circle-radius': this.state.circleRadius,\r\n    'circle-color': '#FFFF00',\r\n    'circle-opacity': 0.4\r\n  });\r\n\r\n  _resize = () => {\r\n    this.setState({\r\n      viewport: {\r\n        ...this.state.viewport,\r\n        width: window.innerWidth,\r\n        height: '70vh'\r\n      }\r\n    });\r\n  };\r\n\r\n  _updateViewport = (viewport) => {\r\n    this.setState({viewport});\r\n  }\r\n\r\n  __guard__ = (value, transform) => {\r\n    return (typeof value !== 'undefined' && value !== null) ? transform(value) : undefined;\r\n  }\r\n\r\n  renderHighlightDevices = () => {\r\n    let patients = this.props.patients;\r\n    let staff = this.props.staff;\r\n    let assets = this.props.assets;\r\n    let beacons = this.state.mobileDevices;\r\n    let devices = []\r\n\r\n    for(let i = 0 ; i < patients.length; i++) {\r\n\r\n      beacons.map((device) => {\r\n        if(patients[i].name == device.id && patients[i].highlight == true) {\r\n        devices.push(\r\n        <Feature\r\n          key={device.id}\r\n          coordinates={[device.lng, device.lat]}\r\n          properties={{\r\n            title:  device.id,\r\n            id:     device.id\r\n          }}\r\n        />)\r\n      }})\r\n    }\r\n\r\n    for(let i = 0 ; i < staff.length; i++) {\r\n\r\n      this.state.staffDevices.map((device) => {\r\n        if(staff[i].name == device.id && staff[i].highlight == true) {\r\n        devices.push(\r\n        <Feature\r\n          key={device.id}\r\n          coordinates={[device.lng, device.lat]}\r\n          properties={{\r\n            title:  device.id,\r\n            id:     device.id\r\n          }}\r\n        />)\r\n      }})\r\n    }\r\n\r\n    for(let i = 0 ; i < assets.length; i++) {\r\n\r\n      this.state.assetDevices.map((device) => {\r\n        if(assets[i].name == device.id && assets[i].highlight == true) {\r\n        devices.push(\r\n        <Feature\r\n          key={device.id}\r\n          coordinates={[device.lng, device.lat]}\r\n          properties={{\r\n            title:  device.id,\r\n            id:     device.id\r\n          }}\r\n        />)\r\n      }})\r\n    }\r\n\r\n    return devices;\r\n  }\r\n\r\n  renderStaffDevices = () => {\r\n    let devices = []\r\n    this.state.staffDevices.map((device) => {\r\n      devices.push(\r\n      <Feature\r\n        key={device.id}\r\n        coordinates={[device.lng, device.lat]}\r\n        properties={{\r\n          title:  device.id,\r\n          id:     device.id\r\n        }}\r\n      />)\r\n    })\r\n\r\n    return devices\r\n  }\r\n\r\n  renderAssetDevices = () => {\r\n    let devices = []\r\n    this.state.assetDevices.map((device) => {\r\n      devices.push(\r\n      <Feature\r\n        key={device.id}\r\n        coordinates={[device.lng, device.lat]}\r\n        properties={{\r\n          title:  device.id,\r\n          id:     device.id\r\n        }}\r\n      />)\r\n    })\r\n\r\n    return devices\r\n  }\r\n  renderDevices = (type) => {\r\n    let devices = []\r\n    let createDevices = []\r\n    if(type == 'static')\r\n      createDevices = this.state.staticDevices.map ((device) => {\r\n        devices.push(\r\n        <Feature\r\n          key={device.id}\r\n          coordinates={[device.location.lng, device.location.lat]}\r\n          properties={{\r\n            title:  device.id,\r\n            id:     device.id\r\n          }}\r\n        />)\r\n      })\r\n    else {\r\n\r\n      if(this.state.simulation) {\r\n        if(this.props.simulation != \"\" && this.props.simulation != null) {\r\n          let simulation = this.props.simulation\r\n          const entries = Object.values(simulation)\r\n\r\n            createDevices = entries.map((contact) => {\r\n              if(typeof contact === 'object' && contact !== null && contact.beacon != null) {\r\n                devices.push(\r\n                <Feature\r\n                  key={contact.beacon}\r\n                  coordinates={[contact.latitude, contact.longitude]}\r\n                  properties={{\r\n                    title:  contact.beacon,\r\n                    id:     contact.beacon\r\n                  }}\r\n                />)\r\n              }\r\n              })\r\n\r\n        }\r\n      } else {\r\n        createDevices = this.state.mobileDevices.map((device) => {\r\n          devices.push(\r\n          <Feature\r\n            key={device.id}\r\n            coordinates={[device.lng, device.lat]}\r\n            properties={{\r\n              title:  device.id,\r\n              id:     device.id\r\n            }}\r\n          />)\r\n        })\r\n      }\r\n    }\r\n    return devices;\r\n  }\r\n  renderPopup = () => {\r\n    return this.state.popupInfo && (\r\n      <Popup tipSize={5}\r\n        anchor=\"bottom-right\"\r\n        longitude={this.state.popupInfo.state.longitude}\r\n        latitude={this.state.popupInfo.state.latitude}\r\n        onClose={() => this.setState({popupInfo: null})}\r\n        closeOnClick={true}>\r\n        <h4>{this.state.popupInfo.state.fullName}</h4>\r\n        <p>{this.state.popupInfo.incidentNumber} {this.state.popupInfo.disaster} incident(s)</p>\r\n        <div class=\"text-center\">\r\n        <img src={this.state.popupInfo.icon.imgUrl} style={{height: \"50px\"}} />\r\n        </div>\r\n      </Popup>\r\n\r\n      )\r\n  }\r\n\r\n  render() {\r\n\r\n    const {viewport} = this.state;\r\n    let sourceOptions = this.state.sourceOptions\r\n    let imageURL = \"mapbox://styles/mapbox/dark-v9\";\r\n    let center = this.state.center\r\n    if(this.props.map != \"\") {\r\n\r\n    }\r\n    const { children, onLoad, map, height, width } = this.props;\r\n    let locationOrigin = window.location.origin\r\n\r\n    let style = {\r\n        version:  8,\r\n        name:     'custom',\r\n        sources:  {},\r\n        sprite:   `${locationOrigin}/mapbox-styles/maki`,\r\n        glyphs:   `${locationOrigin}/mapbox-styles/font/{fontstack}/{range}.pbf`,\r\n        layers:   []\r\n    }\r\n\r\n    return (\r\n      <div>\r\n      <ReactMap\r\n        style={style}\r\n        center={center}\r\n        movingMethod={'jumpTo'}\r\n        ref={this.mapLocation}\r\n        containerStyle={{\r\n          height: '70vh',\r\n          width: '100vw'}}\r\n        onStyleLoad={this.onStyleLoad}\r\n      >\r\n\r\n      <Layer type=\"symbol\"\r\n      id=\"staticDevices\"\r\n      layout={{\r\n        'icon-image':             'triangle-15',\r\n        'icon-allow-overlap':     true,\r\n        'icon-ignore-placement':  true,\r\n        'text-allow-overlap':     true,\r\n        'text-ignore-placement':  true,\r\n        'text-field':             '{title}',\r\n        'text-font':              ['Open Sans Semibold'],\r\n        'text-offset':            [0, 0.8],\r\n        'text-anchor':            'top',\r\n      }}>\r\n\r\n      {\r\n      //  this.state.staticDevices != \"\" ? this.renderDevices('static') : null\r\n      }\r\n      </Layer>\r\n\r\n      <Layer type=\"circle\"  paint={this.getCirclePaint()}>\r\n      {\r\n        this.renderHighlightDevices()\r\n      }\r\n      </Layer>\r\n      <Layer type=\"symbol\"\r\n      id=\"patientDevices\"\r\n      layout={{\r\n        'icon-image':             'marker-15',\r\n        'icon-allow-overlap':     true,\r\n        'icon-ignore-placement':  true,\r\n        'text-allow-overlap':     true,\r\n        'text-ignore-placement':  true,\r\n        'text-field':             '{title}',\r\n        'text-font':              ['Open Sans Semibold'],\r\n        'text-offset':            [0, 0.8],\r\n        'text-anchor':            'top',\r\n      }}>\r\n\r\n      {\r\n        this.renderDevices('mobile')\r\n      }\r\n      </Layer>\r\n\r\n      <Layer type=\"symbol\"\r\n      id=\"staffDevices\"\r\n      layout={{\r\n        'icon-image':             'hospital-15',\r\n        'icon-allow-overlap':     true,\r\n        'icon-ignore-placement':  true,\r\n        'text-allow-overlap':     true,\r\n        'text-ignore-placement':  true,\r\n        'text-field':             '{title}',\r\n        'text-font':              ['Open Sans Semibold'],\r\n        'text-offset':            [0, 0.8],\r\n        'text-anchor':            'top',\r\n      }}>\r\n\r\n      {\r\n        this.renderStaffDevices()\r\n      }\r\n      </Layer>\r\n\r\n      <Layer type=\"symbol\"\r\n      id=\"assetDevices\"\r\n      layout={{\r\n        'icon-image':             'suitcase-15',\r\n        'icon-allow-overlap':     true,\r\n        'icon-ignore-placement':  true,\r\n        'text-allow-overlap':     true,\r\n        'text-ignore-placement':  true,\r\n        'text-field':             '{title}',\r\n        'text-font':              ['Open Sans Semibold'],\r\n        'text-offset':            [0, 0.8],\r\n        'text-anchor':            'top',\r\n      }}>\r\n\r\n      {\r\n        this.renderAssetDevices()\r\n      }\r\n      </Layer>\r\n      {this.state.map != \"\" && sourceOptions.url != null ?\r\n      <Source id=\"image_source\" tileJsonSource={sourceOptions} />\r\n      : null}\r\n      {this.state.map != \"\" && sourceOptions.url != null ?\r\n      <Layer id=\"image_layer\" before=\"staticDevices\" type=\"raster\" sourceId=\"image_source\"/>\r\n      : null}\r\n    </ReactMap>\r\n    </div>\r\n  )\r\n  }\r\n\r\n}\r\nconst ConnectedMap = connect(mapStateToProps, mapDispatchToProps)(Map);\r\n\r\nexport default ConnectedMap;\r\n"]},"metadata":{},"sourceType":"module"}