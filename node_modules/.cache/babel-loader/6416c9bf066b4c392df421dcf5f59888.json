{"ast":null,"code":"import _defineProperty from \"/Users/jermz/Desktop/eclipse-workspace/medicalWebsite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/jermz/Desktop/eclipse-workspace/medicalWebsite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jermz/Desktop/eclipse-workspace/medicalWebsite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jermz/Desktop/eclipse-workspace/medicalWebsite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jermz/Desktop/eclipse-workspace/medicalWebsite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jermz/Desktop/eclipse-workspace/medicalWebsite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/jermz/Desktop/eclipse-workspace/medicalWebsite/src/BeaconTable.js\";\nimport React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport AddIcon from '@material-ui/icons/Add';\nimport { lighten } from '@material-ui/core/styles/colorManipulator';\nimport { connect } from \"react-redux\";\nimport { assignBeacon as _assignBeacon, fetchDeviceLocations as _fetchDeviceLocations } from \"./actions/index\";\nimport ConnectedAddDeviceForm from \"./AddDeviceForm\";\nimport axios from 'axios';\nvar restUrlHTTPS = \"http://137.132.165.139:3000/api\";\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    assignBeacon: function assignBeacon(beacon) {\n      return dispatch(_assignBeacon(beacon));\n    },\n    fetchDeviceLocations: function fetchDeviceLocations(devices) {\n      return dispatch(_fetchDeviceLocations(devices));\n    }\n  };\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    patients: state.patients,\n    assets: state.assets,\n    staff: state.staff,\n    deviceLogs: state.deviceLogs,\n    edit: state.edit,\n    beacon: state.beacon\n  };\n};\n\nvar counter = 0;\n\nfunction createData(serialno, battery) {\n  counter += 1;\n  return {\n    id: counter,\n    serialno: serialno,\n    battery: battery\n  };\n}\n\nfunction desc(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n\n  return 0;\n}\n\nfunction stableSort(array, cmp) {\n  var stabilizedThis = array.map(function (el, index) {\n    return [el, index];\n  });\n  stabilizedThis.sort(function (a, b) {\n    var order = cmp(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(function (el) {\n    return el[0];\n  });\n}\n\nfunction getSorting(order, orderBy) {\n  return order === 'desc' ? function (a, b) {\n    return desc(a, b, orderBy);\n  } : function (a, b) {\n    return -desc(a, b, orderBy);\n  };\n} // { id: 'battery', numeric: false, disablePadding: false, label: 'Battery Life (%)' },\n\n\nvar rows = [{\n  id: 'serialno',\n  numeric: false,\n  disablePadding: true,\n  label: 'Serial No'\n}];\n\nvar EnhancedTableHead =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(EnhancedTableHead, _React$Component);\n\n  function EnhancedTableHead() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, EnhancedTableHead);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(EnhancedTableHead)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.createSortHandler = function (property) {\n      return function (event) {\n        _this.props.onRequestSort(event, property);\n      };\n    };\n\n    return _this;\n  }\n\n  _createClass(EnhancedTableHead, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          onSelectAllClick = _this$props.onSelectAllClick,\n          order = _this$props.order,\n          orderBy = _this$props.orderBy,\n          numSelected = _this$props.numSelected,\n          rowCount = _this$props.rowCount;\n      return React.createElement(TableHead, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(TableRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(TableCell, {\n        padding: \"checkbox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }), rows.map(function (row) {\n        return React.createElement(TableCell, {\n          key: row.id,\n          numeric: row.numeric,\n          padding: row.disablePadding ? 'none' : 'default',\n          sortDirection: orderBy === row.id ? order : false,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106\n          },\n          __self: this\n        }, React.createElement(Tooltip, {\n          title: \"Sort\",\n          placement: row.numeric ? 'bottom-end' : 'bottom-start',\n          enterDelay: 300,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112\n          },\n          __self: this\n        }, React.createElement(TableSortLabel, {\n          active: orderBy === row.id,\n          direction: order,\n          onClick: _this2.createSortHandler(row.id),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117\n          },\n          __self: this\n        }, row.label)));\n      }, this)));\n    }\n  }]);\n\n  return EnhancedTableHead;\n}(React.Component);\n\nEnhancedTableHead.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.string.isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired\n};\n\nvar toolbarStyles = function toolbarStyles(theme) {\n  return {\n    root: {\n      paddingRight: theme.spacing.unit\n    },\n    highlight: theme.palette.type === 'light' ? {\n      color: theme.palette.secondary.main,\n      backgroundColor: lighten(theme.palette.secondary.light, 0.85)\n    } : {\n      color: theme.palette.text.primary,\n      backgroundColor: theme.palette.secondary.dark\n    },\n    spacer: {\n      flex: '1 1 100%'\n    },\n    actions: {\n      color: theme.palette.text.secondary\n    },\n    title: {\n      paddingTop: '.5em',\n      flex: '0 0 auto'\n    }\n  };\n};\n\nvar EnhancedTableToolbar =\n/*#__PURE__*/\nfunction (_React$Component2) {\n  _inherits(EnhancedTableToolbar, _React$Component2);\n\n  function EnhancedTableToolbar() {\n    var _getPrototypeOf3;\n\n    var _this3;\n\n    _classCallCheck(this, EnhancedTableToolbar);\n\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    _this3 = _possibleConstructorReturn(this, (_getPrototypeOf3 = _getPrototypeOf(EnhancedTableToolbar)).call.apply(_getPrototypeOf3, [this].concat(args)));\n\n    _this3.handleOpen = function () {\n      _this3.props.handleOpen();\n    };\n\n    return _this3;\n  }\n\n  _createClass(EnhancedTableToolbar, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          numSelected = _this$props2.numSelected,\n          classes = _this$props2.classes;\n      return React.createElement(Toolbar, {\n        className: classNames(classes.root, _defineProperty({}, classes.highlight, numSelected > 0)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes.title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, numSelected > 0 ? React.createElement(Typography, {\n        color: \"inherit\",\n        variant: \"subtitle1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, numSelected, \" selected\") : [React.createElement(Typography, {\n        variant: \"h6\",\n        id: \"tableTitle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, \"Available Beacons\"), React.createElement(Typography, {\n        variant: \"caption\",\n        id: \"tableSubtitle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, \"Optional\")]), React.createElement(\"div\", {\n        className: classes.spacer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: classes.actions,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, numSelected > 0 ? null : React.createElement(Tooltip, {\n        title: \"Add Beacon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }, React.createElement(IconButton, {\n        \"aria-label\": \"Add\",\n        onClick: this.handleOpen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, React.createElement(AddIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return EnhancedTableToolbar;\n}(React.Component);\n\n;\nEnhancedTableToolbar.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired\n};\nEnhancedTableToolbar = withStyles(toolbarStyles)(EnhancedTableToolbar);\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      width: '100%',\n      marginTop: theme.spacing.unit * 3\n    },\n    table: {\n      minWidth: 500\n    },\n    tableWrapper: {\n      overflowX: 'auto'\n    }\n  };\n};\n\nvar BeaconTable =\n/*#__PURE__*/\nfunction (_React$Component3) {\n  _inherits(BeaconTable, _React$Component3);\n\n  function BeaconTable() {\n    var _getPrototypeOf4;\n\n    var _this4;\n\n    _classCallCheck(this, BeaconTable);\n\n    for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      args[_key3] = arguments[_key3];\n    }\n\n    _this4 = _possibleConstructorReturn(this, (_getPrototypeOf4 = _getPrototypeOf(BeaconTable)).call.apply(_getPrototypeOf4, [this].concat(args)));\n    _this4.state = {\n      order: 'asc',\n      orderBy: 'serialno',\n      selected: [],\n      data: [],\n      page: 0,\n      rowsPerPage: 5,\n      open: false\n    };\n\n    _this4.getDeviceLogs = function (dispatch) {\n      var promise = axios({\n        method: 'get',\n        url: \"\".concat(restUrlHTTPS, \"/Devices/logs\"),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(function (data) {\n        _this4.props.fetchDeviceLocations(data.data);\n      });\n      return promise;\n    };\n\n    _this4.filterLogs = function () {\n      var filteredLogs = _this4.props.deviceLogs;\n      var mobileDevices = [];\n      filteredLogs.map(function (device) {\n        var checkBeacon = false;\n\n        _this4.props.patients.forEach(function (patient) {\n          if (device.id == patient.beacon) {\n            checkBeacon = true;\n          }\n        });\n\n        _this4.props.assets.forEach(function (asset) {\n          if (device.id == asset.beacon) {\n            checkBeacon = true;\n          }\n        });\n\n        _this4.props.staff.forEach(function (staff) {\n          if (device.id == staff.beacon) {\n            checkBeacon = true;\n          }\n        });\n\n        if (checkBeacon == false && device.id.charAt(0) == 'b') {\n          mobileDevices.push(device);\n        }\n\n        if (checkBeacon == true && _this4.props.edit.beacon == device.id) {\n          mobileDevices.push(device);\n        }\n      });\n      mobileDevices = _this4.createData(mobileDevices);\n\n      _this4.setState({\n        data: mobileDevices\n      });\n    };\n\n    _this4.createData = function (devices) {\n      var data = [];\n      var counter = 0;\n      devices.forEach(function (device) {\n        var item = {\n          id: counter,\n          serialno: device.id\n        };\n        data.push(item);\n        counter += 1;\n      });\n      return data;\n    };\n\n    _this4.handleRequestSort = function (event, property) {\n      var orderBy = property;\n      var order = 'desc';\n\n      if (_this4.state.orderBy === property && _this4.state.order === 'desc') {\n        order = 'asc';\n      }\n\n      _this4.setState({\n        order: order,\n        orderBy: orderBy\n      });\n    };\n\n    _this4.handleSelectAllClick = function (event) {\n      if (event.target.checked) {\n        _this4.setState(function (state) {\n          return {\n            selected: state.data.map(function (n) {\n              return n.id;\n            })\n          };\n        });\n\n        return;\n      }\n\n      _this4.setState({\n        selected: []\n      });\n    };\n\n    _this4.handleClick = function (event, id, serialno) {\n      var selected = _this4.state.selected;\n      var selectedIndex = selected.indexOf(id);\n      if (selectedIndex === -1) selectedIndex = selected.indexOf(serialno);\n      var newSelected = [];\n\n      if (selectedIndex === -1) {\n        newSelected[0] = id;\n      } else if (selectedIndex === 0) {\n        newSelected = newSelected.concat(selected.slice(1));\n      } else if (selectedIndex === selected.length - 1) {\n        newSelected = newSelected.concat(selected.slice(0, -1));\n      } else if (selectedIndex > 0) {\n        newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1));\n      }\n\n      _this4.setState({\n        selected: newSelected\n      });\n\n      if (newSelected.length === 1) {\n        var data = _this4.state.data;\n        var chosenBeacon = [data[newSelected[0]].serialno];\n\n        _this4.props.assignBeacon(chosenBeacon);\n      } else {\n        var _chosenBeacon = [];\n\n        _this4.props.assignBeacon(_chosenBeacon);\n      }\n    };\n\n    _this4.handleChangePage = function (event, page) {\n      _this4.setState({\n        page: page\n      });\n    };\n\n    _this4.handleChangeRowsPerPage = function (event) {\n      _this4.setState({\n        rowsPerPage: event.target.value\n      });\n    };\n\n    _this4.handleOpen = function () {\n      _this4.setState({\n        open: true\n      });\n    };\n\n    _this4.handleClose = function () {\n      _this4.setState({\n        open: false\n      });\n    };\n\n    _this4.isSelected = function (id) {\n      return _this4.state.selected.indexOf(id) !== -1;\n    };\n\n    return _this4;\n  }\n\n  _createClass(BeaconTable, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this5 = this;\n\n      this.timer = setInterval(function () {\n        return _this5.getDeviceLogs();\n      }, 1000);\n\n      if (this.props.edit != \"\") {\n        var selected = this.props.edit.beacon;\n\n        if (selected != null && selected != \"None\") {\n          this.props.assignBeacon(selected);\n          this.setState({\n            selected: [selected]\n          });\n        }\n\n        this.setState({\n          edit: true\n        });\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      clearInterval(this.timer);\n      this.timer = null; // here...\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (this.props.beacon != prevProps.beacon) {\n        this.setState({\n          selected: this.props.beacon\n        });\n        this.forceUpdate();\n      }\n\n      if (this.props.deviceLogs !== prevProps.deviceLogs) {\n        this.filterLogs();\n      }\n\n      if (this.state.edit == true && this.props.edit == \"\") {\n        this.setState({\n          selected: []\n        });\n        this.props.assignBeacon(\"None\");\n        this.setState({\n          edit: false\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this6 = this;\n\n      var classes = this.props.classes;\n      var _this$state = this.state,\n          data = _this$state.data,\n          order = _this$state.order,\n          orderBy = _this$state.orderBy,\n          selected = _this$state.selected,\n          rowsPerPage = _this$state.rowsPerPage,\n          page = _this$state.page;\n      var emptyRows = rowsPerPage - Math.min(rowsPerPage, data.length - page * rowsPerPage);\n      return React.createElement(Paper, {\n        className: classes.root,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 419\n        },\n        __self: this\n      }, React.createElement(ConnectedAddDeviceForm, {\n        open: this.state.open,\n        handleClose: this.handleClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 420\n        },\n        __self: this\n      }), React.createElement(EnhancedTableToolbar, {\n        numSelected: selected.length,\n        handleOpen: this.handleOpen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 421\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: classes.tableWrapper,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 422\n        },\n        __self: this\n      }, React.createElement(Table, {\n        className: classes.table,\n        \"aria-labelledby\": \"tableTitle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 423\n        },\n        __self: this\n      }, React.createElement(EnhancedTableHead, {\n        numSelected: selected.length,\n        order: order,\n        orderBy: orderBy,\n        onSelectAllClick: this.handleSelectAllClick,\n        onRequestSort: this.handleRequestSort,\n        rowCount: data.length,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 424\n        },\n        __self: this\n      }), React.createElement(TableBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 432\n        },\n        __self: this\n      }, stableSort(data, getSorting(order, orderBy)).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(function (n) {\n        var isSelected = _this6.isSelected(n.id);\n\n        if (isSelected == false) {\n          isSelected = _this6.isSelected(n.serialno);\n        }\n\n        return React.createElement(TableRow, {\n          hover: true,\n          onClick: function onClick(event) {\n            return _this6.handleClick(event, n.id, n.serialno);\n          },\n          role: \"checkbox\",\n          \"aria-checked\": isSelected,\n          tabIndex: -1,\n          key: n.id,\n          selected: isSelected,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 442\n          },\n          __self: this\n        }, React.createElement(TableCell, {\n          style: {\n            width: '1.5rem'\n          },\n          padding: \"checkbox\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 451\n          },\n          __self: this\n        }, React.createElement(Checkbox, {\n          checked: isSelected,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 452\n          },\n          __self: this\n        })), React.createElement(TableCell, {\n          component: \"th\",\n          scope: \"row\",\n          padding: \"none\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 454\n          },\n          __self: this\n        }, n.serialno));\n      }), emptyRows > 0 && React.createElement(TableRow, {\n        style: {\n          height: 49 * emptyRows\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 462\n        },\n        __self: this\n      }, React.createElement(TableCell, {\n        colSpan: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 463\n        },\n        __self: this\n      }))))), React.createElement(TablePagination, {\n        component: \"div\",\n        count: data.length,\n        rowsPerPage: rowsPerPage,\n        page: page,\n        rowsPerPageOptions: [5, 10, 15],\n        backIconButtonProps: {\n          'aria-label': 'Previous Page'\n        },\n        nextIconButtonProps: {\n          'aria-label': 'Next Page'\n        },\n        onChangePage: this.handleChangePage,\n        onChangeRowsPerPage: this.handleChangeRowsPerPage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 469\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return BeaconTable;\n}(React.Component);\n\nBeaconTable.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nvar ConnectedBeaconTable = connect(mapStateToProps, mapDispatchToProps)(BeaconTable);\nexport default withStyles(styles)(ConnectedBeaconTable);","map":{"version":3,"sources":["/Users/jermz/Desktop/eclipse-workspace/medicalWebsite/src/BeaconTable.js"],"names":["React","classNames","PropTypes","withStyles","Table","TableBody","TableCell","TableHead","TablePagination","TableRow","TableSortLabel","Toolbar","Typography","Paper","Checkbox","IconButton","Tooltip","DeleteIcon","FilterListIcon","AddIcon","lighten","connect","assignBeacon","fetchDeviceLocations","ConnectedAddDeviceForm","axios","restUrlHTTPS","mapDispatchToProps","dispatch","beacon","devices","mapStateToProps","state","patients","assets","staff","deviceLogs","edit","counter","createData","serialno","battery","id","desc","a","b","orderBy","stableSort","array","cmp","stabilizedThis","map","el","index","sort","order","getSorting","rows","numeric","disablePadding","label","EnhancedTableHead","createSortHandler","property","event","props","onRequestSort","onSelectAllClick","numSelected","rowCount","row","Component","propTypes","number","isRequired","func","string","toolbarStyles","theme","root","paddingRight","spacing","unit","highlight","palette","type","color","secondary","main","backgroundColor","light","text","primary","dark","spacer","flex","actions","title","paddingTop","EnhancedTableToolbar","handleOpen","classes","object","styles","width","marginTop","table","minWidth","tableWrapper","overflowX","BeaconTable","selected","data","page","rowsPerPage","open","getDeviceLogs","promise","method","url","headers","then","filterLogs","filteredLogs","mobileDevices","device","checkBeacon","forEach","patient","asset","charAt","push","setState","item","handleRequestSort","handleSelectAllClick","target","checked","n","handleClick","selectedIndex","indexOf","newSelected","concat","slice","length","chosenBeacon","handleChangePage","handleChangeRowsPerPage","value","handleClose","isSelected","timer","setInterval","clearInterval","prevProps","forceUpdate","emptyRows","Math","min","height","ConnectedBeaconTable"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport classNames from 'classnames';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\nimport AddIcon from '@material-ui/icons/Add'\r\nimport { lighten } from '@material-ui/core/styles/colorManipulator';\r\nimport { connect } from \"react-redux\";\r\nimport { assignBeacon, fetchDeviceLocations } from \"./actions/index\";\r\nimport ConnectedAddDeviceForm from \"./AddDeviceForm\"\r\nimport axios from 'axios'\r\n\r\n\r\nconst restUrlHTTPS = `http://137.132.165.139:3000/api`;\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    assignBeacon: beacon => dispatch(assignBeacon(beacon)),\r\n    fetchDeviceLocations: devices => dispatch(fetchDeviceLocations(devices)),\r\n  };\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    patients: state.patients,\r\n    assets: state.assets,\r\n    staff: state.staff,\r\n    deviceLogs: state.deviceLogs,\r\n    edit: state.edit,\r\n    beacon: state.beacon,\r\n  };\r\n};\r\n\r\n\r\n\r\nlet counter = 0;\r\nfunction createData(serialno, battery) {\r\n  counter += 1;\r\n  return { id: counter, serialno, battery };\r\n}\r\n\r\nfunction desc(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction stableSort(array, cmp) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = cmp(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map(el => el[0]);\r\n}\r\n\r\nfunction getSorting(order, orderBy) {\r\n  return order === 'desc' ? (a, b) => desc(a, b, orderBy) : (a, b) => -desc(a, b, orderBy);\r\n}\r\n\r\n// { id: 'battery', numeric: false, disablePadding: false, label: 'Battery Life (%)' },\r\nconst rows = [\r\n  { id: 'serialno', numeric: false, disablePadding: true, label: 'Serial No' },\r\n\r\n];\r\n\r\nclass EnhancedTableHead extends React.Component {\r\n  createSortHandler = property => event => {\r\n    this.props.onRequestSort(event, property);\r\n  };\r\n\r\n  render() {\r\n    const { onSelectAllClick, order, orderBy, numSelected, rowCount } = this.props;\r\n\r\n    return (\r\n      <TableHead>\r\n        <TableRow>\r\n          <TableCell padding=\"checkbox\">\r\n            {/*<Checkbox\r\n              indeterminate={numSelected > 0 && numSelected < rowCount}\r\n              checked={numSelected === rowCount}\r\n              onChange={onSelectAllClick}\r\n            /> */}\r\n          </TableCell>\r\n          {rows.map(row => {\r\n            return (\r\n              <TableCell\r\n                key={row.id}\r\n                numeric={row.numeric}\r\n                padding={row.disablePadding ? 'none' : 'default'}\r\n                sortDirection={orderBy === row.id ? order : false}\r\n              >\r\n                <Tooltip\r\n                  title=\"Sort\"\r\n                  placement={row.numeric ? 'bottom-end' : 'bottom-start'}\r\n                  enterDelay={300}\r\n                >\r\n                  <TableSortLabel\r\n                    active={orderBy === row.id}\r\n                    direction={order}\r\n                    onClick={this.createSortHandler(row.id)}\r\n                  >\r\n                    {row.label}\r\n                  </TableSortLabel>\r\n                </Tooltip>\r\n              </TableCell>\r\n            );\r\n          }, this)}\r\n        </TableRow>\r\n      </TableHead>\r\n    );\r\n  }\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.string.isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst toolbarStyles = theme => ({\r\n  root: {\r\n    paddingRight: theme.spacing.unit,\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  spacer: {\r\n    flex: '1 1 100%',\r\n  },\r\n  actions: {\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  title: {\r\n    paddingTop: '.5em',\r\n    flex: '0 0 auto',\r\n  },\r\n});\r\n\r\nclass EnhancedTableToolbar extends React.Component {\r\n\r\nhandleOpen = () => {\r\n  this.props.handleOpen()\r\n}\r\nrender() {\r\n  const { numSelected, classes } = this.props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={classNames(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      <div className={classes.title}>\r\n        {numSelected > 0 ? (\r\n          <Typography color=\"inherit\" variant=\"subtitle1\">\r\n            {numSelected} selected\r\n          </Typography>\r\n        ) : ([\r\n          <Typography variant=\"h6\" id=\"tableTitle\">\r\n            Available Beacons\r\n          </Typography>,\r\n          <Typography variant=\"caption\" id=\"tableSubtitle\">\r\n            Optional\r\n          </Typography>\r\n        ]\r\n        )}\r\n      </div>\r\n      <div className={classes.spacer} />\r\n      <div className={classes.actions}>\r\n        {numSelected > 0 ? (\r\n          null\r\n        ) : (\r\n          <Tooltip title=\"Add Beacon\">\r\n            <IconButton aria-label=\"Add\" onClick={this.handleOpen}>\r\n              <AddIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n        )}\r\n      </div>\r\n    </Toolbar>\r\n  );\r\n}\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nEnhancedTableToolbar = withStyles(toolbarStyles)(EnhancedTableToolbar);\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n    marginTop: theme.spacing.unit * 3,\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: 'auto',\r\n  },\r\n});\r\n\r\nclass BeaconTable extends React.Component {\r\n  state = {\r\n    order: 'asc',\r\n    orderBy: 'serialno',\r\n    selected: [],\r\n    data: [\r\n    ],\r\n    page: 0,\r\n    rowsPerPage: 5,\r\n    open: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.timer = setInterval(()=> this.getDeviceLogs(), 1000);\r\n    if(this.props.edit != \"\") {\r\n      let selected = this.props.edit.beacon;\r\n      if (selected != null && selected != \"None\") {\r\n        this.props.assignBeacon( selected )\r\n        this.setState({selected: [selected]})\r\n      }\r\n      this.setState({edit: true})\r\n    }\r\n  }\r\n\r\n  getDeviceLogs = (dispatch) => {\r\n    let promise = axios({\r\n      method:   'get',\r\n      url:      `${restUrlHTTPS}/Devices/logs`,\r\n      headers:  {'Content-Type': 'application/json'},\r\n    }).then (data => {\r\n        this.props.fetchDeviceLocations(data.data)\r\n      }\r\n    )\r\n    return promise;\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.timer)\r\n    this.timer = null; // here...\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if(this.props.beacon != prevProps.beacon) {\r\n      this.setState({selected: this.props.beacon})\r\n      this.forceUpdate()\r\n    }\r\n    if(this.props.deviceLogs !== prevProps.deviceLogs) {\r\n      this.filterLogs()\r\n    }\r\n    if(this.state.edit == true && this.props.edit == \"\") {\r\n      this.setState({selected : []})\r\n      this.props.assignBeacon( \"None\" )\r\n      this.setState({edit : false})\r\n    }\r\n  }\r\n\r\n  filterLogs = () => {\r\n    let filteredLogs = this.props.deviceLogs\r\n    let mobileDevices = []\r\n    filteredLogs.map(device => {\r\n      let checkBeacon = false\r\n      this.props.patients.forEach(patient => {\r\n        if(device.id == patient.beacon) {\r\n          checkBeacon = true\r\n        }\r\n      })\r\n\r\n      this.props.assets.forEach(asset => {\r\n        if(device.id == asset.beacon) {\r\n          checkBeacon = true\r\n        }\r\n      })\r\n\r\n      this.props.staff.forEach(staff => {\r\n        if(device.id == staff.beacon) {\r\n          checkBeacon = true\r\n        }\r\n      })\r\n      if(checkBeacon == false && device.id.charAt(0) == 'b') {\r\n        mobileDevices.push(device)\r\n\r\n      }\r\n\r\n      if(checkBeacon == true && this.props.edit.beacon == device.id) {\r\n        mobileDevices.push(device)\r\n      }\r\n    })\r\n\r\n    mobileDevices = this.createData(mobileDevices)\r\n    this.setState({data: mobileDevices})\r\n\r\n  }\r\n\r\n  createData = (devices) => {\r\n    let data = []\r\n    let counter = 0\r\n    devices.forEach(device => {\r\n      let item = {id: counter, serialno: device.id }\r\n      data.push(item)\r\n      counter += 1;\r\n    })\r\n\r\n    return data;\r\n  }\r\n\r\n  handleRequestSort = (event, property) => {\r\n    const orderBy = property;\r\n    let order = 'desc';\r\n\r\n    if (this.state.orderBy === property && this.state.order === 'desc') {\r\n      order = 'asc';\r\n    }\r\n\r\n    this.setState({ order, orderBy });\r\n  };\r\n\r\n  handleSelectAllClick = event => {\r\n    if (event.target.checked) {\r\n      this.setState(state => ({ selected: state.data.map(n => n.id) }));\r\n      return;\r\n    }\r\n    this.setState({ selected: [] });\r\n  };\r\n\r\n  handleClick = (event, id, serialno) => {\r\n    const { selected } = this.state;\r\n    let selectedIndex = selected.indexOf(id);\r\n    if(selectedIndex === -1)\r\n      selectedIndex = selected.indexOf(serialno)\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected[0] = id;\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1),\r\n      );\r\n    }\r\n\r\n    this.setState({ selected: newSelected });\r\n    if(newSelected.length === 1) {\r\n      let data = this.state.data;\r\n      let chosenBeacon = [data[newSelected[0]].serialno]\r\n\r\n      this.props.assignBeacon( chosenBeacon );\r\n\r\n    } else {\r\n      let chosenBeacon = []\r\n      this.props.assignBeacon( chosenBeacon );\r\n    }\r\n\r\n  };\r\n\r\n  handleChangePage = (event, page) => {\r\n    this.setState({ page });\r\n  };\r\n\r\n  handleChangeRowsPerPage = event => {\r\n    this.setState({ rowsPerPage: event.target.value });\r\n  };\r\n\r\n  handleOpen = () => {\r\n    this.setState({open: true})\r\n  }\r\n\r\n  handleClose = () => {\r\n    this.setState({open: false})\r\n  }\r\n\r\n\r\n\r\n  isSelected = id => this.state.selected.indexOf(id) !== -1;\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const { data, order, orderBy, selected, rowsPerPage, page } = this.state;\r\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, data.length - page * rowsPerPage);\r\n\r\n    return (\r\n      <Paper className={classes.root}>\r\n        <ConnectedAddDeviceForm open={this.state.open} handleClose={this.handleClose} />\r\n        <EnhancedTableToolbar numSelected={selected.length}  handleOpen={this.handleOpen}/>\r\n        <div className={classes.tableWrapper}>\r\n          <Table className={classes.table} aria-labelledby=\"tableTitle\">\r\n            <EnhancedTableHead\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={this.handleSelectAllClick}\r\n              onRequestSort={this.handleRequestSort}\r\n              rowCount={data.length}\r\n            />\r\n            <TableBody>\r\n              {stableSort(data, getSorting(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map(n => {\r\n                  let isSelected = this.isSelected(n.id);\r\n                  if(isSelected == false) {\r\n                    isSelected = this.isSelected(n.serialno)\r\n                  }\r\n\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      onClick={event => this.handleClick(event, n.id, n.serialno)}\r\n                      role=\"checkbox\"\r\n                      aria-checked={isSelected}\r\n                      tabIndex={-1}\r\n                      key={n.id}\r\n                      selected={isSelected}\r\n                    >\r\n                      <TableCell style={{width: '1.5rem'}} padding=\"checkbox\">\r\n                        <Checkbox checked={isSelected} />\r\n                      </TableCell>\r\n                      <TableCell component=\"th\" scope=\"row\" padding=\"none\">\r\n                        {n.serialno}\r\n                      </TableCell>\r\n                      {/*<TableCell padding=\"default\">{n.battery}</TableCell>*/}\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: 49 * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </div>\r\n        <TablePagination\r\n          component=\"div\"\r\n          count={data.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          rowsPerPageOptions={[5, 10, 15]}\r\n          backIconButtonProps={{\r\n            'aria-label': 'Previous Page',\r\n          }}\r\n          nextIconButtonProps={{\r\n            'aria-label': 'Next Page',\r\n          }}\r\n          onChangePage={this.handleChangePage}\r\n          onChangeRowsPerPage={this.handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n    );\r\n  }\r\n}\r\n\r\nBeaconTable.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nconst ConnectedBeaconTable = connect(mapStateToProps, mapDispatchToProps)(BeaconTable);\r\n\r\nexport default withStyles(styles)(ConnectedBeaconTable);\r\n"]},"metadata":{},"sourceType":"module"}