{"ast":null,"code":"import _objectSpread from \"/Users/jermz/Desktop/eclipse-workspace/medicalWebsite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/jermz/Desktop/eclipse-workspace/medicalWebsite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jermz/Desktop/eclipse-workspace/medicalWebsite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jermz/Desktop/eclipse-workspace/medicalWebsite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jermz/Desktop/eclipse-workspace/medicalWebsite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jermz/Desktop/eclipse-workspace/medicalWebsite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/jermz/Desktop/eclipse-workspace/medicalWebsite/src/PlaybackRespirationChart.js\";\nimport React from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { withStyles } from \"@material-ui/core/styles\";\nimport 'hammerjs';\nimport * as pan from 'chartjs-plugin-zoom';\nimport { Charts, ChartContainer, ChartRow, EventMarker, YAxis, LineChart, Resizable } from \"react-timeseries-charts\";\nimport { TimeSeries, TimeRange, time } from \"pondjs\";\nimport moment from 'moment';\n\nvar styles = function styles(theme) {\n  return {\n    \"chart-container\": {\n      height: 400\n    }\n  };\n};\n\nvar PlaybackRespirationChart =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(PlaybackRespirationChart, _React$Component);\n\n  function PlaybackRespirationChart() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, PlaybackRespirationChart);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(PlaybackRespirationChart)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      chartData: {\n        name: \"traffic\",\n        columns: [\"time\", \"value\"],\n        points: null\n      },\n      timerange: \"\",\n      tracker: null,\n      trackerValue: \"--\",\n      trackerEvent: null,\n      lineChartData: {\n        datasets: [{\n          label: \"BTC-USD\",\n          backgroundColor: \"rgba(0, 0, 0, 0)\",\n          borderColor: _this.props.theme.palette.primary.main,\n          pointBackgroundColor: _this.props.theme.palette.secondary.main,\n          pointBorderColor: _this.props.theme.palette.secondary.main,\n          borderWidth: \"2\",\n          lineTension: 0,\n          data: []\n        }]\n      },\n      lineChartOptions: {\n        legend: {\n          display: false\n        },\n        elements: {},\n        tooltips: {\n          enabled: true\n        },\n        // Container for pan options\n        pan: {\n          enabled: true,\n          mode: 'x'\n        },\n        // Container for zoom options\n        zoom: {\n          enabled: true,\n          mode: 'x'\n        }\n      }\n    };\n\n    _this.handleTimeRangeChange = function (timerange) {\n      _this.setState({\n        timerange: timerange\n      });\n    };\n\n    _this.handleTrackerChanged = function (t) {\n      if (t) {\n        var dataSet = new TimeSeries(_this.state.chartData);\n        var e = dataSet.atTime(t);\n        var eventTime = new Date(e.begin().getTime() + (e.end().getTime() - e.begin().getTime()) / 2);\n        var eventValue = e.get(\"value\");\n        var v = \"\".concat(eventValue);\n\n        _this.setState({\n          tracker: eventTime,\n          trackerValue: v,\n          trackerEvent: e\n        });\n      } else {\n        _this.setState({\n          tracker: null,\n          trackerValue: null,\n          trackerEvent: null\n        });\n      }\n    };\n\n    _this.renderMarker = function () {\n      if (!_this.state.tracker) {\n        return React.createElement(\"g\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 153\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(EventMarker, {\n        type: \"point\",\n        axis: \"axis1\",\n        event: _this.state.trackerEvent,\n        column: \"value\",\n        markerLabel: _this.state.trackerValue,\n        markerLabelAlign: \"left\",\n        markerLabelStyle: {\n          fill: \"black\"\n        },\n        markerRadius: 3,\n        markerStyle: {\n          fill: \"black\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(PlaybackRespirationChart, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      if (this.props.vitals !== prevProps.vitals && this.props.vitals != null && this.props.vitals.length != 0) {\n        var vitals = this.props.vitals;\n        var oldBtcDataSet = this.state.lineChartData.datasets[0]; // let value = vitals[vitals.length - 1]\n\n        var chartpoints = [];\n        var dataset = this.state.chartData;\n        var labels = [];\n\n        var newDataSet = _objectSpread({}, dataset);\n\n        var newBtcDataSet = _objectSpread({}, oldBtcDataSet);\n\n        var timeString = \"\";\n        var checkLog = [];\n        vitals.map(function (vital) {\n          var value = vital._source.resPoint;\n          var epoch = new Date(vital._source.timestamp).toLocaleString('en-GB');\n          var vitalSign = value;\n          var time = new Date(vital._source.timestamp);\n          var point = [time, value];\n          chartpoints.push(point);\n          labels.push(epoch);\n          timeString += \"\".concat(vital._source.timestamp, \" ,\");\n          checkLog.push(moment(vital._source.timestamp));\n          newBtcDataSet.data.push(vitalSign);\n        });\n        newDataSet.points = chartpoints;\n        var differenceString = \"\";\n        var difference = checkLog.map(function (value, index, array) {\n          if (array[index + 1] != null) {\n            var minus = array[index + 1] - value;\n            differenceString += \"\".concat(minus, \",\");\n          }\n        });\n        var newLineData = {\n          newDataSet: newDataSet\n        };\n\n        var newChartData = _objectSpread({}, this.state.lineChartData, {\n          datasets: [newBtcDataSet],\n          labels: labels\n        });\n\n        this.setState({\n          lineChartData: newChartData\n        });\n        this.setState({\n          chartData: newDataSet\n        });\n        var timeseries = new TimeSeries(newDataSet);\n        var timerange = timeseries.timerange();\n        this.setState({\n          timerange: timerange\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var timerange = \"\";\n      var timeseries = \"\";\n\n      if (this.state.chartData.points != null) {\n        timeseries = new TimeSeries(this.state.chartData);\n        timerange = this.state.timerange;\n      }\n\n      var style = {\n        value: {\n          normal: {\n            stroke: \"steelblue\",\n            fill: \"none\",\n            strokeWidth: 2\n          },\n          highlighted: {\n            stroke: \"#5a98cb\",\n            fill: \"none\",\n            strokeWidth: 2\n          },\n          selected: {\n            stroke: \"steelblue\",\n            fill: \"none\",\n            strokeWidth: 2\n          },\n          muted: {\n            stroke: \"steelblue\",\n            fill: \"none\",\n            opacity: 0.4,\n            strokeWidth: 2\n          }\n        }\n      };\n\n      if (this.state.chartData.points != null) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 192\n          },\n          __self: this\n        }, React.createElement(Resizable, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 195\n          },\n          __self: this\n        }, React.createElement(ChartContainer, {\n          enablePanZoom: true,\n          onTrackerChanged: this.handleTrackerChanged,\n          onTimeRangeChanged: this.handleTimeRangeChange,\n          timeRange: timerange,\n          width: 800,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 196\n          },\n          __self: this\n        }, React.createElement(ChartRow, {\n          height: \"400\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 201\n          },\n          __self: this\n        }, React.createElement(YAxis, {\n          id: \"axis1\",\n          label: \"Respiration\",\n          min: timeseries.min(),\n          max: timeseries.max(),\n          width: \"60\",\n          type: \"linear\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 202\n          },\n          __self: this\n        }), React.createElement(Charts, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 203\n          },\n          __self: this\n        }, React.createElement(LineChart, {\n          axis: \"axis1\",\n          series: timeseries,\n          style: style,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 204\n          },\n          __self: this\n        }))))));\n      } else {\n        return null;\n      }\n    }\n  }]);\n\n  return PlaybackRespirationChart;\n}(React.Component);\n\nexport default withStyles(styles, {\n  withTheme: true\n})(PlaybackRespirationChart);","map":{"version":3,"sources":["/Users/jermz/Desktop/eclipse-workspace/medicalWebsite/src/PlaybackRespirationChart.js"],"names":["React","Line","withStyles","pan","Charts","ChartContainer","ChartRow","EventMarker","YAxis","LineChart","Resizable","TimeSeries","TimeRange","time","moment","styles","theme","height","PlaybackRespirationChart","state","chartData","name","columns","points","timerange","tracker","trackerValue","trackerEvent","lineChartData","datasets","label","backgroundColor","borderColor","props","palette","primary","main","pointBackgroundColor","secondary","pointBorderColor","borderWidth","lineTension","data","lineChartOptions","legend","display","elements","tooltips","enabled","mode","zoom","handleTimeRangeChange","setState","handleTrackerChanged","t","dataSet","e","atTime","eventTime","Date","begin","getTime","end","eventValue","get","v","renderMarker","fill","prevProps","prevState","vitals","length","oldBtcDataSet","chartpoints","dataset","labels","newDataSet","newBtcDataSet","timeString","checkLog","map","vital","value","_source","resPoint","epoch","timestamp","toLocaleString","vitalSign","point","push","differenceString","difference","index","array","minus","newLineData","newChartData","timeseries","style","normal","stroke","strokeWidth","highlighted","selected","muted","opacity","min","max","Component","withTheme"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {Line} from 'react-chartjs-2';\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport 'hammerjs';\r\nimport * as pan from 'chartjs-plugin-zoom'\r\nimport { Charts, ChartContainer, ChartRow, EventMarker, YAxis, LineChart, Resizable } from \"react-timeseries-charts\";\r\nimport { TimeSeries, TimeRange, time } from \"pondjs\";\r\nimport moment from 'moment';\r\nconst styles = theme => ({\r\n  \"chart-container\": {\r\n    height: 400\r\n  }\r\n});\r\n\r\nclass PlaybackRespirationChart extends React.Component {\r\n\r\n  state = {\r\n    chartData: {\r\n      name: \"traffic\",\r\n      columns: [\"time\", \"value\"],\r\n      points: null\r\n    },\r\n    timerange: \"\",\r\n    tracker: null,\r\n    trackerValue: \"--\",\r\n    trackerEvent: null,\r\n\r\n    lineChartData: {\r\n\r\n      datasets: [\r\n        {\r\n          label: \"BTC-USD\",\r\n          backgroundColor: \"rgba(0, 0, 0, 0)\",\r\n          borderColor: this.props.theme.palette.primary.main,\r\n          pointBackgroundColor: this.props.theme.palette.secondary.main,\r\n          pointBorderColor: this.props.theme.palette.secondary.main,\r\n          borderWidth: \"2\",\r\n          lineTension: 0,\r\n          data: []\r\n        }\r\n      ]\r\n    },\r\n    lineChartOptions: {\r\n\r\n\r\n      legend: {\r\n        display: false,\r\n      },\r\n\r\n      elements: {\r\n\r\n      },\r\n      tooltips: {\r\n        enabled: true\r\n      },\r\n      // Container for pan options\r\n\tpan: {\r\n    enabled: true,\r\n  \t\t\t\t\t\tmode: 'x',\r\n\t\t\t},\r\n\r\n\t// Container for zoom options\r\n\tzoom: {\r\n    enabled: true,\r\n\r\n  mode: 'x'\r\n\t}\r\n    }\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n\r\n    if(this.props.vitals !== prevProps.vitals && this.props.vitals != null && this.props.vitals.length != 0 ) {\r\n      let vitals = this.props.vitals\r\n\r\n      const oldBtcDataSet = this.state.lineChartData.datasets[0];\r\n      // let value = vitals[vitals.length - 1]\r\n\r\n      let chartpoints = []\r\n      let dataset = this.state.chartData\r\n\r\n      let labels = []\r\n      let newDataSet = {...dataset}\r\n      const newBtcDataSet = { ...oldBtcDataSet };\r\n\r\n      let timeString = \"\";\r\n      let checkLog = []\r\n      vitals.map((vital) => {\r\n        let value = vital._source.resPoint\r\n        let epoch = new Date(vital._source.timestamp).toLocaleString('en-GB');\r\n        let vitalSign = value\r\n        let time = new Date(vital._source.timestamp)\r\n        let point = [time, value]\r\n        chartpoints.push(point)\r\n        labels.push(epoch)\r\n        timeString += `${vital._source.timestamp} ,`\r\n        checkLog.push(moment(vital._source.timestamp))\r\n        newBtcDataSet.data.push(vitalSign);\r\n      })\r\n      newDataSet.points =  chartpoints\r\n\r\n      let differenceString = \"\"\r\n      let difference = checkLog.map((value, index, array) => {\r\n        if(array[index+1] != null) {\r\n          let minus = array[index+1] - value\r\n          differenceString += `${minus},`\r\n        }\r\n      })\r\n\r\n\r\n      const newLineData = {\r\n        newDataSet\r\n      }\r\n\r\n      const newChartData = {\r\n        ...this.state.lineChartData,\r\n        datasets: [newBtcDataSet],\r\n        labels: labels\r\n      };\r\n\r\n\r\n      this.setState({ lineChartData: newChartData });\r\n      this.setState({chartData: newDataSet})\r\n\r\n      const timeseries = new TimeSeries(newDataSet);\r\n      var timerange = timeseries.timerange()\r\n      this.setState({timerange})\r\n    }\r\n\r\n  }\r\n\r\n  handleTimeRangeChange = timerange => {\r\n        this.setState({ timerange });\r\n    };\r\n\r\n    handleTrackerChanged = t => {\r\n        if (t) {\r\n            let dataSet = new TimeSeries(this.state.chartData)\r\n            const e = dataSet.atTime(t);\r\n            const eventTime = new Date(\r\n                e.begin().getTime() + (e.end().getTime() - e.begin().getTime()) / 2\r\n            );\r\n            const eventValue = e.get(\"value\");\r\n            const v = `${eventValue}`;\r\n            this.setState({ tracker: eventTime, trackerValue: v, trackerEvent: e });\r\n        } else {\r\n            this.setState({ tracker: null, trackerValue: null, trackerEvent: null });\r\n        }\r\n    };\r\n\r\n    renderMarker = () => {\r\n        if (!this.state.tracker) {\r\n            return <g />;\r\n        }\r\n\r\n\r\n        return (\r\n          <EventMarker\r\n                  type=\"point\"\r\n                  axis=\"axis1\"\r\n                  event={this.state.trackerEvent}\r\n                  column=\"value\"\r\n                  markerLabel={this.state.trackerValue}\r\n                  markerLabelAlign=\"left\"\r\n                  markerLabelStyle={{ fill: \"black\"}}\r\n                  markerRadius={3}\r\n                  markerStyle={{ fill: \"black\" }}\r\n              />\r\n            );\r\n\r\n    };\r\n\r\n  render() {\r\n\r\n    let timerange = \"\"\r\n    let timeseries = \"\"\r\n    if(this.state.chartData.points != null ) {\r\n      timeseries = new TimeSeries(this.state.chartData);\r\n      timerange = this.state.timerange;\r\n      }\r\n        const style = {\r\n          value: {\r\n              normal: {stroke: \"steelblue\", fill: \"none\", strokeWidth: 2},\r\n              highlighted: {stroke: \"#5a98cb\", fill: \"none\", strokeWidth: 2},\r\n              selected: {stroke: \"steelblue\", fill: \"none\", strokeWidth: 2},\r\n              muted: {stroke: \"steelblue\", fill: \"none\", opacity: 0.4, strokeWidth: 2}\r\n          },\r\n\r\n        };\r\n if(this.state.chartData.points != null ) {\r\n    return (\r\n      <div>\r\n\r\n        {/*<Line data={this.state.lineChartData} options ={this.state.lineChartOptions} />*/}\r\n        <Resizable>\r\n        <ChartContainer\r\n        enablePanZoom={true}\r\n        onTrackerChanged={this.handleTrackerChanged}\r\n        onTimeRangeChanged={this.handleTimeRangeChange}\r\n        timeRange={timerange} width={800}>\r\n          <ChartRow height=\"400\">\r\n              <YAxis id=\"axis1\" label=\"Respiration\" min={timeseries.min()} max={timeseries.max()} width=\"60\" type=\"linear\"/>\r\n              <Charts>\r\n                  <LineChart axis=\"axis1\" series={timeseries} style={style}/>\r\n                  {/*this.renderMarker()*/}\r\n              </Charts>\r\n          </ChartRow>\r\n      </ChartContainer>\r\n      </Resizable>\r\n      </div>\r\n    );\r\n  } else {\r\n    return null\r\n  }\r\n\r\n  }\r\n}\r\nexport default withStyles(styles, { withTheme: true })(PlaybackRespirationChart);\r\n"]},"metadata":{},"sourceType":"module"}