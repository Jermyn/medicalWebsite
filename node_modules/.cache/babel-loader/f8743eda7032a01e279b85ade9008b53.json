{"ast":null,"code":"import _classCallCheck from \"/Users/jermz/Desktop/eclipse-workspace/medicalWebsite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jermz/Desktop/eclipse-workspace/medicalWebsite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jermz/Desktop/eclipse-workspace/medicalWebsite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jermz/Desktop/eclipse-workspace/medicalWebsite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jermz/Desktop/eclipse-workspace/medicalWebsite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"/Users/jermz/Desktop/eclipse-workspace/medicalWebsite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/jermz/Desktop/eclipse-workspace/medicalWebsite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _objectWithoutProperties from \"/Users/jermz/Desktop/eclipse-workspace/medicalWebsite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/jermz/Desktop/eclipse-workspace/medicalWebsite/src/AddDeviceForm.js\";\nimport React, { Component } from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport { withStyles } from '@material-ui/core/styles';\nimport { connect } from \"react-redux\";\nimport { confirmType as _confirmType, addPatient as _addPatient, fetchMaps as _fetchMaps, editPatient as _editPatient, removePatient as _removePatient, fetchNewBeacon as _fetchNewBeacon, fetchingProcess as _fetchingProcess, fetchingDone as _fetchingDone, updateBeaconCount as _updateBeaconCount, assignBeacon as _assignBeacon } from \"./actions/index\";\nimport Card from '@material-ui/core/Card';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport TemporaryDrawer from './TemporaryDrawer';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport AddIcon from '@material-ui/icons/Add';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport classNames from 'classnames';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport BeaconTable from './BeaconTable';\nimport Scanner from './Scanner';\nimport Result from './Result';\nimport Select from 'react-select';\nimport axios from 'axios';\nimport NoSsr from '@material-ui/core/NoSsr';\nimport Paper from '@material-ui/core/Paper';\nimport Chip from '@material-ui/core/Chip';\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport StepContent from '@material-ui/core/StepContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\nvar graphqlUrlHTTPS = 'http://137.132.165.139:3000/graphql';\n\nvar styles = function styles(theme) {\n  return {\n    container: {\n      display: 'flex',\n      flexWrap: 'wrap'\n    },\n    root: {\n      flexGrow: 1\n    },\n    idPaper: {\n      float: 'left',\n      padding: '15px',\n      marginTop: '-20px',\n      marginRight: '15px',\n      borderRadius: '3px',\n      zIndex: 2,\n      backgroundColor: '#339af0',\n      //background: 'linear-gradient(60deg, #26c6da, #00acc1)',\n      boxShadow: '0 4px 20px 0 rgba(0, 0, 0,.14), 0 7px 10px -5px rgba(51, 154, 240,.4)'\n    },\n    grow: {\n      flexGrow: 1\n    },\n    card: {\n      minWidth: 200\n    },\n    title: {\n      fontSize: 14\n    },\n    pos: {\n      marginBottom: 12\n    },\n    textField: {// marginLeft: theme.spacing.unit,\n      // marginRight: theme.spacing.unit,\n    },\n    borderBox: {\n      border: '1px solid',\n      padding: '2rem',\n      borderRadius: '16px'\n    },\n    menu: {\n      width: 200\n    },\n    menuButton: {\n      marginLeft: -12,\n      marginRight: 20,\n      opacity: 0.4,\n      color: 'black'\n    },\n    align: {\n      padding: \"\".concat(theme.spacing.unit * 2, \"px \").concat(theme.spacing.unit * 3, \"px \").concat(theme.spacing.unit * 3, \"px\")\n    },\n    input: {\n      display: 'flex',\n      padding: 0\n    },\n    valueContainer: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      flex: 1,\n      alignItems: 'center',\n      overflow: 'hidden',\n      padding: '18.5px 14px'\n    },\n    noOptionsMessage: {\n      padding: \"\".concat(theme.spacing.unit, \"px \").concat(theme.spacing.unit * 2, \"px\")\n    },\n    singleValue: {\n      fontSize: 16\n    },\n    placeholder: {\n      position: 'absolute',\n      left: 2,\n      fontSize: 16,\n      padding: '18.5px 14px'\n    },\n    paper: {\n      position: 'absolute',\n      zIndex: 1,\n      marginTop: theme.spacing.unit,\n      left: 0,\n      right: 0\n    },\n    card_actions: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      marginTop: '16px'\n    }\n  };\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    beacon: state.beacon,\n    maps: state.maps,\n    edit: state.edit,\n    fetching: state.fetching,\n    beaconCounter: state.beaconCounter.count,\n    deviceLogs: state.deviceLogs\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    confirmType: function confirmType(type) {\n      return dispatch(_confirmType(type));\n    },\n    addPatient: function addPatient(patient) {\n      return dispatch(_addPatient(patient));\n    },\n    editPatient: function editPatient(patient) {\n      return dispatch(_editPatient(patient));\n    },\n    removePatient: function removePatient(patient) {\n      return dispatch(_removePatient(patient));\n    },\n    fetchMaps: function fetchMaps(maps) {\n      return dispatch(_fetchMaps(maps));\n    },\n    fetchNewBeacon: function fetchNewBeacon(count) {\n      return dispatch(_fetchNewBeacon(count));\n    },\n    fetchingProcess: function fetchingProcess(fetch) {\n      return dispatch(_fetchingProcess(fetch));\n    },\n    assignBeacon: function assignBeacon(beacon) {\n      return dispatch(_assignBeacon(beacon));\n    },\n    fetchingDone: function fetchingDone(fetch) {\n      return dispatch(_fetchingDone(fetch));\n    },\n    updateBeaconCount: function updateBeaconCount(count) {\n      return dispatch(_updateBeaconCount(count));\n    }\n  };\n};\n\nfunction NoOptionsMessage(props) {\n  return React.createElement(Typography, Object.assign({\n    color: \"textSecondary\",\n    className: props.selectProps.classes.noOptionsMessage\n  }, props.innerProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }), props.children);\n}\n\nfunction inputComponent(_ref) {\n  var inputRef = _ref.inputRef,\n      props = _objectWithoutProperties(_ref, [\"inputRef\"]);\n\n  return React.createElement(\"div\", Object.assign({\n    ref: inputRef\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185\n    },\n    __self: this\n  }));\n}\n\nfunction Control(props) {\n  return React.createElement(TextField, Object.assign({\n    fullWidth: true,\n    variant: \"outlined\",\n    InputProps: {\n      inputComponent: inputComponent,\n      inputProps: _objectSpread({\n        className: props.selectProps.classes.input,\n        inputRef: props.innerRef,\n        children: props.children\n      }, props.innerProps)\n    }\n  }, props.selectProps.textFieldProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190\n    },\n    __self: this\n  }));\n}\n\nfunction Option(props) {\n  return React.createElement(MenuItem, Object.assign({\n    buttonRef: props.innerRef,\n    selected: props.isFocused,\n    component: \"div\",\n    style: {\n      fontWeight: props.isSelected ? 500 : 400\n    }\n  }, props.innerProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209\n    },\n    __self: this\n  }), props.children);\n}\n\nfunction Placeholder(props) {\n  return React.createElement(Typography, Object.assign({\n    color: \"textSecondary\",\n    className: props.selectProps.classes.placeholder\n  }, props.innerProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225\n    },\n    __self: this\n  }), props.children);\n}\n\nfunction SingleValue(props) {\n  return React.createElement(Typography, Object.assign({\n    className: props.selectProps.classes.singleValue\n  }, props.innerProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237\n    },\n    __self: this\n  }), props.children);\n}\n\nfunction ValueContainer(props) {\n  return React.createElement(\"div\", {\n    className: props.selectProps.classes.valueContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244\n    },\n    __self: this\n  }, props.children);\n}\n\nfunction MultiValue(props) {\n  return React.createElement(Chip, {\n    tabIndex: -1,\n    label: props.children,\n    className: classNames(props.selectProps.classes.chip, _defineProperty({}, props.selectProps.classes.chipFocused, props.isFocused)),\n    onDelete: props.removeProps.onClick,\n    deleteIcon: React.createElement(CancelIcon, Object.assign({}, props.removeProps, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256\n      },\n      __self: this\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249\n    },\n    __self: this\n  });\n}\n\nfunction SubMenu(props) {\n  return React.createElement(Paper, Object.assign({\n    square: true,\n    className: props.selectProps.classes.paper\n  }, props.innerProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263\n    },\n    __self: this\n  }), props.children);\n}\n\nvar components = {\n  Control: Control,\n  SubMenu: SubMenu,\n  MultiValue: MultiValue,\n  NoOptionsMessage: NoOptionsMessage,\n  Option: Option,\n  Placeholder: Placeholder,\n  SingleValue: SingleValue,\n  ValueContainer: ValueContainer\n};\n\nvar AddDeviceForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AddDeviceForm, _Component);\n\n  function AddDeviceForm(props) {\n    var _this;\n\n    _classCallCheck(this, AddDeviceForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AddDeviceForm).call(this, props));\n\n    _this.noConnection = function () {\n      _this.props.fetchingDone();\n\n      var errorMessage = React.createElement(\"div\", {\n        style: {\n          marginTop: '1em',\n          textAlign: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332\n        },\n        __self: this\n      }, \" Unable to connect to beacon. \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332\n        },\n        __self: this\n      }), \"Please check Gimbal if it is successfully activated \");\n\n      _this.setState({\n        errorMessage: errorMessage\n      });\n\n      _this.deleteDevice();\n    };\n\n    _this.verifyConnection = function () {\n      var found = false;\n      var checkId = \"b\".concat(_this.props.beaconCounter);\n      var deviceLogs = _this.props.deviceLogs;\n      deviceLogs.map(function (device) {\n        if (device.id == checkId) {\n          found = true;\n\n          _this.props.assignBeacon([checkId]);\n        }\n      });\n\n      if (found == true) {\n        _this.setState({\n          fetchAttempts: 0\n        });\n\n        _this.props.fetchingDone();\n\n        clearInterval(_this.timer);\n        _this.timer = null; // here...\n\n        _this.props.updateBeaconCount(_this.props.beaconCounter);\n\n        _this.handleClose();\n      } else {\n        var fetchAttempts = _this.state.fetchAttempts - 1;\n\n        _this.setState({\n          fetchAttempts: fetchAttempts\n        });\n      }\n    };\n\n    _this.handleClickOpen = function () {\n      _this.setState({\n        open: true\n      });\n    };\n\n    _this.handleClose = function () {\n      _this.props.handleClose();\n    };\n\n    _this.createOptions = function (maps) {\n      var options = maps.map(function (map) {\n        return {\n          value: map.id,\n          label: map.id\n        };\n      });\n\n      _this.setState({\n        options: options\n      });\n    };\n\n    _this.fetch = function (dispatch) {\n      var query = \"\\n      query {\\n        maps {\\n          id\\n          scale\\n          coordinates\\n          imageURL\\n          navMesh\\n          navPath\\n          pois\\n        }\\n      }\\n    \";\n\n      _this.request({\n        query: query\n      }).then(function (data) {\n        _this.props.fetchMaps(data.data.data.maps);\n\n        _this.createOptions(data.data.data.maps);\n      });\n    };\n\n    _this.request = function (_ref2) {\n      var query = _ref2.query,\n          variables = _ref2.variables;\n      var promise = axios({\n        method: 'post',\n        url: \"\".concat(graphqlUrlHTTPS),\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        data: JSON.stringify({\n          query: query,\n          variables: variables\n        })\n      });\n      return promise;\n    };\n\n    _this.toggleDrawer = function () {\n      _this.setState({\n        drawer: true\n      });\n    };\n\n    _this.handleMenu = function (event) {\n      _this.setState({\n        drawer: false\n      });\n\n      _this.setState({\n        anchorEl: event.currentTarget\n      });\n    };\n\n    _this.packageDevice = function () {\n      var device = {};\n\n      if (_this.state.id != \"\") {\n        device.device = {\n          id: _this.state.id,\n          type: 'mobile'\n        };\n      }\n\n      if (_this.state.beaconId != \"\") {\n        device.beacon = {\n          id: _this.state.beaconId\n        };\n\n        if (_this.state.measuredPower != \"\") {\n          device.beacon.measuredPower = _this.state.measuredPower;\n        }\n      }\n\n      if (_this.state.gattId != \"\") {\n        device.gatt = {\n          id: _this.state.gattId\n        };\n\n        if (_this.state.gattProfile != \"\") {\n          device.gatt.profile = JSON.parse(_this.state.gattProfile);\n        }\n      }\n\n      return device;\n    };\n\n    _this.deleteDevice = function () {\n      var id = _this.state.id;\n      var variables = {\n        id: id\n      };\n      var query = \"\\n      mutation ($id: String!) {\\n        deleteDevice(id: $id) { id }\\n      }\\n    \";\n\n      _this.requestPost({\n        query: query,\n        variables: variables\n      });\n    };\n\n    _this.createDevice = function (device) {\n      var variables = {\n        input: device\n      };\n      var query = \"\\n        mutation ($input: CreateDeviceInput!) {\\n          createDevice(input: $input) { id }\\n        }\\n      \";\n\n      _this.requestPost({\n        query: query,\n        variables: variables\n      });\n    };\n\n    _this.requestPost = function (_ref3) {\n      var query = _ref3.query,\n          variables = _ref3.variables;\n      var graphqlUrl = \"http://137.132.165.139:3000/graphql\";\n      axios({\n        method: 'post',\n        url: \"\".concat(graphqlUrl),\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        data: JSON.stringify({\n          query: query,\n          variables: variables\n        })\n      });\n    };\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n\n      _this.props.fetchingProcess();\n\n      var type = _this.state.type;\n\n      _this.setState({\n        fetchAttempts: 30\n      });\n\n      var device = _this.packageDevice();\n\n      _this.createDevice(device);\n\n      _this.timer = setInterval(function () {\n        return _this.verifyConnection();\n      }, 1000);\n    };\n\n    _this.handleLoading = function () {\n      _this.setState(function (state) {\n        return {\n          loading: !state.loading\n        };\n      });\n    };\n\n    _this.handleChange = function (prop) {\n      return function (event) {\n        if (prop == \"ward\") _this.setState(_defineProperty({}, prop, event));else {\n          _this.setState(_defineProperty({}, prop, event.target.value));\n        }\n      };\n    };\n\n    _this.checkGimbal = function () {\n      var gimbalUrl = \"https://manager.gimbal.com/api/beacons\";\n      window.open(\"https://manager.gimbal.com/login/users/sign_in\");\n    };\n\n    _this.cancel = function () {\n      _this.props.history.push('/home');\n    };\n\n    _this._scan = function (e) {\n      e.preventDefault();\n\n      _this.setState({\n        scanning: !_this.state.scanning\n      });\n    };\n\n    _this._onDetected = function (result) {\n      var results = _this.state.results;\n      if (results.indexOf(result) < 0) _this.setState({\n        results: _this.state.results.concat([result])\n      });\n    };\n\n    _this.renderLoading = function () {\n      var loading = React.createElement(\"div\", {\n        style: {\n          textAlign: 'center',\n          marginTop: '1em'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 522\n        },\n        __self: this\n      }, \" \", React.createElement(CircularProgress, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 522\n        },\n        __self: this\n      }), \"  \", React.createElement(Typography, {\n        variant: \"subtitle2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 522\n        },\n        __self: this\n      }, \" Verifying ... \"));\n      return loading;\n    };\n\n    _this.state = {\n      anchorEl: null,\n      auth: true,\n      id: \"\",\n      beaconId: \"\",\n      measuredPower: \"-63\",\n      gattId: \"\",\n      gattProfile: \"\",\n      open: false,\n      beacon: _this.props.beacon,\n      scanning: false,\n      results: [],\n      options: [],\n      edit: false,\n      step: 1,\n      fetchAttempts: -1,\n      errorMessage: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(AddDeviceForm, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.fetchNewBeacon();\n\n      if (this.props.open != \"\" && this.props.open != null) {\n        this.setState({\n          open: this.props.open\n        });\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      if (this.props.open !== \"\" && this.props.open != null && this.props.open !== this.state.open) {\n        this.setState({\n          open: this.props.open\n        });\n      }\n\n      if (this.props.beaconCounter !== \"\" && this.props.beaconCounter != null && this.props.beaconCounter !== prevProps.beaconCounter) {\n        var beaconId = \"3:\".concat(this.props.beaconCounter);\n        var id = \"b\".concat(this.props.beaconCounter);\n        this.setState({\n          beaconId: beaconId\n        });\n        this.setState({\n          id: id\n        });\n      }\n\n      if (this.props.fetching == true && this.state.fetchAttempts == 0) {\n        this.noConnection();\n        clearInterval(this.timer);\n        this.timer = null; // here...\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          classes = _this$props.classes,\n          theme = _this$props.theme;\n      var _this$state = this.state,\n          anchorEl = _this$state.anchorEl,\n          auth = _this$state.auth;\n      var open = Boolean(anchorEl);\n      var selectStyles = {\n        input: function input(base) {\n          return _objectSpread({}, base, {\n            color: theme.palette.text.primary,\n            '& input': {\n              font: 'inherit'\n            }\n          });\n        }\n      };\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 543\n        },\n        __self: this\n      }, React.createElement(Dialog, {\n        open: this.state.open,\n        onClose: this.handleClose,\n        \"aria-labelledby\": \"form-dialog-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 544\n        },\n        __self: this\n      }, React.createElement(DialogTitle, {\n        id: \"form-dialog-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 549\n        },\n        __self: this\n      }, \"Add Beacon\"), React.createElement(DialogContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 550\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        spacing: 0,\n        direction: \"column\",\n        alignItems: \"center\",\n        justify: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 551\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 558\n        },\n        __self: this\n      }, React.createElement(Card, {\n        className: classes.card,\n        style: {\n          display: 'inline-block'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 559\n        },\n        __self: this\n      }, React.createElement(CardContent, {\n        style: {\n          textAlign: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 560\n        },\n        __self: this\n      }, React.createElement(Paper, {\n        className: classes.idPaper,\n        elevation: 10,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 561\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 562\n        },\n        __self: this\n      }, React.createElement(LocationOnIcon, {\n        style: {\n          fontSize: '30px',\n          color: 'white'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 563\n        },\n        __self: this\n      }))), React.createElement(Typography, {\n        color: \"textSecondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 566\n        },\n        __self: this\n      }, \"Beacon ID\"), React.createElement(Typography, {\n        variant: \"h5\",\n        component: \"h2\",\n        style: {\n          fontSize: '1.825em'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 569\n        },\n        __self: this\n      }, \"3:\", this.props.beaconCounter != \"\" ? this.props.beaconCounter : null), this.props.fetching ? this.renderLoading() : null), this.props.fetching ? null : React.createElement(CardActions, {\n        className: classes.card_actions,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 575\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        justify: \"center\",\n        container: true,\n        spacing: 24,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 576\n        },\n        __self: this\n      }, React.createElement(Button, {\n        size: \"small\",\n        onClick: this.checkGimbal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 581\n        },\n        __self: this\n      }, \"Gimbal Site\")))))), React.createElement(Typography, {\n        variant: \"subtitle1\",\n        style: {\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 588\n        },\n        __self: this\n      }, \" \", this.state.errorMessage, \"  \"), React.createElement(Typography, {\n        variant: \"body1\",\n        component: \"p\",\n        paragraph: true,\n        style: {\n          marginTop: '16px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 590\n        },\n        __self: this\n      }, \"1. Copy the Beacon ID provided and open the Gimbal Site by clicking on the 'Gimbal Site' button.\"), React.createElement(Typography, {\n        variant: \"body1\",\n        component: \"p\",\n        paragraph: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 594\n        },\n        __self: this\n      }, \"2. Login to the Gimbal Site and navigate to \", React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 595\n        },\n        __self: this\n      }, \" Beacons > Beacons Management \")), React.createElement(Typography, {\n        variant: \"body1\",\n        component: \"p\",\n        paragraph: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 598\n        },\n        __self: this\n      }, \"3. Click on \", React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 599\n        },\n        __self: this\n      }, \"+ Activate Beacon\"), \" on the top of the table of beacons\"), React.createElement(Typography, {\n        variant: \"body1\",\n        component: \"p\",\n        paragraph: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 602\n        },\n        __self: this\n      }, \"4. Fill in the Beacon ID under the Beacon Name and the Factory ID can be found in the Beacon itself. Submit the form and wait and once successfully activated, return to this application.\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 607\n        },\n        __self: this\n      })), React.createElement(DialogActions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 670\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.handleClose,\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 671\n        },\n        __self: this\n      }, \"Cancel\"), React.createElement(Button, {\n        onClick: this.handleSubmit,\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 674\n        },\n        __self: this\n      }, \"Next\"))));\n    }\n  }]);\n\n  return AddDeviceForm;\n}(Component);\n\nvar ConnectedAddDeviceForm = connect(mapStateToProps, mapDispatchToProps)(AddDeviceForm);\nexport default withStyles(styles, {\n  withTheme: true\n})(ConnectedAddDeviceForm);","map":{"version":3,"sources":["/Users/jermz/Desktop/eclipse-workspace/medicalWebsite/src/AddDeviceForm.js"],"names":["React","Component","AppBar","Button","TextField","Grid","Typography","Toolbar","withStyles","connect","confirmType","addPatient","fetchMaps","editPatient","removePatient","fetchNewBeacon","fetchingProcess","fetchingDone","updateBeaconCount","assignBeacon","Card","CircularProgress","TemporaryDrawer","IconButton","MenuIcon","AddIcon","AccountCircle","MenuItem","Menu","FormControl","FormControlLabel","classNames","InputAdornment","Radio","RadioGroup","FormLabel","BeaconTable","Scanner","Result","Select","axios","NoSsr","Paper","Chip","CancelIcon","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","Stepper","Step","StepLabel","StepContent","CardActions","CardContent","LocationOnIcon","graphqlUrlHTTPS","styles","theme","container","display","flexWrap","root","flexGrow","idPaper","float","padding","marginTop","marginRight","borderRadius","zIndex","backgroundColor","boxShadow","grow","card","minWidth","title","fontSize","pos","marginBottom","textField","borderBox","border","menu","width","menuButton","marginLeft","opacity","color","align","spacing","unit","input","valueContainer","flex","alignItems","overflow","noOptionsMessage","singleValue","placeholder","position","left","paper","right","card_actions","justifyContent","mapStateToProps","state","beacon","maps","edit","fetching","beaconCounter","count","deviceLogs","mapDispatchToProps","dispatch","type","patient","fetch","NoOptionsMessage","props","selectProps","classes","innerProps","children","inputComponent","inputRef","Control","inputProps","className","innerRef","textFieldProps","Option","isFocused","fontWeight","isSelected","Placeholder","SingleValue","ValueContainer","MultiValue","chip","chipFocused","removeProps","onClick","SubMenu","components","AddDeviceForm","noConnection","errorMessage","textAlign","setState","deleteDevice","verifyConnection","found","checkId","map","device","id","fetchAttempts","clearInterval","timer","handleClose","handleClickOpen","open","createOptions","options","value","label","query","request","then","data","variables","promise","method","url","headers","JSON","stringify","toggleDrawer","drawer","handleMenu","event","anchorEl","currentTarget","packageDevice","beaconId","measuredPower","gattId","gatt","gattProfile","profile","parse","requestPost","createDevice","graphqlUrl","handleSubmit","e","preventDefault","setInterval","handleLoading","loading","handleChange","prop","target","checkGimbal","gimbalUrl","window","cancel","history","push","_scan","scanning","_onDetected","result","results","indexOf","concat","renderLoading","auth","step","prevProps","prevState","Boolean","selectStyles","base","palette","text","primary","font","ConnectedAddDeviceForm","withTheme"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from \"react-redux\";\r\nimport { confirmType, addPatient, fetchMaps, editPatient, removePatient, fetchNewBeacon, fetchingProcess, fetchingDone, updateBeaconCount, assignBeacon } from \"./actions/index\";\r\nimport Card from '@material-ui/core/Card';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport TemporaryDrawer from './TemporaryDrawer';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport classNames from 'classnames';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport BeaconTable from './BeaconTable';\r\nimport Scanner from './Scanner';\r\nimport Result from './Result';\r\nimport Select from 'react-select';\r\nimport axios from 'axios';\r\nimport NoSsr from '@material-ui/core/NoSsr';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport StepContent from '@material-ui/core/StepContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\r\n\r\n\r\nconst graphqlUrlHTTPS = 'http://137.132.165.139:3000/graphql';\r\n\r\n\r\nconst styles = theme => ({\r\n  container: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  idPaper: {\r\n    float: 'left',\r\n    padding: '15px',\r\n    marginTop: '-20px',\r\n    marginRight: '15px',\r\n    borderRadius: '3px',\r\n    zIndex: 2,\r\n     backgroundColor: '#339af0',\r\n\r\n    //background: 'linear-gradient(60deg, #26c6da, #00acc1)',\r\n    boxShadow: '0 4px 20px 0 rgba(0, 0, 0,.14), 0 7px 10px -5px rgba(51, 154, 240,.4)',\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  card: {\r\n    minWidth: 200,\r\n\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n  textField: {\r\n    // marginLeft: theme.spacing.unit,\r\n    // marginRight: theme.spacing.unit,\r\n  },\r\n  borderBox: {\r\n    border: '1px solid',\r\n    padding: '2rem',\r\n    borderRadius: '16px',\r\n  },\r\n  menu: {\r\n    width: 200,\r\n  },\r\n  menuButton: {\r\n    marginLeft: -12,\r\n    marginRight: 20,\r\n    opacity : 0.4,\r\n    color: 'black',\r\n  },\r\n  align: {\r\n    padding: `${theme.spacing.unit * 2}px ${theme.spacing.unit * 3}px ${theme.spacing.unit * 3}px`,\r\n  },\r\n  input: {\r\n    display: 'flex',\r\n    padding: 0,\r\n  },\r\n  valueContainer: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    overflow: 'hidden',\r\n    padding: '18.5px 14px',\r\n  },\r\n  noOptionsMessage: {\r\n   padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`,\r\n },\r\n singleValue: {\r\n    fontSize: 16,\r\n  },\r\n  placeholder: {\r\n    position: 'absolute',\r\n    left: 2,\r\n    fontSize: 16,\r\n    padding: '18.5px 14px',\r\n  },\r\n  paper: {\r\n    position: 'absolute',\r\n    zIndex: 1,\r\n    marginTop: theme.spacing.unit,\r\n    left: 0,\r\n    right: 0,\r\n  },\r\n  card_actions: {\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  justifyContent: 'center',\r\n  marginTop: '16px',\r\n}\r\n});\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    beacon: state.beacon,\r\n    maps: state.maps,\r\n    edit: state.edit,\r\n    fetching: state.fetching,\r\n    beaconCounter: state.beaconCounter.count,\r\n    deviceLogs: state.deviceLogs,\r\n   };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    confirmType: type => dispatch(confirmType(type)),\r\n    addPatient: patient => dispatch(addPatient(patient)),\r\n    editPatient: patient => dispatch(editPatient(patient)),\r\n    removePatient: patient => dispatch(removePatient(patient)),\r\n    fetchMaps: maps => dispatch(fetchMaps(maps)),\r\n    fetchNewBeacon: count => dispatch(fetchNewBeacon(count)),\r\n    fetchingProcess: fetch => dispatch(fetchingProcess(fetch)),\r\n    assignBeacon: beacon => dispatch(assignBeacon(beacon)),\r\n    fetchingDone: fetch => dispatch(fetchingDone(fetch)),\r\n    updateBeaconCount: count => dispatch(updateBeaconCount(count))\r\n  };\r\n};\r\n\r\nfunction NoOptionsMessage(props) {\r\n  return (\r\n    <Typography\r\n      color=\"textSecondary\"\r\n      className={props.selectProps.classes.noOptionsMessage}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nfunction inputComponent({ inputRef, ...props }) {\r\n  return <div ref={inputRef} {...props} />;\r\n}\r\n\r\nfunction Control(props) {\r\n  return (\r\n    <TextField\r\n      fullWidth\r\n      variant=\"outlined\"\r\n      InputProps={{\r\n        inputComponent,\r\n        inputProps: {\r\n          className: props.selectProps.classes.input,\r\n          inputRef: props.innerRef,\r\n          children: props.children,\r\n          ...props.innerProps,\r\n        },\r\n      }}\r\n      {...props.selectProps.textFieldProps}\r\n    />\r\n  );\r\n}\r\n\r\nfunction Option(props) {\r\n  return (\r\n    <MenuItem\r\n      buttonRef={props.innerRef}\r\n      selected={props.isFocused}\r\n      component=\"div\"\r\n      style={{\r\n        fontWeight: props.isSelected ? 500 : 400,\r\n      }}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </MenuItem>\r\n  );\r\n}\r\n\r\nfunction Placeholder(props) {\r\n  return (\r\n    <Typography\r\n      color=\"textSecondary\"\r\n      className={props.selectProps.classes.placeholder}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nfunction SingleValue(props) {\r\n  return (\r\n    <Typography className={props.selectProps.classes.singleValue} {...props.innerProps}>\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nfunction ValueContainer(props) {\r\n  return <div className={props.selectProps.classes.valueContainer}>{props.children}</div>;\r\n}\r\n\r\nfunction MultiValue(props) {\r\n  return (\r\n    <Chip\r\n      tabIndex={-1}\r\n      label={props.children}\r\n      className={classNames(props.selectProps.classes.chip, {\r\n        [props.selectProps.classes.chipFocused]: props.isFocused,\r\n      })}\r\n      onDelete={props.removeProps.onClick}\r\n      deleteIcon={<CancelIcon {...props.removeProps} />}\r\n    />\r\n  );\r\n}\r\n\r\nfunction SubMenu(props) {\r\n  return (\r\n    <Paper square className={props.selectProps.classes.paper} {...props.innerProps}>\r\n      {props.children}\r\n    </Paper>\r\n  );\r\n}\r\n\r\nconst components = {\r\n  Control,\r\n  SubMenu,\r\n  MultiValue,\r\n  NoOptionsMessage,\r\n  Option,\r\n  Placeholder,\r\n  SingleValue,\r\n  ValueContainer,\r\n};\r\n\r\nclass AddDeviceForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      anchorEl: null,\r\n      auth: true,\r\n      id: \"\",\r\n      beaconId: \"\",\r\n      measuredPower: \"-63\",\r\n      gattId: \"\",\r\n      gattProfile: \"\",\r\n      open: false,\r\n      beacon: this.props.beacon,\r\n      scanning: false,\r\n      results: [],\r\n      options: [],\r\n      edit: false,\r\n      step: 1,\r\n      fetchAttempts: -1,\r\n      errorMessage: \"\",\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.fetchNewBeacon()\r\n    if(this.props.open != \"\" && this.props.open != null) {\r\n      this.setState({open: this.props.open})\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if(this.props.open !== \"\" && this.props.open != null && this.props.open !== this.state.open ) {\r\n      this.setState({open: this.props.open})\r\n    }\r\n\r\n    if(this.props.beaconCounter !== \"\" && this.props.beaconCounter != null && this.props.beaconCounter !== prevProps.beaconCounter ) {\r\n      let beaconId = `3:${this.props.beaconCounter}`\r\n      let id = `b${this.props.beaconCounter}`\r\n      this.setState({beaconId})\r\n      this.setState({id})\r\n    }\r\n\r\n    if(this.props.fetching == true && this.state.fetchAttempts == 0) {\r\n     this.noConnection()\r\n     clearInterval(this.timer)\r\n     this.timer = null; // here...\r\n    }\r\n  }\r\n\r\n  noConnection = () => {\r\n    this.props.fetchingDone()\r\n    let errorMessage = <div style={{marginTop: '1em', textAlign: 'center'}}> Unable to connect to beacon. <br/>\r\n    Please check Gimbal if it is successfully activated </div>\r\n    this.setState({errorMessage})\r\n    this.deleteDevice()\r\n  }\r\n\r\n  verifyConnection = () => {\r\n    let found = false;\r\n    let checkId = `b${this.props.beaconCounter}`\r\n    let deviceLogs = this.props.deviceLogs\r\n    deviceLogs.map( (device) => {\r\n      if(device.id == checkId) {\r\n        found = true\r\n        this.props.assignBeacon([checkId])\r\n      }\r\n    })\r\n\r\n    if(found == true) {\r\n      this.setState({fetchAttempts: 0})\r\n      this.props.fetchingDone()\r\n      clearInterval(this.timer)\r\n      this.timer = null; // here...\r\n      this.props.updateBeaconCount(this.props.beaconCounter)\r\n\r\n      this.handleClose()\r\n    } else {\r\n      let fetchAttempts = this.state.fetchAttempts - 1\r\n      this.setState({fetchAttempts})\r\n    }\r\n  }\r\n\r\n  handleClickOpen = () => {\r\n     this.setState({ open: true });\r\n  };\r\n\r\n  handleClose = () => {\r\n     this.props.handleClose()\r\n  };\r\n\r\n  createOptions = (maps) => {\r\n    let options = maps.map((map) => ({\r\n      value: map.id,\r\n      label: map.id,\r\n    }))\r\n    this.setState({options})\r\n  }\r\n\r\n  fetch = (dispatch) => {\r\n    let query = `\r\n      query {\r\n        maps {\r\n          id\r\n          scale\r\n          coordinates\r\n          imageURL\r\n          navMesh\r\n          navPath\r\n          pois\r\n        }\r\n      }\r\n    `\r\n    this.request({query})\r\n    .then (data => {\r\n      this.props.fetchMaps(data.data.data.maps);\r\n      this.createOptions(data.data.data.maps);\r\n    })\r\n  }\r\n\r\n  request = ({query, variables}) => {\r\n    let promise = axios({\r\n      method:   'post',\r\n      url:      `${graphqlUrlHTTPS}`,\r\n      headers:  {'Content-Type': 'application/json'},\r\n      data:     JSON.stringify({query, variables})\r\n    })\r\n    return promise;\r\n  }\r\n\r\n  toggleDrawer = () => {\r\n    this.setState({ drawer: true});\r\n  }\r\n\r\n  handleMenu = event => {\r\n    this.setState({ drawer: false });\r\n    this.setState({ anchorEl: event.currentTarget });\r\n  };\r\n\r\n\r\n  packageDevice = () => {\r\n    let device = {}\r\n\r\n    if(this.state.id != \"\") {\r\n      device.device = {id: this.state.id, type: 'mobile'}\r\n    }\r\n\r\n    if(this.state.beaconId != \"\") {\r\n      device.beacon = {id: this.state.beaconId}\r\n      if(this.state.measuredPower != \"\") {\r\n        device.beacon.measuredPower = this.state.measuredPower\r\n      }\r\n    }\r\n\r\n    if(this.state.gattId != \"\") {\r\n      device.gatt = {id: this.state.gattId};\r\n      if (this.state.gattProfile != \"\") {\r\n        device.gatt.profile = JSON.parse(this.state.gattProfile );\r\n      }\r\n    }\r\n    return device\r\n  }\r\n\r\n  deleteDevice = () => {\r\n    let id = this.state.id\r\n    let variables = {id: id}\r\n    let query = `\r\n      mutation ($id: String!) {\r\n        deleteDevice(id: $id) { id }\r\n      }\r\n    `;\r\n    this.requestPost({query, variables})\r\n\r\n  }\r\n  createDevice = (device) => {\r\n    let variables  = {input: device}\r\n    let query = `\r\n        mutation ($input: CreateDeviceInput!) {\r\n          createDevice(input: $input) { id }\r\n        }\r\n      `;\r\n    this.requestPost({query, variables})\r\n  }\r\n\r\n  requestPost = ({query, variables}) => {\r\n    let graphqlUrl= \"http://137.132.165.139:3000/graphql\"\r\n    axios({\r\n        method:   'post',\r\n        url:      `${graphqlUrl}`,\r\n        headers:  {'Content-Type': 'application/json'},\r\n        data:     JSON.stringify({query, variables})\r\n      })\r\n  }\r\n\r\n\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.fetchingProcess()\r\n    const { type } = this.state;\r\n    this.setState({fetchAttempts: 30})\r\n    let device = this.packageDevice()\r\n    this.createDevice(device);\r\n    this.timer = setInterval(()=> this.verifyConnection(), 1000);\r\n  }\r\n\r\n  handleLoading = () => {\r\n    this.setState(state => ({\r\n      loading: !state.loading,\r\n    }))\r\n  }\r\n\r\n  handleChange = prop => event => {\r\n    if(prop == \"ward\")\r\n      this.setState({ [prop]: event });\r\n    else {\r\n      this.setState({ [prop]: event.target.value });\r\n    }\r\n  };\r\n\r\n  checkGimbal = () => {\r\n    let gimbalUrl= \"https://manager.gimbal.com/api/beacons\"\r\n    window.open(\"https://manager.gimbal.com/login/users/sign_in\");\r\n  }\r\n\r\n\r\n  cancel = () => {\r\n    this.props.history.push('/home');\r\n  }\r\n\r\n  _scan = (e) => {\r\n        e.preventDefault();\r\n        this.setState({scanning: !this.state.scanning});\r\n    }\r\n\r\n    _onDetected = (result) => {\r\n        let results = this.state.results;\r\n        if(results.indexOf(result) < 0)\r\n          this.setState({results: this.state.results.concat([result])});\r\n    }\r\n\r\n  renderLoading = () => {\r\n    let loading = <div style={{textAlign: 'center', marginTop: '1em'}}> <CircularProgress />  <Typography variant=\"subtitle2\"> Verifying ... </Typography></div>\r\n\r\n    return loading;\r\n  }\r\n  render() {\r\n\r\n    const { classes, theme } = this.props;\r\n    const { anchorEl, auth } = this.state;\r\n    const open = Boolean(anchorEl)\r\n\r\n    const selectStyles = {\r\n      input: base => ({\r\n        ...base,\r\n        color: theme.palette.text.primary,\r\n        '& input': {\r\n          font: 'inherit',\r\n        },\r\n      }),\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <Dialog\r\n          open={this.state.open}\r\n          onClose={this.handleClose}\r\n          aria-labelledby=\"form-dialog-title\"\r\n        >\r\n          <DialogTitle id=\"form-dialog-title\">Add Beacon</DialogTitle>\r\n          <DialogContent>\r\n            <Grid\r\n              container\r\n              spacing={0}\r\n              direction=\"column\"\r\n              alignItems=\"center\"\r\n              justify=\"center\"\r\n            >\r\n              <Grid item xs={12}>\r\n                <Card className={classes.card} style={{display: 'inline-block'}}>\r\n                  <CardContent style={{textAlign: 'center'}}>\r\n                    <Paper className={classes.idPaper} elevation={10}>\r\n                      <span>\r\n                        <LocationOnIcon style={{fontSize: '30px', color: 'white'}} />\r\n                      </span>\r\n                    </Paper>\r\n                    <Typography color=\"textSecondary\">\r\n                      Beacon ID\r\n                    </Typography>\r\n                    <Typography variant=\"h5\" component=\"h2\" style={{fontSize: '1.825em'}} >\r\n                      3:{this.props.beaconCounter != \"\" ? this.props.beaconCounter : null}\r\n                    </Typography>\r\n                    {this.props.fetching ? this.renderLoading() : null}\r\n                  </CardContent>\r\n                {this.props.fetching ? null :\r\n                  <CardActions className={classes.card_actions}>\r\n                    <Grid\r\n                      justify=\"center\"\r\n                      container\r\n                      spacing={24}\r\n                    >\r\n                      <Button size=\"small\" onClick={this.checkGimbal}>Gimbal Site</Button>\r\n                    </Grid>\r\n                  </CardActions> }\r\n                </Card>\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <Typography variant=\"subtitle1\" style={{color: 'red'}}> {this.state.errorMessage }  </Typography>\r\n\r\n            <Typography variant=\"body1\" component='p' paragraph style={{marginTop: '16px'}}>\r\n              1. Copy the Beacon ID provided and open the Gimbal Site by clicking on the 'Gimbal Site' button.\r\n            </Typography>\r\n\r\n            <Typography variant=\"body1\" component='p' paragraph>\r\n              2. Login to the Gimbal Site and navigate to <b> Beacons > Beacons Management </b>\r\n            </Typography>\r\n\r\n            <Typography variant=\"body1\" component='p' paragraph>\r\n              3. Click on <b>+ Activate Beacon</b> on the top of the table of beacons\r\n            </Typography>\r\n\r\n            <Typography variant=\"body1\" component='p' paragraph>\r\n              4. Fill in the Beacon ID under the Beacon Name and the Factory ID can be found in the Beacon itself.\r\n              Submit the form and wait and once successfully activated, return to this application.\r\n            </Typography>\r\n\r\n            <br/>\r\n            {/*\r\n              <FormControl margin=\"normal\" required fullWidth>\r\n                <TextField\r\n                  label=\"id\"\r\n                  placeholder=\"id\"\r\n                  variant=\"outlined\"\r\n                  value={this.state.id}\r\n                  fullWidth\r\n                  className={classes.textField}\r\n                  onChange = {(e) => this.setState({id:e.target.value})}\r\n                />\r\n              </FormControl>\r\n\r\n            <FormControl margin=\"normal\" required fullWidth>\r\n              <TextField\r\n                label=\"Beacon ID\"\r\n                placeholder=\"Beacon ID\"\r\n                variant=\"outlined\"\r\n                value={this.state.beaconId}\r\n                fullWidth\r\n                className={classes.textField}\r\n                onChange = {(e) => this.setState({beaconId:e.target.value})}\r\n              />\r\n            </FormControl>\r\n\r\n            <FormControl margin=\"normal\" required fullWidth>\r\n              <TextField\r\n                label=\"Measured Power\"\r\n                placeholder=\"Measured Power\"\r\n                variant=\"outlined\"\r\n                value={this.state.measuredPower}\r\n                fullWidth\r\n                className={classes.textField}\r\n                onChange = {(e) => this.setState({measuredPower:e.target.value})}\r\n              />\r\n            </FormControl>\r\n\r\n            <FormControl margin=\"normal\" required fullWidth>\r\n              <TextField\r\n                label=\"Gatt ID\"\r\n                placeholder=\"Gatt ID\"\r\n                variant=\"outlined\"\r\n                value={this.state.gattId}\r\n                fullWidth\r\n                className={classes.textField}\r\n                onChange = {(e) => this.setState({gattId:e.target.value})}\r\n              />\r\n            </FormControl>\r\n\r\n            <FormControl margin=\"normal\" required fullWidth>\r\n              <TextField\r\n                label=\"Gatt Profile\"\r\n                placeholder=\"Gatt Profile\"\r\n                variant=\"outlined\"\r\n                value={this.state.gattProfile}\r\n                fullWidth\r\n                className={classes.textField}\r\n                onChange = {(e) => this.setState({gattProfile:e.target.value})}\r\n              />\r\n            </FormControl>\r\n          */}\r\n          </DialogContent>\r\n          <DialogActions>\r\n           <Button onClick={this.handleClose} color=\"primary\">\r\n            Cancel\r\n           </Button>\r\n           <Button onClick={this.handleSubmit} color=\"primary\">\r\n            Next\r\n           </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst ConnectedAddDeviceForm = connect(mapStateToProps, mapDispatchToProps)(AddDeviceForm);\r\n\r\nexport default withStyles(styles, {withTheme: true})(ConnectedAddDeviceForm);\r\n"]},"metadata":{},"sourceType":"module"}