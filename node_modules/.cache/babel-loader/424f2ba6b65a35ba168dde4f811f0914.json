{"ast":null,"code":"import _defineProperty from \"/Users/jermz/Desktop/eclipse-workspace/medicalWebsite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/jermz/Desktop/eclipse-workspace/medicalWebsite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jermz/Desktop/eclipse-workspace/medicalWebsite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jermz/Desktop/eclipse-workspace/medicalWebsite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jermz/Desktop/eclipse-workspace/medicalWebsite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jermz/Desktop/eclipse-workspace/medicalWebsite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/jermz/Desktop/eclipse-workspace/medicalWebsite/src/ContactTracing.js\";\nimport React, { Component } from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport { withStyles } from '@material-ui/core/styles';\nimport { connect } from \"react-redux\";\nimport { addUsername as _addUsername, fetchContactTrace as _fetchContactTrace, fetchingProcess as _fetchingProcess, signOutUser as _signOutUser } from \"./actions/index\";\nimport Card from '@material-ui/core/Card';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport TemporaryDrawer from './TemporaryDrawer';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport AddIcon from '@material-ui/icons/Add';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport classNames from 'classnames';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport BeaconTable from './BeaconTable';\nimport CameraIcon from '@material-ui/icons/PhotoCamera';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport LinearProgress from '@material-ui/core/LinearProgress';\n\nvar styles = function styles(theme) {\n  return {\n    container: {\n      display: 'flex',\n      flexWrap: 'wrap'\n    },\n    root: {\n      flexGrow: 1\n    },\n    grow: {\n      flexGrow: 1\n    },\n    card: {\n      minWidth: 275,\n      padding: '2rem'\n    },\n    textField: {// marginLeft: theme.spacing.unit,\n      // marginRight: theme.spacing.unit,\n    },\n    borderBox: {\n      border: '1px solid',\n      padding: '2rem',\n      borderRadius: '16px'\n    },\n    menu: {\n      width: 200\n    },\n    menuButton: {\n      marginLeft: -12,\n      marginRight: 20,\n      opacity: 0.4,\n      color: 'black'\n    },\n    align: {\n      padding: \"\".concat(theme.spacing.unit * 2, \"px \").concat(theme.spacing.unit * 3, \"px \").concat(theme.spacing.unit * 3, \"px\")\n    },\n    label: {\n      textTransform: 'capitalize'\n    },\n    cameraIcon: {\n      opacity: '0.5',\n      paddingLeft: '10px'\n    },\n    cardContent: {\n      paddingBottom: '16px'\n    }\n  };\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    beacon: state.beacon,\n    fetching: state.fetching,\n    contactTrace: state.contactTrace,\n    isAuthenticating: state.isAuthenticating,\n    authenticated: state.authenticated\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    addUsername: function addUsername(username) {\n      return dispatch(_addUsername(username));\n    },\n    fetchingProcess: function fetchingProcess(process) {\n      return dispatch(_fetchingProcess(process));\n    },\n    fetchContactTrace: function fetchContactTrace(traceDetails) {\n      return dispatch(_fetchContactTrace(traceDetails));\n    },\n    signOutUser: function signOutUser(credentials) {\n      return dispatch(_signOutUser(credentials));\n    }\n  };\n};\n\nvar ContactTracing =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ContactTracing, _Component);\n\n  function ContactTracing(props) {\n    var _this;\n\n    _classCallCheck(this, ContactTracing);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ContactTracing).call(this, props));\n\n    _this.toggleDrawer = function () {\n      _this.setState({\n        drawer: true\n      });\n    };\n\n    _this.toggleCloseDrawer = function () {\n      _this.setState({\n        drawer: false\n      });\n    };\n\n    _this.handleMenu = function (event) {\n      _this.setState({\n        drawer: false\n      });\n\n      _this.setState({\n        anchorEl: event.currentTarget\n      });\n    };\n\n    _this.handleClose = function () {\n      _this.setState({\n        anchorEl: null\n      });\n    };\n\n    _this.handleLogOut = function () {\n      _this.handleClose();\n\n      _this.props.signOutUser();\n    };\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n      var errorCheck = false;\n      var unixStart = new Date(_this.state.startTime);\n      var unixEnd = new Date(_this.state.endTime);\n\n      if (_this.state.contactDistance == \"\") {\n        _this.setState({\n          distError: true\n        });\n\n        errorCheck = true;\n      }\n\n      if (_this.state.name == \"\") {\n        _this.setState({\n          nameError: true\n        });\n\n        errorCheck = true;\n      }\n\n      if (unixStart > unixEnd) {\n        _this.setState({\n          error: 'Time range is invalid'\n        });\n\n        errorCheck = true;\n      }\n\n      if (errorCheck) {\n        return;\n      }\n\n      if (unixStart <= unixEnd) {\n        var traceDetails = {\n          name: _this.state.name,\n          contactDistance: _this.state.contactDistance,\n          startTime: _this.state.startTime,\n          endTime: _this.state.endTime\n        };\n\n        _this.props.fetchContactTrace(traceDetails);\n\n        _this.setState({\n          error: \"\"\n        });\n      }\n    };\n\n    _this.handleLoading = function () {\n      _this.setState(function (state) {\n        return {\n          loading: !state.loading\n        };\n      });\n    };\n\n    _this.handleChange = function (prop) {\n      return function (event) {\n        _this.setState(_defineProperty({}, prop, event.target.value));\n      };\n    };\n\n    _this.imageUpload = function (e) {\n      if (e.target.files[0]) {\n        var image = e.target.files[0];\n\n        _this.setState({\n          image: image\n        });\n\n        _this.setState({\n          imagePreview: URL.createObjectURL(e.target.files[0])\n        });\n\n        _this.setState({\n          imageName: image.name\n        });\n      }\n    };\n\n    _this.updateStart = function (e) {\n      _this.setState({\n        startTime: e.target.value\n      });\n    };\n\n    _this.updateEnd = function (e) {\n      _this.setState({\n        endTime: e.target.value\n      });\n    };\n\n    _this.removeImage = function () {\n      _this.setState({\n        image: \"\"\n      });\n\n      _this.setState({\n        imagePreview: \"\"\n      });\n\n      _this.setState({\n        imageName: \"\"\n      });\n    };\n\n    _this.cancel = function () {\n      _this.props.history.push('/home');\n    };\n\n    _this.state = {\n      anchorEl: null,\n      auth: true,\n      name: \"\",\n      owner: \"\",\n      image: \"\",\n      imagePreview: \"\",\n      imageName: \"\",\n      ward: \"\",\n      contactDistance: \"\",\n      beacon: _this.props.beacon,\n      loading: false,\n      startTime: '2019-04-15T10:30',\n      endTime: '2019-04-15T10:30',\n      contactTraceError: \"\",\n      error: \"\",\n      nameError: false,\n      distError: false\n    };\n    return _this;\n  }\n\n  _createClass(ContactTracing, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      if (this.props.fetching == false && prevProps.fetching == true && this.props.contactTrace != null | this.props.contactTrace != prevProps.contactTrace && this.props.contactTrace != null) {\n        if (this.props.contactTrace.length == 0) {\n          this.setState({\n            contactTraceError: 'Error: There are no contact tracing data for the specified time range'\n          });\n        } else this.props.history.push('/contactTracingResults');\n      } else if (this.props.fetching == false && prevProps.fetching == true && this.props.contactTrace == null | this.props.contactTrace != prevProps.contactTrace && this.props.contactTrace == null) {\n        this.setState({\n          contactTraceError: 'Server Error: Unable to get contact trace'\n        });\n      }\n\n      if (this.props.isAuthenticating == false && this.props.authenticated == false) {\n        this.props.history.push('/');\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var classes = this.props.classes;\n      var _this$state = this.state,\n          anchorEl = _this$state.anchorEl,\n          auth = _this$state.auth;\n      var open = Boolean(anchorEl);\n      var races = ['Chinese', 'Malay', 'Indian', 'Others'];\n      var imagePreview = this.state.imagePreview;\n      var imageName = this.state.imageName;\n\n      if (this.props.isAuthenticating) {\n        return React.createElement(LinearProgress, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 252\n          },\n          __self: this\n        });\n      } else return React.createElement(\"div\", {\n        className: classes.root,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255\n        },\n        __self: this\n      }, React.createElement(AppBar, {\n        position: \"static\",\n        style: {\n          boxShadow: \"none\",\n          backgroundColor: \"white\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256\n        },\n        __self: this\n      }, React.createElement(Toolbar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257\n        },\n        __self: this\n      }, React.createElement(IconButton, {\n        className: classes.menuButton,\n        color: \"inherit\",\n        \"aria-label\": \"Menu\",\n        onClick: this.toggleDrawer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258\n        },\n        __self: this\n      }, React.createElement(MenuIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      })), React.createElement(Typography, {\n        variant: \"title\",\n        className: classes.grow,\n        style: {\n          color: \"black\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      }, \"Contact Tracing\"), auth && React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265\n        },\n        __self: this\n      }, React.createElement(IconButton, {\n        \"aria-owns\": open ? 'menu-appbar' : null,\n        \"aria-haspopup\": \"true\",\n        onClick: this.handleMenu,\n        color: \"inherit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        },\n        __self: this\n      }, React.createElement(AccountCircle, {\n        style: {\n          color: \"black\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272\n        },\n        __self: this\n      })), React.createElement(Menu, {\n        id: \"menu-appbar\",\n        anchorEl: anchorEl,\n        anchorOrigin: {\n          vertical: 'top',\n          horizontal: 'right'\n        },\n        transformOrigin: {\n          vertical: 'top',\n          horizontal: 'right'\n        },\n        open: open,\n        onClose: this.handleClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274\n        },\n        __self: this\n      }, React.createElement(MenuItem, {\n        onClick: this.handleLogOut,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288\n        },\n        __self: this\n      }, \"Logout\"))))), React.createElement(ClickAwayListener, {\n        onClickAway: this.toggleCloseDrawer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294\n        },\n        __self: this\n      }, React.createElement(TemporaryDrawer, {\n        toggle: this.state.drawer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295\n        },\n        __self: this\n      })), React.createElement(\"form\", {\n        className: classes.align,\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        direction: \"column\",\n        spacing: 0,\n        alignItems: \"center\",\n        style: {\n          minHeight: '75vh'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes.layout,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"h4\",\n        gutterBottom: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305\n        },\n        __self: this\n      }, \"Contact Tracing\"), React.createElement(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307\n        },\n        __self: this\n      }, \"Infected\"), React.createElement(Typography, {\n        variant: \"subtitle1\",\n        style: {\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308\n        },\n        __self: this\n      }, \" \", this.state.contactTraceError, \"  \"), React.createElement(FormControl, {\n        margin: \"normal\",\n        required: true,\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        label: \"Name\",\n        placeholder: \"Name\",\n        autoComplete: \"name\",\n        variant: \"outlined\",\n        disabled: this.props.fetching,\n        fullWidth: true,\n        className: classes.textField,\n        onChange: function onChange(e) {\n          return _this2.setState({\n            name: e.target.value\n          });\n        },\n        required: true,\n        helperText: this.state.nameError ? \"This field is required\" : null,\n        error: this.state.nameError,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310\n        },\n        __self: this\n      })), React.createElement(FormControl, {\n        margin: \"normal\",\n        required: true,\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 325\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        label: \"Contact Distance (m)\",\n        placeholder: \"Contact Distance (m)\",\n        variant: \"outlined\",\n        disabled: this.props.fetching,\n        fullWidth: true,\n        className: classes.textField,\n        helperText: this.state.distError ? \"This field is required\" : null,\n        error: this.state.distError,\n        required: true,\n        onChange: function onChange(e) {\n          return _this2.setState({\n            contactDistance: e.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 340\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        id: \"datetime-local\",\n        label: \"Start\",\n        variant: \"outlined\",\n        type: \"datetime-local\",\n        style: {\n          marginRight: '1em',\n          marginTop: '1em'\n        },\n        defaultValue: this.state.startTime,\n        className: classes.textField,\n        onChange: this.updateStart,\n        disabled: this.props.fetching,\n        error: this.state.error == \"\" ? false : true,\n        InputLabelProps: {\n          shrink: true\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 341\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        id: \"datetime-local\",\n        label: \"End\",\n        type: \"datetime-local\",\n        variant: \"outlined\",\n        style: {\n          marginTop: '1em'\n        },\n        defaultValue: this.state.endTime,\n        error: this.state.error == \"\" ? false : true,\n        className: classes.textField,\n        onChange: this.updateEnd,\n        disabled: this.props.fetching,\n        InputLabelProps: {\n          shrink: true\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 357\n        },\n        __self: this\n      }))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 374\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        style: {\n          textAlign: 'center',\n          paddingTop: '1rem'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 375\n        },\n        __self: this\n      }, this.props.fetching ? React.createElement(CircularProgress, {\n        className: classes.progress,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 376\n        },\n        __self: this\n      }) : React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 377\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"submit\",\n        variant: \"contained\",\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 378\n        },\n        __self: this\n      }, \"Submit\"), React.createElement(Button, {\n        style: {\n          marginLeft: '3em'\n        },\n        onClick: this.cancel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 381\n        },\n        __self: this\n      }, \"Cancel\")))))));\n    }\n  }]);\n\n  return ContactTracing;\n}(Component);\n\nvar ConnectedContactTracing = connect(mapStateToProps, mapDispatchToProps)(ContactTracing);\nexport default withStyles(styles)(ConnectedContactTracing);","map":{"version":3,"sources":["/Users/jermz/Desktop/eclipse-workspace/medicalWebsite/src/ContactTracing.js"],"names":["React","Component","AppBar","Button","TextField","Grid","Typography","Toolbar","withStyles","connect","addUsername","fetchContactTrace","fetchingProcess","signOutUser","Card","CardMedia","CardContent","CardActions","CircularProgress","TemporaryDrawer","IconButton","MenuIcon","AddIcon","AccountCircle","MenuItem","Menu","FormControl","FormControlLabel","classNames","InputAdornment","Radio","RadioGroup","FormLabel","BeaconTable","CameraIcon","DeleteIcon","ClickAwayListener","LinearProgress","styles","theme","container","display","flexWrap","root","flexGrow","grow","card","minWidth","padding","textField","borderBox","border","borderRadius","menu","width","menuButton","marginLeft","marginRight","opacity","color","align","spacing","unit","label","textTransform","cameraIcon","paddingLeft","cardContent","paddingBottom","mapStateToProps","state","beacon","fetching","contactTrace","isAuthenticating","authenticated","mapDispatchToProps","dispatch","username","process","traceDetails","credentials","ContactTracing","props","toggleDrawer","setState","drawer","toggleCloseDrawer","handleMenu","event","anchorEl","currentTarget","handleClose","handleLogOut","handleSubmit","e","preventDefault","errorCheck","unixStart","Date","startTime","unixEnd","endTime","contactDistance","distError","name","nameError","error","handleLoading","loading","handleChange","prop","target","value","imageUpload","files","image","imagePreview","URL","createObjectURL","imageName","updateStart","updateEnd","removeImage","cancel","history","push","auth","owner","ward","contactTraceError","prevProps","prevState","length","classes","open","Boolean","races","boxShadow","backgroundColor","vertical","horizontal","minHeight","layout","marginTop","shrink","textAlign","paddingTop","progress","ConnectedContactTracing"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from \"react-redux\";\r\nimport { addUsername, fetchContactTrace, fetchingProcess, signOutUser } from \"./actions/index\";\r\nimport Card from '@material-ui/core/Card';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport TemporaryDrawer from './TemporaryDrawer';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport classNames from 'classnames';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport BeaconTable from './BeaconTable';\r\nimport CameraIcon from '@material-ui/icons/PhotoCamera';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\n\r\nconst styles = theme => ({\r\n  container: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  card: {\r\n    minWidth: 275,\r\n    padding: '2rem'\r\n  },\r\n  textField: {\r\n    // marginLeft: theme.spacing.unit,\r\n    // marginRight: theme.spacing.unit,\r\n  },\r\n  borderBox: {\r\n    border: '1px solid',\r\n    padding: '2rem',\r\n    borderRadius: '16px',\r\n  },\r\n  menu: {\r\n    width: 200,\r\n  },\r\n  menuButton: {\r\n    marginLeft: -12,\r\n    marginRight: 20,\r\n    opacity : 0.4,\r\n    color: 'black',\r\n  },\r\n  align: {\r\n    padding: `${theme.spacing.unit * 2}px ${theme.spacing.unit * 3}px ${theme.spacing.unit * 3}px`,\r\n  },\r\n  label: {\r\n    textTransform: 'capitalize',\r\n  },\r\n  cameraIcon: {\r\n    opacity: '0.5',\r\n    paddingLeft: '10px'\r\n  },\r\n  cardContent: {\r\n    paddingBottom: '16px'\r\n  }\r\n});\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    beacon: state.beacon,\r\n    fetching: state.fetching,\r\n    contactTrace: state.contactTrace,\r\n    isAuthenticating: state.isAuthenticating,\r\n    authenticated: state.authenticated\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    addUsername: username => dispatch(addUsername(username)),\r\n    fetchingProcess: process => dispatch(fetchingProcess(process)),\r\n    fetchContactTrace: traceDetails => dispatch(fetchContactTrace(traceDetails)),\r\n    signOutUser: credentials => dispatch(signOutUser(credentials)),\r\n  };\r\n};\r\n\r\nclass ContactTracing extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      anchorEl: null,\r\n      auth: true,\r\n      name: \"\",\r\n      owner: \"\",\r\n      image: \"\",\r\n      imagePreview: \"\",\r\n      imageName: \"\",\r\n      ward: \"\",\r\n      contactDistance: \"\",\r\n      beacon: this.props.beacon,\r\n      loading: false,\r\n      startTime: '2019-04-15T10:30',\r\n      endTime: '2019-04-15T10:30',\r\n      contactTraceError: \"\",\r\n      error: \"\",\r\n      nameError: false,\r\n      distError: false,\r\n    };\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n\r\n\r\n    if(this.props.fetching == false && prevProps.fetching == true && this.props.contactTrace != null | this.props.contactTrace != prevProps.contactTrace && this.props.contactTrace != null) {\r\n      if(this.props.contactTrace.length == 0) {\r\n        this.setState({contactTraceError: 'Error: There are no contact tracing data for the specified time range'})\r\n\r\n      } else\r\n      this.props.history.push('/contactTracingResults');\r\n    } else if(this.props.fetching == false && prevProps.fetching == true && this.props.contactTrace == null | this.props.contactTrace != prevProps.contactTrace && this.props.contactTrace == null){\r\n      this.setState({contactTraceError: 'Server Error: Unable to get contact trace'})\r\n    }\r\n\r\n    if(this.props.isAuthenticating == false && this.props.authenticated == false) {\r\n      this.props.history.push('/');\r\n    }\r\n  }\r\n\r\n  toggleDrawer = () => {\r\n    this.setState({ drawer: true});\r\n  }\r\n\r\n  toggleCloseDrawer = () => {\r\n    this.setState({drawer: false})\r\n  }\r\n\r\n  handleMenu = event => {\r\n    this.setState({ drawer: false });\r\n    this.setState({ anchorEl: event.currentTarget });\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({ anchorEl: null });\r\n  };\r\n\r\n  handleLogOut = () => {\r\n    this.handleClose()\r\n    this.props.signOutUser()\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    let errorCheck = false\r\n    let unixStart = new Date(this.state.startTime)\r\n    let unixEnd = new Date(this.state.endTime)\r\n    if(this.state.contactDistance == \"\") {\r\n      this.setState({distError: true})\r\n      errorCheck = true\r\n    }\r\n\r\n    if(this.state.name == \"\") {\r\n      this.setState({nameError: true})\r\n      errorCheck = true\r\n    }\r\n\r\n    if(unixStart > unixEnd) {\r\n      this.setState({error: 'Time range is invalid'})\r\n      errorCheck = true\r\n    }\r\n\r\n    if(errorCheck) {\r\n      return\r\n    }\r\n    if(unixStart <= unixEnd ) {\r\n      let traceDetails = {\r\n        name: this.state.name,\r\n        contactDistance: this.state.contactDistance,\r\n        startTime: this.state.startTime,\r\n        endTime: this.state.endTime\r\n      }\r\n      this.props.fetchContactTrace(traceDetails);\r\n      this.setState({error: \"\"})\r\n    }\r\n\r\n  }\r\n\r\n  handleLoading = () => {\r\n    this.setState(state => ({\r\n      loading: !state.loading,\r\n    }))\r\n  }\r\n\r\n  handleChange = prop => event => {\r\n    this.setState({ [prop]: event.target.value });\r\n  };\r\n\r\n  imageUpload = (e) => {\r\n\r\n    if(e.target.files[0]) {\r\n      const image = e.target.files[0];\r\n      this.setState({image})\r\n      this.setState({imagePreview : URL.createObjectURL(e.target.files[0])})\r\n      this.setState({imageName : image.name})\r\n    }\r\n\r\n  }\r\n\r\n  updateStart = (e) => {\r\n    this.setState({startTime: e.target.value})\r\n  }\r\n\r\n  updateEnd = (e) => {\r\n    this.setState({endTime: e.target.value})\r\n  }\r\n\r\n  removeImage = () => {\r\n    this.setState({image : \"\"});\r\n    this.setState({imagePreview : \"\"});\r\n    this.setState({imageName: \"\"});\r\n  }\r\n\r\n  cancel = () => {\r\n    this.props.history.push('/home');\r\n  }\r\n  render() {\r\n\r\n    const { classes } = this.props;\r\n    const { anchorEl, auth } = this.state;\r\n    const open = Boolean(anchorEl)\r\n    const races = ['Chinese', 'Malay', 'Indian', 'Others'];\r\n    let imagePreview = this.state.imagePreview;\r\n    let imageName = this.state.imageName;\r\n\r\n    if(this.props.isAuthenticating) {\r\n      return <LinearProgress />\r\n    } else\r\n    return (\r\n      <div className={classes.root}>\r\n        <AppBar position=\"static\" style={{boxShadow: \"none\", backgroundColor: \"white\"}}>\r\n          <Toolbar>\r\n            <IconButton className={classes.menuButton} color=\"inherit\" aria-label=\"Menu\" onClick={this.toggleDrawer}>\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Typography variant=\"title\" className={classes.grow} style={{color: \"black\"}}>\r\n              Contact Tracing\r\n            </Typography>\r\n            {auth && (\r\n                <div>\r\n                  <IconButton\r\n                    aria-owns={open ? 'menu-appbar' : null}\r\n                    aria-haspopup=\"true\"\r\n                    onClick={this.handleMenu}\r\n                    color=\"inherit\"\r\n                  >\r\n                    <AccountCircle style={{color: \"black\"}} />\r\n                  </IconButton>\r\n                  <Menu\r\n                    id=\"menu-appbar\"\r\n                    anchorEl={anchorEl}\r\n                    anchorOrigin={{\r\n                      vertical: 'top',\r\n                      horizontal: 'right',\r\n                    }}\r\n                    transformOrigin={{\r\n                      vertical: 'top',\r\n                      horizontal: 'right',\r\n                    }}\r\n                    open={open}\r\n                    onClose={this.handleClose}\r\n                  >\r\n                    <MenuItem onClick={this.handleLogOut}>Logout</MenuItem>\r\n                  </Menu>\r\n                </div>\r\n              )}\r\n          </Toolbar>\r\n        </AppBar>\r\n        <ClickAwayListener onClickAway={this.toggleCloseDrawer}>\r\n          <TemporaryDrawer toggle={this.state.drawer} />\r\n        </ClickAwayListener>\r\n        <form className={classes.align} onSubmit={this.handleSubmit}>\r\n          <Grid container\r\n            direction=\"column\"\r\n            spacing={0}\r\n            alignItems=\"center\"\r\n            style={{ minHeight: '75vh'}}>\r\n            <Grid item xs={12}>\r\n              <div className={classes.layout}>\r\n                <Typography variant=\"h4\" gutterBottom>Contact Tracing</Typography>\r\n\r\n                <Typography variant=\"h6\" gutterBottom>Infected</Typography>\r\n                <Typography variant=\"subtitle1\" style={{color: 'red'}}> {this.state.contactTraceError }  </Typography>\r\n                <FormControl margin=\"normal\" required fullWidth>\r\n                  <TextField\r\n                    label=\"Name\"\r\n                    placeholder=\"Name\"\r\n                    autoComplete=\"name\"\r\n                    variant=\"outlined\"\r\n                    disabled={this.props.fetching}\r\n                    fullWidth\r\n                    className={classes.textField}\r\n                    onChange = {(e) => this.setState({name:e.target.value})}\r\n                    required\r\n                    helperText={this.state.nameError ? \"This field is required\" : null}\r\n                    error={this.state.nameError}\r\n                  />\r\n                </FormControl>\r\n\r\n                <FormControl margin=\"normal\" required fullWidth>\r\n                  <TextField\r\n                    label=\"Contact Distance (m)\"\r\n                    placeholder=\"Contact Distance (m)\"\r\n                    variant=\"outlined\"\r\n                    disabled={this.props.fetching}\r\n                    fullWidth\r\n                    className={classes.textField}\r\n                    helperText={this.state.distError ? \"This field is required\" : null}\r\n                    error={this.state.distError}\r\n                    required\r\n                    onChange = {(e) => this.setState({contactDistance:e.target.value})}\r\n                  />\r\n                </FormControl>\r\n\r\n                <div>\r\n                  <TextField\r\n                    id=\"datetime-local\"\r\n                    label=\"Start\"\r\n                    variant=\"outlined\"\r\n                    type=\"datetime-local\"\r\n                    style={{marginRight: '1em', marginTop: '1em'}}\r\n                    defaultValue={this.state.startTime}\r\n                    className={classes.textField}\r\n                    onChange={this.updateStart}\r\n                    disabled={this.props.fetching}\r\n                    error={this.state.error == \"\" ? false : true }\r\n                    InputLabelProps={{\r\n                      shrink: true,\r\n                    }}\r\n                  />\r\n\r\n                  <TextField\r\n                    id=\"datetime-local\"\r\n                    label=\"End\"\r\n                    type=\"datetime-local\"\r\n                    variant=\"outlined\"\r\n                    style={{marginTop: '1em'}}\r\n                    defaultValue={this.state.endTime}\r\n                    error={this.state.error == \"\" ? false : true }\r\n                    className={classes.textField}\r\n                    onChange={this.updateEnd}\r\n                    disabled={this.props.fetching}\r\n                    InputLabelProps={{\r\n                      shrink: true,\r\n                    }}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <br/>\r\n              <div style={{ textAlign: 'center', paddingTop: '1rem'}}>\r\n                {this.props.fetching ? <CircularProgress className={classes.progress} /> :\r\n                <div>\r\n                  <Button type='submit' variant=\"contained\" color=\"primary\">\r\n                    Submit\r\n                  </Button>\r\n                  <Button style={{marginLeft: '3em'}} onClick={this.cancel}>\r\n                    Cancel\r\n                  </Button>\r\n                </div>\r\n                }\r\n              </div>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst ConnectedContactTracing = connect(mapStateToProps, mapDispatchToProps)(ContactTracing);\r\n\r\nexport default withStyles(styles)(ConnectedContactTracing);\r\n"]},"metadata":{},"sourceType":"module"}