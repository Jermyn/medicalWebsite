{"ast":null,"code":"import _regeneratorRuntime from \"/Users/jermz/Desktop/eclipse-workspace/medicalWebsite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/jermz/Desktop/eclipse-workspace/medicalWebsite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { READ_PATIENTS, READ_ASSETS, READ_STAFF, AUTH_USER, AUTH_ERROR, SIGN_OUT_USER, ADD_USERNAME, ASSIGN_BEACON, ASSIGN_DEVICES, CONFIRM_TYPE, ADD_PATIENT, EDIT_PATIENT, REMOVE_PATIENT, REMOVE_STAFF, REMOVE_ASSET, HIGHLIGHT_ASSET, HIGHLIGHT_STAFF, HIGHLIGHT_PATIENT, ADD_STAFF, ADD_ASSET, FETCH_MAPS, LOAD_MAP, LOAD_INFO, FETCH_DEVICES, FETCH_DEVICE_LOCATIONS, FETCH_SIMULATION_COORDINATES, FETCH_NEW_BEACON, FETCH_ECG_VITALS, FETCH_HEARTRATE_VITALS, FETCH_CONTACT_TRACE, FETCHING_PROCESS, FETCHING_DONE, UPDATE_TRACE_DETAILS, FETCH_FILTER_TRACE, FETCH_PATIENT_COUNT, FETCH_ASSET_COUNT, FETCH_STAFF_COUNT, UPDATE_PATIENT, UPDATE_ASSET, UPDATE_STAFF } from \"../constants/action-types\";\nimport { ecgRef, heartrateRef, beaconCountRef, patientCountRef, staffCountRef, assetCountRef, medicalPortalFirebase } from \"../firebase/index\";\nimport axios from 'axios';\nexport var addUsername = function addUsername(username) {\n  return {\n    type: ADD_USERNAME,\n    payload: username\n  };\n};\nexport var assignBeacon = function assignBeacon(beacon) {\n  return {\n    type: ASSIGN_BEACON,\n    payload: beacon\n  };\n};\nexport var assignDevices = function assignDevices(devices) {\n  return {\n    type: ASSIGN_DEVICES,\n    payload: devices\n  };\n};\nexport var confirmType = function confirmType(type) {\n  return {\n    type: CONFIRM_TYPE,\n    payload: type\n  };\n};\nexport var editPatient = function editPatient(patient) {\n  return {\n    type: EDIT_PATIENT,\n    payload: patient\n  };\n};\nexport var highlightPatient = function highlightPatient(patients) {\n  return {\n    type: HIGHLIGHT_PATIENT,\n    payload: patients\n  };\n};\nexport var highlightAsset = function highlightAsset(asset) {\n  return {\n    type: HIGHLIGHT_ASSET,\n    payload: asset\n  };\n};\nexport var highlightStaff = function highlightStaff(staff) {\n  return {\n    type: HIGHLIGHT_STAFF,\n    payload: staff\n  };\n};\nexport var fetchMaps = function fetchMaps(maps) {\n  return {\n    type: FETCH_MAPS,\n    payload: maps\n  };\n};\nexport var loadMap = function loadMap(map) {\n  return {\n    type: LOAD_MAP,\n    payload: map\n  };\n};\nexport var loadInfo = function loadInfo(object) {\n  return {\n    type: LOAD_INFO,\n    payload: object\n  };\n};\nexport var fetchDevices = function fetchDevices(devices) {\n  return {\n    type: FETCH_DEVICES,\n    payload: devices\n  };\n};\nexport var fetchDeviceLocations = function fetchDeviceLocations(devices) {\n  return {\n    type: FETCH_DEVICE_LOCATIONS,\n    payload: devices\n  };\n};\nexport var fetchingProcess = function fetchingProcess() {\n  return {\n    type: FETCHING_PROCESS\n  };\n};\nexport var fetchingDone = function fetchingDone() {\n  return {\n    type: FETCHING_DONE\n  };\n};\nexport var addPatient = function addPatient(patient) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispatch) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                medicalPortalFirebase.database().ref().child('patients').push().set(patient);\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var removePatient = function removePatient(patient) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(dispatch) {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                medicalPortalFirebase.database().ref().child(\"patients/\".concat(patient.id)).remove();\n\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var updatePatient = function updatePatient(patient) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref3 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(dispatch) {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                medicalPortalFirebase.database().ref().child(\"patients/\".concat(patient.id)).set(patient);\n\n              case 1:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      return function (_x3) {\n        return _ref3.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var readPatients = function readPatients() {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref4 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4(dispatch) {\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                medicalPortalFirebase.database().ref().child('patients').on('value', function (querySnapshot) {\n                  var patients = [];\n                  var snapshot = querySnapshot.val();\n\n                  for (var id in snapshot) {\n                    var item = snapshot[id];\n                    item.id = id;\n                    patients.push(item);\n                  }\n\n                  dispatch({\n                    type: READ_PATIENTS,\n                    payload: patients\n                  });\n                });\n\n              case 1:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      return function (_x4) {\n        return _ref4.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var addAsset = function addAsset(asset) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref5 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee5(dispatch) {\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                medicalPortalFirebase.database().ref().child('assets').push().set(asset);\n\n              case 1:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }));\n\n      return function (_x5) {\n        return _ref5.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var removeAsset = function removeAsset(asset) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref6 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee6(dispatch) {\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                medicalPortalFirebase.database().ref().child(\"assets/\".concat(asset.id)).remove();\n\n              case 1:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6);\n      }));\n\n      return function (_x6) {\n        return _ref6.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var updateAsset = function updateAsset(asset) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref7 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee7(dispatch) {\n        return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                medicalPortalFirebase.database().ref().child(\"assets/\".concat(asset.id)).set(asset);\n\n              case 1:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7);\n      }));\n\n      return function (_x7) {\n        return _ref7.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var readAssets = function readAssets() {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref8 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee8(dispatch) {\n        return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                medicalPortalFirebase.database().ref().child('assets').on('value', function (querySnapshot) {\n                  var assets = [];\n                  var snapshot = querySnapshot.val();\n\n                  for (var id in snapshot) {\n                    var item = snapshot[id];\n                    item.id = id;\n                    assets.push(item);\n                  }\n\n                  dispatch({\n                    type: READ_ASSETS,\n                    payload: assets\n                  });\n                });\n\n              case 1:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8);\n      }));\n\n      return function (_x8) {\n        return _ref8.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var addStaff = function addStaff(staff) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref9 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee9(dispatch) {\n        return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                medicalPortalFirebase.database().ref().child('staff').push().set(staff);\n\n              case 1:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9);\n      }));\n\n      return function (_x9) {\n        return _ref9.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var removeStaff = function removeStaff(staff) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref10 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee10(dispatch) {\n        return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                medicalPortalFirebase.database().ref().child(\"staff/\".concat(staff.id)).remove();\n\n              case 1:\n              case \"end\":\n                return _context10.stop();\n            }\n          }\n        }, _callee10);\n      }));\n\n      return function (_x10) {\n        return _ref10.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var updateStaff = function updateStaff(staff) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref11 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee11(dispatch) {\n        return _regeneratorRuntime.wrap(function _callee11$(_context11) {\n          while (1) {\n            switch (_context11.prev = _context11.next) {\n              case 0:\n                medicalPortalFirebase.database().ref().child(\"staff/\".concat(staff.id)).set(staff);\n\n              case 1:\n              case \"end\":\n                return _context11.stop();\n            }\n          }\n        }, _callee11);\n      }));\n\n      return function (_x11) {\n        return _ref11.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var readStaff = function readStaff() {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref12 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee12(dispatch) {\n        return _regeneratorRuntime.wrap(function _callee12$(_context12) {\n          while (1) {\n            switch (_context12.prev = _context12.next) {\n              case 0:\n                medicalPortalFirebase.database().ref().child('staff').on('value', function (querySnapshot) {\n                  var staff = [];\n                  var snapshot = querySnapshot.val();\n\n                  for (var id in snapshot) {\n                    var item = snapshot[id];\n                    item.id = id;\n                    staff.push(item);\n                  }\n\n                  dispatch({\n                    type: READ_STAFF,\n                    payload: staff\n                  });\n                });\n\n              case 1:\n              case \"end\":\n                return _context12.stop();\n            }\n          }\n        }, _callee12);\n      }));\n\n      return function (_x12) {\n        return _ref12.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var signOutUser = function signOutUser() {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref13 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee13(dispatch) {\n        return _regeneratorRuntime.wrap(function _callee13$(_context13) {\n          while (1) {\n            switch (_context13.prev = _context13.next) {\n              case 0:\n                medicalPortalFirebase.auth().signOut().then(function () {\n                  dispatch({\n                    type: SIGN_OUT_USER\n                  });\n                });\n\n              case 1:\n              case \"end\":\n                return _context13.stop();\n            }\n          }\n        }, _callee13);\n      }));\n\n      return function (_x13) {\n        return _ref13.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var verifyAuth = function verifyAuth() {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref14 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee14(dispatch) {\n        return _regeneratorRuntime.wrap(function _callee14$(_context14) {\n          while (1) {\n            switch (_context14.prev = _context14.next) {\n              case 0:\n                medicalPortalFirebase.auth().onAuthStateChanged(function (user) {\n                  if (user) {\n                    var authuser = medicalPortalFirebase.auth().currentUser;\n                    dispatch({\n                      type: ADD_USERNAME,\n                      payload: authuser.email\n                    });\n                    dispatch({\n                      type: AUTH_USER\n                    });\n                  } else {\n                    dispatch({\n                      type: SIGN_OUT_USER\n                    });\n                  }\n                });\n\n              case 1:\n              case \"end\":\n                return _context14.stop();\n            }\n          }\n        }, _callee14);\n      }));\n\n      return function (_x14) {\n        return _ref14.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var signInUser = function signInUser(credentials) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref15 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee15(dispatch) {\n        return _regeneratorRuntime.wrap(function _callee15$(_context15) {\n          while (1) {\n            switch (_context15.prev = _context15.next) {\n              case 0:\n                medicalPortalFirebase.auth().signInWithEmailAndPassword(credentials.email, credentials.password).then(function (res) {\n                  dispatch({\n                    type: AUTH_USER\n                  });\n                }).catch(function (err) {\n                  dispatch({\n                    type: AUTH_ERROR,\n                    payload: err\n                  });\n                });\n\n              case 1:\n              case \"end\":\n                return _context15.stop();\n            }\n          }\n        }, _callee15);\n      }));\n\n      return function (_x15) {\n        return _ref15.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var fetchSimulationCoordinates = function fetchSimulationCoordinates() {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref16 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee16(dispatch) {\n        var checkTime, timeStart, timeEnd, size, coordinateQuery;\n        return _regeneratorRuntime.wrap(function _callee16$(_context16) {\n          while (1) {\n            switch (_context16.prev = _context16.next) {\n              case 0:\n                // let timeStart = Date.now()\n                // let timeEnd = Date.now()\n                checkTime = new Date();\n                checkTime.setSeconds(checkTime.getSeconds() - 2);\n                checkTime = checkTime.toISOString().substr(0, 19);\n                timeStart = checkTime;\n                timeEnd = checkTime; // let timeStart = '2019-04-06T16:55:00'\n                // let timeEnd = '2019-04-06T16:55:00'\n\n                size = 10000;\n                coordinateQuery = {\n                  \"size\": size,\n                  \"sort\": [{\n                    \"timestamp\": {\n                      \"order\": \"asc\"\n                    }\n                  }],\n                  \"query\": {\n                    \"bool\": {\n                      \"must\": [{\n                        \"range\": {\n                          \"@timestamp\": {\n                            \"gte\": timeStart,\n                            \"lte\": timeEnd\n                          }\n                        }\n                      }]\n                    }\n                  }\n                };\n                axios.get(\"http://137.132.165.139:9200/simulated-coordinates/_search?scroll=1m\", {\n                  params: {\n                    source: JSON.stringify(coordinateQuery),\n                    source_content_type: 'application/json'\n                  }\n                }).then(function (res) {\n                  var fullTrace = res.data.hits.hits;\n\n                  if (fullTrace.length > 0) {\n                    dispatch({\n                      type: FETCH_SIMULATION_COORDINATES,\n                      payload: res.data.hits.hits[0]._source\n                    });\n                  }\n                });\n\n              case 8:\n              case \"end\":\n                return _context16.stop();\n            }\n          }\n        }, _callee16);\n      }));\n\n      return function (_x16) {\n        return _ref16.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var fetchContactTrace = function fetchContactTrace(traceDetails) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref17 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee17(dispatch) {\n        var timeStart, timeEnd, distance, beacon, index, size, query, coordinateQuery;\n        return _regeneratorRuntime.wrap(function _callee17$(_context17) {\n          while (1) {\n            switch (_context17.prev = _context17.next) {\n              case 0:\n                timeStart = traceDetails.startTime;\n                timeEnd = traceDetails.endTime;\n                timeStart = timeStart + ':00';\n                timeEnd = timeEnd + ':00';\n                distance = traceDetails.contactDistance;\n                beacon = traceDetails.name; // let beacon = 51\n                // let distance = 10\n\n                index = \"precomputed-\".concat(beacon); //  let timeStart = `2019-04-06T16:47:55`\n                // let timeEnd = `2019-04-07T16:55:00`\n\n                size = 10000;\n                dispatch({\n                  type: FETCHING_PROCESS\n                });\n                query = {\n                  \"size\": 10000,\n                  \"sort\": [{\n                    \"timestamp\": {\n                      \"order\": \"asc\"\n                    }\n                  }],\n                  \"query\": {\n                    \"bool\": {\n                      \"must\": [{\n                        \"range\": {\n                          \"@timestamp\": {\n                            \"gte\": timeStart,\n                            \"lte\": timeEnd,\n                            \"time_zone\": \"+08:00\"\n                          }\n                        }\n                      }, {\n                        \"range\": {\n                          \"distance\": {\n                            \"lte\": distance\n                          }\n                        }\n                      }]\n                    }\n                  }\n                };\n                coordinateQuery = {\n                  \"size\": size,\n                  \"sort\": [{\n                    \"timestamp\": {\n                      \"order\": \"asc\"\n                    }\n                  }],\n                  \"query\": {\n                    \"bool\": {\n                      \"must\": [{\n                        \"range\": {\n                          \"@timestamp\": {\n                            \"gte\": timeStart,\n                            \"lte\": timeEnd,\n                            \"time_zone\": \"+08:00\"\n                          }\n                        }\n                      }]\n                    }\n                  }\n                };\n                axios.get(\"http://137.132.165.139:9200/simulated-coordinates/_search?scroll=1m\", {\n                  params: {\n                    source: JSON.stringify(coordinateQuery),\n                    source_content_type: 'application/json'\n                  }\n                }).then(function (res) {\n                  var fullTrace = res.data.hits.hits;\n                  var map = {};\n                  var fullShot = [];\n                  var counter = 0;\n                  fullTrace.forEach(function (timestamp) {\n                    var item = timestamp._source;\n                    item.key = timestamp._id; // item.contact = []\n\n                    fullShot.push(item);\n                    map[timestamp._id] = counter;\n                    counter += 1;\n                  });\n                  var scroll_size = res.data.hits.total;\n                  var scroll_id = res.data._scroll_id;\n                  var scrollQuery = {\n                    'scroll': '1m',\n                    'scroll_id': scroll_id\n                  };\n                  getAPI(scrollQuery, fullShot);\n                  timeStart = encodeURI(timeStart.replace('T', ' '));\n                  timeEnd = encodeURI(timeEnd.replace('T', ' '));\n                  var contactURL = \"http://137.132.165.139:5001/contacts?beacon=\".concat(beacon, \"&distance=\").concat(distance, \"&startTime=\").concat(timeStart, \"&endTime=\").concat(timeEnd);\n                  axios.get(contactURL).then(function (res) {\n                    dispatch({\n                      type: UPDATE_TRACE_DETAILS,\n                      payload: traceDetails\n                    });\n                    dispatch({\n                      type: FETCH_CONTACT_TRACE,\n                      payload: fullShot\n                    });\n                    dispatch({\n                      type: FETCH_FILTER_TRACE,\n                      payload: res.data\n                    });\n                    dispatch({\n                      type: FETCHING_DONE\n                    });\n                  }).catch(function (error) {\n                    dispatch({\n                      type: FETCHING_DONE\n                    });\n                  });\n                });\n\n              case 12:\n              case \"end\":\n                return _context17.stop();\n            }\n          }\n        }, _callee17);\n      }));\n\n      return function (_x17) {\n        return _ref17.apply(this, arguments);\n      };\n    }()\n  );\n};\n\nfunction getAPI(scrollQuery, fullShot) {\n  axios.get(\"http://137.132.165.139:9200/_search/scroll\", {\n    params: {\n      source: JSON.stringify(scrollQuery),\n      source_content_type: 'application/json'\n    }\n  }).then(function (res) {\n    res.data.hits.hits.forEach(function (timestamp) {\n      var item = timestamp._source;\n      item.key = timestamp._id; // item.contact = []\n\n      fullShot.push(item);\n    });\n    var scroll_id = res.data._scroll_id;\n    var scrollQuery = {\n      'scroll': '1m',\n      'scroll_id': scroll_id\n    };\n    var scroll_size = res.data.hits.hits.length;\n\n    if (scroll_size > 0) {\n      getAPI(scrollQuery, fullShot);\n    }\n  });\n}\n\nexport var fetchNewBeacon = function fetchNewBeacon() {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref18 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee18(dispatch) {\n        var precomputedPath;\n        return _regeneratorRuntime.wrap(function _callee18$(_context18) {\n          while (1) {\n            switch (_context18.prev = _context18.next) {\n              case 0:\n                precomputedPath = \"beaconCounter/\";\n                beaconCountRef.on(\"value\", function (querySnapshot) {\n                  dispatch({\n                    type: FETCH_NEW_BEACON,\n                    payload: querySnapshot.val()\n                  });\n                }, function (errorObject) {\n                  console.log(\"The read failed: \" + errorObject.code);\n                });\n\n              case 2:\n              case \"end\":\n                return _context18.stop();\n            }\n          }\n        }, _callee18);\n      }));\n\n      return function (_x18) {\n        return _ref18.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var updateBeaconCount = function updateBeaconCount(count) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref19 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee19(dispatch) {\n        var newCount;\n        return _regeneratorRuntime.wrap(function _callee19$(_context19) {\n          while (1) {\n            switch (_context19.prev = _context19.next) {\n              case 0:\n                newCount = count + 1;\n                beaconCountRef.set({\n                  count: newCount\n                });\n\n              case 2:\n              case \"end\":\n                return _context19.stop();\n            }\n          }\n        }, _callee19);\n      }));\n\n      return function (_x19) {\n        return _ref19.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var fetchPatientCount = function fetchPatientCount() {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref20 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee20(dispatch) {\n        var precomputedPath;\n        return _regeneratorRuntime.wrap(function _callee20$(_context20) {\n          while (1) {\n            switch (_context20.prev = _context20.next) {\n              case 0:\n                precomputedPath = \"patientCounter/\";\n                patientCountRef.on(\"value\", function (querySnapshot) {\n                  dispatch({\n                    type: FETCH_PATIENT_COUNT,\n                    payload: querySnapshot.val()\n                  });\n                }, function (errorObject) {\n                  console.log(\"The read failed: \" + errorObject.code);\n                });\n\n              case 2:\n              case \"end\":\n                return _context20.stop();\n            }\n          }\n        }, _callee20);\n      }));\n\n      return function (_x20) {\n        return _ref20.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var updatePatientCount = function updatePatientCount(count) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref21 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee21(dispatch) {\n        var newCount;\n        return _regeneratorRuntime.wrap(function _callee21$(_context21) {\n          while (1) {\n            switch (_context21.prev = _context21.next) {\n              case 0:\n                newCount = count + 1;\n                patientCountRef.set({\n                  count: newCount\n                });\n\n              case 2:\n              case \"end\":\n                return _context21.stop();\n            }\n          }\n        }, _callee21);\n      }));\n\n      return function (_x21) {\n        return _ref21.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var updateStaffCount = function updateStaffCount(count) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref22 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee22(dispatch) {\n        var newCount;\n        return _regeneratorRuntime.wrap(function _callee22$(_context22) {\n          while (1) {\n            switch (_context22.prev = _context22.next) {\n              case 0:\n                newCount = count + 1;\n                staffCountRef.set({\n                  count: newCount\n                });\n\n              case 2:\n              case \"end\":\n                return _context22.stop();\n            }\n          }\n        }, _callee22);\n      }));\n\n      return function (_x22) {\n        return _ref22.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var updateAssetCount = function updateAssetCount(count) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref23 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee23(dispatch) {\n        var newCount;\n        return _regeneratorRuntime.wrap(function _callee23$(_context23) {\n          while (1) {\n            switch (_context23.prev = _context23.next) {\n              case 0:\n                newCount = count + 1;\n                assetCountRef.set({\n                  count: newCount\n                });\n\n              case 2:\n              case \"end\":\n                return _context23.stop();\n            }\n          }\n        }, _callee23);\n      }));\n\n      return function (_x23) {\n        return _ref23.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var fetchAssetCount = function fetchAssetCount() {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref24 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee24(dispatch) {\n        return _regeneratorRuntime.wrap(function _callee24$(_context24) {\n          while (1) {\n            switch (_context24.prev = _context24.next) {\n              case 0:\n                assetCountRef.on(\"value\", function (querySnapshot) {\n                  dispatch({\n                    type: FETCH_ASSET_COUNT,\n                    payload: querySnapshot.val()\n                  });\n                }, function (errorObject) {\n                  console.log(\"The read failed: \" + errorObject.code);\n                });\n\n              case 1:\n              case \"end\":\n                return _context24.stop();\n            }\n          }\n        }, _callee24);\n      }));\n\n      return function (_x24) {\n        return _ref24.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var fetchStaffCount = function fetchStaffCount() {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref25 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee25(dispatch) {\n        return _regeneratorRuntime.wrap(function _callee25$(_context25) {\n          while (1) {\n            switch (_context25.prev = _context25.next) {\n              case 0:\n                staffCountRef.on(\"value\", function (querySnapshot) {\n                  dispatch({\n                    type: FETCH_STAFF_COUNT,\n                    payload: querySnapshot.val()\n                  });\n                }, function (errorObject) {\n                  console.log(\"The read failed: \" + errorObject.code);\n                });\n\n              case 1:\n              case \"end\":\n                return _context25.stop();\n            }\n          }\n        }, _callee25);\n      }));\n\n      return function (_x25) {\n        return _ref25.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var fetchEcgVitals = function fetchEcgVitals() {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref26 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee26(dispatch) {\n        return _regeneratorRuntime.wrap(function _callee26$(_context26) {\n          while (1) {\n            switch (_context26.prev = _context26.next) {\n              case 0:\n                ecgRef.on(\"value\", function (snapshot) {\n                  dispatch({\n                    type: FETCH_ECG_VITALS,\n                    payload: snapshot.val()\n                  });\n                });\n\n              case 1:\n              case \"end\":\n                return _context26.stop();\n            }\n          }\n        }, _callee26);\n      }));\n\n      return function (_x26) {\n        return _ref26.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var fetchSpecificEcgVitals = function fetchSpecificEcgVitals(uuid) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref27 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee27(dispatch) {\n        return _regeneratorRuntime.wrap(function _callee27$(_context27) {\n          while (1) {\n            switch (_context27.prev = _context27.next) {\n              case 0:\n                ecgRef.child(uuid).on(\"value\", function (snapshot) {\n                  dispatch({\n                    type: FETCH_ECG_VITALS,\n                    payload: snapshot.val()\n                  });\n                });\n\n              case 1:\n              case \"end\":\n                return _context27.stop();\n            }\n          }\n        }, _callee27);\n      }));\n\n      return function (_x27) {\n        return _ref27.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var removeListenerSpecificEcgVitals = function removeListenerSpecificEcgVitals(uuid) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref28 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee28(dispatch) {\n        return _regeneratorRuntime.wrap(function _callee28$(_context28) {\n          while (1) {\n            switch (_context28.prev = _context28.next) {\n              case 0:\n                ecgRef.child(uuid).off();\n\n              case 1:\n              case \"end\":\n                return _context28.stop();\n            }\n          }\n        }, _callee28);\n      }));\n\n      return function (_x28) {\n        return _ref28.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var fetchHeartrateVitals = function fetchHeartrateVitals() {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref29 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee29(dispatch) {\n        return _regeneratorRuntime.wrap(function _callee29$(_context29) {\n          while (1) {\n            switch (_context29.prev = _context29.next) {\n              case 0:\n                heartrateRef.on(\"value\", function (snapshot) {\n                  dispatch({\n                    type: FETCH_HEARTRATE_VITALS,\n                    payload: snapshot.val()\n                  });\n                });\n\n              case 1:\n              case \"end\":\n                return _context29.stop();\n            }\n          }\n        }, _callee29);\n      }));\n\n      return function (_x29) {\n        return _ref29.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var fetchSpecificHeartrateVitals = function fetchSpecificHeartrateVitals(uuid) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref30 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee30(dispatch) {\n        return _regeneratorRuntime.wrap(function _callee30$(_context30) {\n          while (1) {\n            switch (_context30.prev = _context30.next) {\n              case 0:\n                heartrateRef.child(uuid).on(\"value\", function (snapshot) {\n                  dispatch({\n                    type: FETCH_HEARTRATE_VITALS,\n                    payload: snapshot.val()\n                  });\n                });\n\n              case 1:\n              case \"end\":\n                return _context30.stop();\n            }\n          }\n        }, _callee30);\n      }));\n\n      return function (_x30) {\n        return _ref30.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var removeListenerSpecificHeartrateVitals = function removeListenerSpecificHeartrateVitals(uuid) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref31 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee31(dispatch) {\n        return _regeneratorRuntime.wrap(function _callee31$(_context31) {\n          while (1) {\n            switch (_context31.prev = _context31.next) {\n              case 0:\n                heartrateRef.child(uuid).off();\n\n              case 1:\n              case \"end\":\n                return _context31.stop();\n            }\n          }\n        }, _callee31);\n      }));\n\n      return function (_x31) {\n        return _ref31.apply(this, arguments);\n      };\n    }()\n  );\n};","map":{"version":3,"sources":["/Users/jermz/Desktop/eclipse-workspace/medicalWebsite/src/actions/index.js"],"names":["READ_PATIENTS","READ_ASSETS","READ_STAFF","AUTH_USER","AUTH_ERROR","SIGN_OUT_USER","ADD_USERNAME","ASSIGN_BEACON","ASSIGN_DEVICES","CONFIRM_TYPE","ADD_PATIENT","EDIT_PATIENT","REMOVE_PATIENT","REMOVE_STAFF","REMOVE_ASSET","HIGHLIGHT_ASSET","HIGHLIGHT_STAFF","HIGHLIGHT_PATIENT","ADD_STAFF","ADD_ASSET","FETCH_MAPS","LOAD_MAP","LOAD_INFO","FETCH_DEVICES","FETCH_DEVICE_LOCATIONS","FETCH_SIMULATION_COORDINATES","FETCH_NEW_BEACON","FETCH_ECG_VITALS","FETCH_HEARTRATE_VITALS","FETCH_CONTACT_TRACE","FETCHING_PROCESS","FETCHING_DONE","UPDATE_TRACE_DETAILS","FETCH_FILTER_TRACE","FETCH_PATIENT_COUNT","FETCH_ASSET_COUNT","FETCH_STAFF_COUNT","UPDATE_PATIENT","UPDATE_ASSET","UPDATE_STAFF","ecgRef","heartrateRef","beaconCountRef","patientCountRef","staffCountRef","assetCountRef","medicalPortalFirebase","axios","addUsername","username","type","payload","assignBeacon","beacon","assignDevices","devices","confirmType","editPatient","patient","highlightPatient","patients","highlightAsset","asset","highlightStaff","staff","fetchMaps","maps","loadMap","map","loadInfo","object","fetchDevices","fetchDeviceLocations","fetchingProcess","fetchingDone","addPatient","dispatch","database","ref","child","push","set","removePatient","id","remove","updatePatient","readPatients","on","querySnapshot","snapshot","val","item","addAsset","removeAsset","updateAsset","readAssets","assets","addStaff","removeStaff","updateStaff","readStaff","signOutUser","auth","signOut","then","verifyAuth","onAuthStateChanged","user","authuser","currentUser","email","signInUser","credentials","signInWithEmailAndPassword","password","res","catch","err","fetchSimulationCoordinates","checkTime","Date","setSeconds","getSeconds","toISOString","substr","timeStart","timeEnd","size","coordinateQuery","get","params","source","JSON","stringify","source_content_type","fullTrace","data","hits","length","_source","fetchContactTrace","traceDetails","startTime","endTime","distance","contactDistance","name","index","query","fullShot","counter","forEach","timestamp","key","_id","scroll_size","total","scroll_id","_scroll_id","scrollQuery","getAPI","encodeURI","replace","contactURL","error","fetchNewBeacon","precomputedPath","errorObject","console","log","code","updateBeaconCount","count","newCount","fetchPatientCount","updatePatientCount","updateStaffCount","updateAssetCount","fetchAssetCount","fetchStaffCount","fetchEcgVitals","fetchSpecificEcgVitals","uuid","removeListenerSpecificEcgVitals","off","fetchHeartrateVitals","fetchSpecificHeartrateVitals","removeListenerSpecificHeartrateVitals"],"mappings":"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","sourcesContent":["import {\r\n  READ_PATIENTS,\r\n  READ_ASSETS,\r\n  READ_STAFF,\r\n  AUTH_USER,\r\n  AUTH_ERROR,\r\n  SIGN_OUT_USER,\r\n  ADD_USERNAME,\r\n  ASSIGN_BEACON,\r\n  ASSIGN_DEVICES,\r\n  CONFIRM_TYPE,\r\n  ADD_PATIENT,\r\n  EDIT_PATIENT,\r\n  REMOVE_PATIENT,\r\n  REMOVE_STAFF,\r\n  REMOVE_ASSET,\r\n  HIGHLIGHT_ASSET,\r\n  HIGHLIGHT_STAFF,\r\n  HIGHLIGHT_PATIENT,\r\n  ADD_STAFF,\r\n  ADD_ASSET,\r\n  FETCH_MAPS,\r\n  LOAD_MAP,\r\n  LOAD_INFO,\r\n  FETCH_DEVICES,\r\n  FETCH_DEVICE_LOCATIONS,\r\n  FETCH_SIMULATION_COORDINATES,\r\n  FETCH_NEW_BEACON,\r\n  FETCH_ECG_VITALS,\r\n  FETCH_HEARTRATE_VITALS,\r\n  FETCH_CONTACT_TRACE,\r\n  FETCHING_PROCESS,\r\n  FETCHING_DONE,\r\n  UPDATE_TRACE_DETAILS,\r\n  FETCH_FILTER_TRACE,\r\n  FETCH_PATIENT_COUNT,\r\n  FETCH_ASSET_COUNT,\r\n  FETCH_STAFF_COUNT,\r\n  UPDATE_PATIENT,\r\n  UPDATE_ASSET,\r\n  UPDATE_STAFF,\r\n } from \"../constants/action-types\";\r\n\r\n import { ecgRef, heartrateRef, beaconCountRef, patientCountRef, staffCountRef, assetCountRef, medicalPortalFirebase } from \"../firebase/index\"\r\n import axios from 'axios'\r\n\r\nexport const addUsername = username => ({ type: ADD_USERNAME,\r\n                                        payload: username });\r\n\r\nexport const assignBeacon = beacon => ({ type: ASSIGN_BEACON,\r\n                                          payload: beacon });\r\nexport const assignDevices = devices => ({ type: ASSIGN_DEVICES,\r\n                                          payload: devices });\r\n\r\nexport const confirmType = type => ({ type: CONFIRM_TYPE,\r\n                                          payload: type });\r\n\r\n\r\n\r\nexport const editPatient = patient => ({ type: EDIT_PATIENT,\r\n                                          payload: patient });\r\n\r\n\r\nexport const highlightPatient = patients => ({ type: HIGHLIGHT_PATIENT,\r\n                                          payload: patients });\r\n\r\n\r\nexport const highlightAsset = asset => ({ type: HIGHLIGHT_ASSET,\r\n                                            payload: asset });\r\n\r\nexport const highlightStaff = staff => ({ type: HIGHLIGHT_STAFF,\r\n                                            payload: staff });\r\nexport const fetchMaps = maps => ({ type: FETCH_MAPS,\r\n                                          payload: maps });\r\n\r\nexport const loadMap = map => ({ type: LOAD_MAP,\r\n                                          payload: map });\r\n\r\nexport const loadInfo = object => ({ type: LOAD_INFO,\r\n                                          payload: object });\r\n\r\nexport const fetchDevices = devices => ({ type: FETCH_DEVICES,\r\n                                          payload: devices });\r\n\r\nexport const fetchDeviceLocations = devices => ({ type: FETCH_DEVICE_LOCATIONS,\r\n                                          payload: devices });\r\n\r\nexport const fetchingProcess = () => ({ type: FETCHING_PROCESS\r\n                                               });\r\n\r\nexport const fetchingDone = () => ({ type: FETCHING_DONE\r\n                                               });\r\nexport const addPatient = (patient) => async dispatch => {\r\n\r\n  medicalPortalFirebase.database().ref().child('patients').push().set(patient)\r\n}\r\n\r\nexport const removePatient = (patient) => async dispatch => {\r\n  medicalPortalFirebase.database().ref().child(`patients/${patient.id}`).remove()\r\n}\r\n\r\n\r\nexport const updatePatient = (patient) => async dispatch => {\r\n  medicalPortalFirebase.database().ref().child(`patients/${patient.id}`).set(patient)\r\n}\r\n\r\nexport const readPatients = () => async dispatch => {\r\n  medicalPortalFirebase.database().ref().child('patients')\r\n  .on('value', querySnapshot => {\r\n\r\n      let patients = []\r\n      let snapshot = querySnapshot.val()\r\n      for(var id in snapshot) {\r\n        let item = snapshot[id]\r\n        item.id = id\r\n        patients.push(item)\r\n      }\r\n\r\n      dispatch({\r\n        type: READ_PATIENTS,\r\n        payload: patients\r\n      })\r\n\r\n  })\r\n}\r\n\r\nexport const addAsset = (asset) => async dispatch => {\r\n\r\n  medicalPortalFirebase.database().ref().child('assets').push().set(asset)\r\n}\r\n\r\nexport const removeAsset = (asset) => async dispatch => {\r\n  medicalPortalFirebase.database().ref().child(`assets/${asset.id}`).remove()\r\n}\r\n\r\n\r\nexport const updateAsset = (asset) => async dispatch => {\r\n  medicalPortalFirebase.database().ref().child(`assets/${asset.id}`).set(asset)\r\n}\r\n\r\nexport const readAssets = () => async dispatch => {\r\n  medicalPortalFirebase.database().ref().child('assets')\r\n  .on('value', querySnapshot => {\r\n\r\n      let assets = []\r\n      let snapshot = querySnapshot.val()\r\n      for(var id in snapshot) {\r\n        let item = snapshot[id]\r\n        item.id = id\r\n        assets.push(item)\r\n      }\r\n\r\n      dispatch({\r\n        type: READ_ASSETS,\r\n        payload: assets\r\n      })\r\n\r\n  })\r\n}\r\n\r\nexport const addStaff = (staff) => async dispatch => {\r\n\r\n  medicalPortalFirebase.database().ref().child('staff').push().set(staff)\r\n}\r\n\r\nexport const removeStaff = (staff) => async dispatch => {\r\n  medicalPortalFirebase.database().ref().child(`staff/${staff.id}`).remove()\r\n}\r\n\r\n\r\nexport const updateStaff = (staff) => async dispatch => {\r\n  medicalPortalFirebase.database().ref().child(`staff/${staff.id}`).set(staff)\r\n}\r\n\r\nexport const readStaff = () => async dispatch => {\r\n  medicalPortalFirebase.database().ref().child('staff')\r\n  .on('value', querySnapshot => {\r\n\r\n      let staff = []\r\n      let snapshot = querySnapshot.val()\r\n      for(var id in snapshot) {\r\n        let item = snapshot[id]\r\n        item.id = id\r\n        staff.push(item)\r\n      }\r\n\r\n      dispatch({\r\n        type: READ_STAFF,\r\n        payload: staff\r\n      })\r\n\r\n  })\r\n}\r\nexport const signOutUser = () => async dispatch => {\r\n  medicalPortalFirebase.auth().signOut()\r\n  .then(() => {\r\n    dispatch({ type: SIGN_OUT_USER})\r\n  })\r\n}\r\n\r\nexport const verifyAuth = () => async dispatch => {\r\n  medicalPortalFirebase.auth().onAuthStateChanged(user => {\r\n    if(user) {\r\n      let authuser = medicalPortalFirebase.auth().currentUser\r\n\r\n      dispatch({\r\n        type: ADD_USERNAME,\r\n        payload: authuser.email\r\n      })\r\n      dispatch({\r\n        type: AUTH_USER\r\n      })\r\n\r\n    } else {\r\n      dispatch({\r\n        type: SIGN_OUT_USER\r\n      })\r\n    }\r\n  })\r\n}\r\n\r\nexport const signInUser = (credentials) => async dispatch => {\r\n  medicalPortalFirebase.auth().signInWithEmailAndPassword(credentials.email, credentials.password)\r\n  .then(res => {\r\n    dispatch({\r\n      type: AUTH_USER\r\n    })\r\n  })\r\n  .catch(err => {\r\n    dispatch({\r\n      type: AUTH_ERROR,\r\n      payload: err\r\n    })\r\n  })\r\n}\r\nexport const fetchSimulationCoordinates = () => async dispatch => {\r\n  // let timeStart = Date.now()\r\n  // let timeEnd = Date.now()\r\n\r\n  let checkTime = new Date()\r\n  checkTime.setSeconds(checkTime.getSeconds() - 2)\r\n  checkTime = checkTime.toISOString().substr(0, 19);\r\n  let timeStart = checkTime\r\n  let timeEnd = checkTime\r\n\r\n  // let timeStart = '2019-04-06T16:55:00'\r\n  // let timeEnd = '2019-04-06T16:55:00'\r\n  let size = 10000\r\n  let coordinateQuery = {\r\n    \"size\": size,\r\n    \"sort\" : [{ \"timestamp\" : {\"order\" : \"asc\"}}],\r\n    \"query\": {\r\n      \"bool\": {\r\n        \"must\": [\r\n          {\r\n            \"range\" : {\r\n              \"@timestamp\" : {\r\n                \"gte\": timeStart,\r\n                \"lte\": timeEnd,\r\n              }\r\n            }\r\n          },\r\n        ]\r\n      }\r\n    }\r\n  }\r\n\r\n  axios.get(`http://137.132.165.139:9200/simulated-coordinates/_search?scroll=1m`, {\r\n    params: {\r\n        source: JSON.stringify(coordinateQuery),\r\n        source_content_type: 'application/json'\r\n      }\r\n  })\r\n  .then((res) => {\r\n    let fullTrace = res.data.hits.hits\r\n    if(fullTrace.length > 0) {\r\n    dispatch({\r\n      type: FETCH_SIMULATION_COORDINATES,\r\n      payload: res.data.hits.hits[0]._source\r\n    });\r\n    }\r\n  })\r\n\r\n}\r\n\r\n export const  fetchContactTrace = (traceDetails) => async dispatch => {\r\n  let timeStart = traceDetails.startTime;\r\n  let timeEnd = traceDetails.endTime;\r\n\r\n  timeStart = timeStart + ':00'\r\n  timeEnd = timeEnd + ':00'\r\n  const distance = traceDetails.contactDistance;\r\n  const beacon = traceDetails.name;\r\n  // let beacon = 51\r\n  // let distance = 10\r\n  let index = `precomputed-${beacon}`\r\n  //  let timeStart = `2019-04-06T16:47:55`\r\n  // let timeEnd = `2019-04-07T16:55:00`\r\n  let size = 10000\r\n\r\n  dispatch({\r\n    type: FETCHING_PROCESS\r\n  })\r\n\r\n  const query = {\r\n    \"size\": 10000,\r\n    \"sort\" : [{ \"timestamp\" : {\"order\" : \"asc\"}}],\r\n    \"query\": {\r\n      \"bool\": {\r\n        \"must\": [\r\n          {\r\n            \"range\" : {\r\n              \"@timestamp\" : {\r\n                \"gte\": timeStart,\r\n                \"lte\": timeEnd,\r\n                \"time_zone\": \"+08:00\"\r\n              }\r\n            }\r\n          },\r\n          {\r\n            \"range\" : {\r\n              \"distance\" : {\r\n                \"lte\": distance,\r\n              }\r\n            }\r\n          }\r\n        ]\r\n      }\r\n    }\r\n  };\r\n\r\n  let coordinateQuery = {\r\n    \"size\": size,\r\n    \"sort\" : [{ \"timestamp\" : {\"order\" : \"asc\"}}],\r\n    \"query\": {\r\n      \"bool\": {\r\n        \"must\": [\r\n          {\r\n            \"range\" : {\r\n              \"@timestamp\" : {\r\n                \"gte\": timeStart,\r\n                \"lte\": timeEnd,\r\n                \"time_zone\": \"+08:00\"\r\n              }\r\n            }\r\n          },\r\n        ]\r\n      }\r\n    }\r\n  }\r\n\r\n  axios.get(`http://137.132.165.139:9200/simulated-coordinates/_search?scroll=1m`, {\r\n    params: {\r\n        source: JSON.stringify(coordinateQuery),\r\n        source_content_type: 'application/json'\r\n      }\r\n  })\r\n  .then((res) => {\r\n    let fullTrace = res.data.hits.hits\r\n    let map = {}\r\n    let fullShot = []\r\n    let counter = 0\r\n    fullTrace.forEach( timestamp => {\r\n      let item = timestamp._source\r\n      item.key = timestamp._id;\r\n      // item.contact = []\r\n      fullShot.push(item)\r\n      map[timestamp._id] = counter\r\n      counter += 1\r\n    })\r\n\r\n    let scroll_size = res.data.hits.total\r\n\r\n    let scroll_id = res.data._scroll_id\r\n\r\n    let scrollQuery = {\r\n        'scroll' : '1m',\r\n        'scroll_id': scroll_id\r\n      }\r\n\r\n    getAPI(scrollQuery, fullShot)\r\n\r\n    timeStart = encodeURI(timeStart.replace('T', ' '));\r\n    timeEnd = encodeURI(timeEnd.replace('T', ' '));\r\n    let contactURL = `http://137.132.165.139:5001/contacts?beacon=${beacon}&distance=${distance}&startTime=${timeStart}&endTime=${timeEnd}`\r\n\r\n    axios.get(contactURL)\r\n    .then((res) => {\r\n\r\n      dispatch({\r\n          type: UPDATE_TRACE_DETAILS,\r\n          payload: traceDetails\r\n        })\r\n\r\n        dispatch({\r\n          type: FETCH_CONTACT_TRACE,\r\n          payload: fullShot\r\n        });\r\n\r\n        dispatch({\r\n          type: FETCH_FILTER_TRACE,\r\n          payload: res.data\r\n        });\r\n\r\n        dispatch({\r\n          type: FETCHING_DONE\r\n        })\r\n    }).catch(error => {\r\n\r\n    dispatch({\r\n      type: FETCHING_DONE\r\n    })\r\n    });\r\n\r\n\r\n  });\r\n\r\n}\r\n\r\nfunction getAPI(scrollQuery, fullShot) {\r\n\r\n       axios.get(`http://137.132.165.139:9200/_search/scroll`, {\r\n        params: {\r\n          source: JSON.stringify(scrollQuery),\r\n          source_content_type: 'application/json'\r\n        }\r\n    }).then((res) => {\r\n\r\n      res.data.hits.hits.forEach(timestamp => {\r\n        let item = timestamp._source\r\n        item.key = timestamp._id;\r\n        // item.contact = []\r\n        fullShot.push(item)\r\n\r\n      })\r\n\r\n      let scroll_id = res.data._scroll_id\r\n      let scrollQuery = {\r\n        'scroll' : '1m',\r\n        'scroll_id': scroll_id\r\n      }\r\n      let scroll_size = res.data.hits.hits.length\r\n\r\n      if(scroll_size > 0) {\r\n        getAPI(scrollQuery, fullShot)\r\n      }\r\n\r\n    })\r\n}\r\nexport const fetchNewBeacon = () => async dispatch => {\r\n  let precomputedPath = `beaconCounter/`\r\n  beaconCountRef.on(\"value\", querySnapshot => {\r\n    dispatch({\r\n      type: FETCH_NEW_BEACON,\r\n      payload: querySnapshot.val()\r\n    })\r\n  }, function (errorObject) {\r\n  console.log(\"The read failed: \" + errorObject.code);\r\n})\r\n}\r\n\r\nexport const updateBeaconCount = (count) => async dispatch => {\r\n  let newCount = count + 1;\r\n  beaconCountRef.set({\r\n    count: newCount\r\n  })\r\n}\r\n\r\nexport const fetchPatientCount = () => async dispatch => {\r\n  let precomputedPath = `patientCounter/`\r\n  patientCountRef.on(\"value\", querySnapshot => {\r\n    dispatch({\r\n      type: FETCH_PATIENT_COUNT,\r\n      payload: querySnapshot.val()\r\n    })\r\n  }, function (errorObject) {\r\n  console.log(\"The read failed: \" + errorObject.code);\r\n})\r\n}\r\n\r\nexport const updatePatientCount = (count) => async dispatch => {\r\n  let newCount = count + 1;\r\n  patientCountRef.set({\r\n    count: newCount\r\n  })\r\n}\r\n\r\nexport const updateStaffCount = (count) => async dispatch => {\r\n  let newCount = count + 1;\r\n  staffCountRef.set({\r\n    count: newCount\r\n  })\r\n}\r\n\r\nexport const updateAssetCount = (count) => async dispatch => {\r\n  let newCount = count + 1;\r\n  assetCountRef.set({\r\n    count: newCount\r\n  })\r\n}\r\n\r\nexport const fetchAssetCount = () => async dispatch => {\r\n  assetCountRef.on(\"value\", querySnapshot => {\r\n    dispatch({\r\n      type: FETCH_ASSET_COUNT,\r\n      payload: querySnapshot.val()\r\n    })\r\n  }, function (errorObject) {\r\n  console.log(\"The read failed: \" + errorObject.code);\r\n})\r\n}\r\n\r\nexport const fetchStaffCount = () => async dispatch => {\r\n  staffCountRef.on(\"value\", querySnapshot => {\r\n    dispatch({\r\n      type: FETCH_STAFF_COUNT,\r\n      payload: querySnapshot.val()\r\n    })\r\n  }, function (errorObject) {\r\n  console.log(\"The read failed: \" + errorObject.code);\r\n})\r\n}\r\n\r\nexport const fetchEcgVitals = () => async dispatch => {\r\n\r\n  ecgRef.on(\"value\", snapshot => {\r\n\r\n    dispatch({\r\n      type: FETCH_ECG_VITALS,\r\n      payload: snapshot.val()\r\n    });\r\n  });\r\n}\r\n\r\nexport const fetchSpecificEcgVitals = (uuid) => async dispatch => {\r\n\r\n  ecgRef.child(uuid).on(\"value\", snapshot => {\r\n    dispatch({\r\n      type: FETCH_ECG_VITALS,\r\n      payload: snapshot.val()\r\n    });\r\n  });\r\n}\r\nexport const removeListenerSpecificEcgVitals = (uuid) => async dispatch => {\r\n  ecgRef.child(uuid).off()\r\n}\r\nexport const fetchHeartrateVitals = () => async dispatch => {\r\n\r\n  heartrateRef.on(\"value\", snapshot => {\r\n    dispatch({\r\n      type: FETCH_HEARTRATE_VITALS,\r\n      payload: snapshot.val()\r\n    });\r\n  });\r\n\r\n}\r\n\r\nexport const fetchSpecificHeartrateVitals = (uuid) => async dispatch => {\r\n\r\n  heartrateRef.child(uuid).on(\"value\", snapshot => {\r\n    dispatch({\r\n      type: FETCH_HEARTRATE_VITALS,\r\n      payload: snapshot.val()\r\n    });\r\n  });\r\n}\r\n\r\nexport const removeListenerSpecificHeartrateVitals = (uuid) => async dispatch => {\r\n  heartrateRef.child(uuid).off()\r\n}\r\n"]},"metadata":{},"sourceType":"module"}