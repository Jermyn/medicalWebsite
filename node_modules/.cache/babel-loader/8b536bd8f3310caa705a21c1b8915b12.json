{"ast":null,"code":"import _defineProperty from \"/Users/jermz/Desktop/eclipse-workspace/medicalWebsite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"/Users/jermz/Desktop/eclipse-workspace/medicalWebsite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/Users/jermz/Desktop/eclipse-workspace/medicalWebsite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { AUTH_USER, AUTH_ERROR, SIGN_OUT_USER, ADD_USERNAME, ASSIGN_BEACON, ASSIGN_DEVICES, CONFIRM_TYPE, ADD_PATIENT, EDIT_PATIENT, REMOVE_PATIENT, REMOVE_STAFF, REMOVE_ASSET, ADD_STAFF, ADD_ASSET, FETCH_MAPS, LOAD_MAP, LOAD_INFO, FETCH_DEVICES, HIGHLIGHT_PATIENT, HIGHLIGHT_ASSET, HIGHLIGHT_STAFF, FETCH_PATIENT_COUNT, FETCH_ASSET_COUNT, FETCH_STAFF_COUNT, FETCH_DEVICE_LOCATIONS, FETCH_SIMULATION_COORDINATES, FETCH_CONTACT_TRACE, FETCH_ECG_VITALS, FETCH_HEARTRATE_VITALS, FETCHING_PROCESS, FETCHING_DONE, UPDATE_TRACE_DETAILS, UPDATE_PATIENT, UPDATE_STAFF, UPDATE_ASSET, FETCH_FILTER_TRACE, FETCH_NEW_BEACON, READ_PATIENTS, READ_ASSETS, READ_STAFF } from \"../constants/action-types\";\nimport update from 'immutability-helper';\nvar initialState = {\n  username: {\n    username: 'staff'\n  },\n  confirmType: {\n    type: 'Patient'\n  },\n  assets: [],\n  staff: [],\n  patients: [],\n  contactTrace: [],\n  edit: \"\",\n  maps: [],\n  map: \"\",\n  devices: [],\n  deviceLogs: [],\n  ecg: {},\n  heartrate: {},\n  simulation: \"\",\n  info: \"\",\n  fetching: false,\n  traceDetails: [],\n  filterTrace: [],\n  beaconCounter: \"\"\n};\n\nvar rootReducer = function rootReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case READ_PATIENTS:\n      return _objectSpread({}, state, {\n        patients: action.payload.map(function (patient) {\n          state.patients.forEach(function (item) {\n            if (item.id == patient.id) {\n              patient.highlight = item.highlight;\n            }\n          });\n          return patient;\n        })\n      });\n\n    case READ_ASSETS:\n      return _objectSpread({}, state, {\n        assets: action.payload.map(function (asset) {\n          state.assets.forEach(function (item) {\n            if (item.id == asset.id) {\n              asset.highlight = item.highlight;\n            }\n          });\n          return asset;\n        })\n      });\n\n    case READ_STAFF:\n      return _objectSpread({}, state, {\n        staff: action.payload.map(function (staff) {\n          state.staff.forEach(function (item) {\n            if (item.id == staff.id) {\n              staff.highlight = item.highlight;\n            }\n          });\n          return staff;\n        })\n      });\n\n    case AUTH_USER:\n      return _objectSpread({}, state, {\n        authenticated: true,\n        autherror: null,\n        isAuthenticating: false\n      });\n\n    case SIGN_OUT_USER:\n      return _objectSpread({}, state, {\n        authenticated: false,\n        autherror: null,\n        isAuthenticating: false\n      });\n\n    case AUTH_ERROR:\n      return _objectSpread({}, state, {\n        authenticated: false,\n        autherror: action.payload.message,\n        isAuthenticating: false\n      });\n\n    case ADD_USERNAME:\n      return _objectSpread({}, state, {\n        username: action.payload\n      });\n\n    case ASSIGN_BEACON:\n      return _objectSpread({}, state, {\n        beacon: action.payload\n      });\n\n    case ASSIGN_DEVICES:\n      return _objectSpread({}, state, {\n        assignDevices: action.payload\n      });\n\n    case CONFIRM_TYPE:\n      return _objectSpread({}, state, {\n        confirmType: action.payload\n      });\n\n    case ADD_PATIENT:\n      return _objectSpread({}, state, {\n        patients: [].concat(_toConsumableArray(state.patients), [action.payload])\n      });\n\n    case EDIT_PATIENT:\n      return _objectSpread({}, state, {\n        edit: action.payload\n      });\n\n    case REMOVE_PATIENT:\n      return _objectSpread({}, state, {\n        patients: state.patients.filter(function (patient) {\n          return patient !== action.payload;\n        })\n      });\n\n    case ADD_STAFF:\n      return _objectSpread({}, state, {\n        staff: [].concat(_toConsumableArray(state.staff), [action.payload])\n      });\n\n    case REMOVE_STAFF:\n      return _objectSpread({}, state, {\n        staff: state.staff.filter(function (staffmember) {\n          return staffmember !== action.payload;\n        })\n      });\n\n    case ADD_ASSET:\n      return _objectSpread({}, state, {\n        assets: [].concat(_toConsumableArray(state.assets), [action.payload])\n      });\n\n    case REMOVE_ASSET:\n      return _objectSpread({}, state, {\n        assets: state.assets.filter(function (asset) {\n          return asset !== action.payload;\n        })\n      });\n\n    case FETCH_MAPS:\n      return _objectSpread({}, state, {\n        maps: action.payload\n      });\n\n    case LOAD_MAP:\n      return _objectSpread({}, state, {\n        map: action.payload\n      });\n\n    case FETCH_DEVICES:\n      return _objectSpread({}, state, {\n        devices: action.payload\n      });\n\n    case FETCH_DEVICE_LOCATIONS:\n      return _objectSpread({}, state, {\n        deviceLogs: action.payload.aggregations.id.buckets.map(function (x) {\n          return x.latest.hits.hits[0]._source;\n        })\n      });\n\n    case FETCH_ECG_VITALS:\n      return _objectSpread({}, state, {\n        ecg: action.payload\n      });\n\n    case FETCH_SIMULATION_COORDINATES:\n      return _objectSpread({}, state, {\n        simulation: action.payload\n      });\n\n    case FETCH_HEARTRATE_VITALS:\n      return _objectSpread({}, state, {\n        heartrate: action.payload\n      });\n\n    case LOAD_INFO:\n      return _objectSpread({}, state, {\n        info: action.payload\n      });\n\n    case FETCH_CONTACT_TRACE:\n      return _objectSpread({}, state, {\n        contactTrace: action.payload\n      });\n\n    case FETCHING_PROCESS:\n      return _objectSpread({}, state, {\n        fetching: true\n      });\n\n    case FETCHING_DONE:\n      return _objectSpread({}, state, {\n        fetching: false\n      });\n\n    case UPDATE_TRACE_DETAILS:\n      return _objectSpread({}, state, {\n        traceDetails: action.payload\n      });\n\n    case FETCH_FILTER_TRACE:\n      return _objectSpread({}, state, {\n        filterTrace: action.payload\n      });\n\n    case FETCH_NEW_BEACON:\n      return _objectSpread({}, state, {\n        beaconCounter: action.payload\n      });\n\n    case FETCH_PATIENT_COUNT:\n      return _objectSpread({}, state, {\n        patientCounter: action.payload\n      });\n\n    case FETCH_ASSET_COUNT:\n      return _objectSpread({}, state, {\n        assetCounter: action.payload\n      });\n\n    case FETCH_STAFF_COUNT:\n      return _objectSpread({}, state, {\n        staffCounter: action.payload\n      });\n\n    case UPDATE_PATIENT:\n      return _objectSpread({}, state, {\n        patients: state.patients.map(function (patient) {\n          return patient.id === action.payload.id ? action.payload : patient;\n        })\n      });\n\n    case UPDATE_STAFF:\n      return _objectSpread({}, state, {\n        staff: state.staff.map(function (staffmem) {\n          return staffmem.id === action.payload.id ? action.payload : staffmem;\n        })\n      });\n\n    case UPDATE_ASSET:\n      return _objectSpread({}, state, {\n        assets: state.assets.map(function (asset) {\n          return asset.id === action.payload.id ? action.payload : asset;\n        })\n      });\n\n    case HIGHLIGHT_PATIENT:\n      return update(state, {\n        patients: _defineProperty({}, action.payload.index, {\n          highlight: {\n            $set: action.payload.highlight\n          }\n        })\n      });\n\n    case HIGHLIGHT_ASSET:\n      return update(state, {\n        assets: _defineProperty({}, action.payload.index, {\n          highlight: {\n            $set: action.payload.highlight\n          }\n        })\n      });\n\n    case HIGHLIGHT_STAFF:\n      return update(state, {\n        staff: _defineProperty({}, action.payload.index, {\n          highlight: {\n            $set: action.payload.highlight\n          }\n        })\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default rootReducer;","map":{"version":3,"sources":["/Users/jermz/Desktop/eclipse-workspace/medicalWebsite/src/reducers/index.js"],"names":["AUTH_USER","AUTH_ERROR","SIGN_OUT_USER","ADD_USERNAME","ASSIGN_BEACON","ASSIGN_DEVICES","CONFIRM_TYPE","ADD_PATIENT","EDIT_PATIENT","REMOVE_PATIENT","REMOVE_STAFF","REMOVE_ASSET","ADD_STAFF","ADD_ASSET","FETCH_MAPS","LOAD_MAP","LOAD_INFO","FETCH_DEVICES","HIGHLIGHT_PATIENT","HIGHLIGHT_ASSET","HIGHLIGHT_STAFF","FETCH_PATIENT_COUNT","FETCH_ASSET_COUNT","FETCH_STAFF_COUNT","FETCH_DEVICE_LOCATIONS","FETCH_SIMULATION_COORDINATES","FETCH_CONTACT_TRACE","FETCH_ECG_VITALS","FETCH_HEARTRATE_VITALS","FETCHING_PROCESS","FETCHING_DONE","UPDATE_TRACE_DETAILS","UPDATE_PATIENT","UPDATE_STAFF","UPDATE_ASSET","FETCH_FILTER_TRACE","FETCH_NEW_BEACON","READ_PATIENTS","READ_ASSETS","READ_STAFF","update","initialState","username","confirmType","type","assets","staff","patients","contactTrace","edit","maps","map","devices","deviceLogs","ecg","heartrate","simulation","info","fetching","traceDetails","filterTrace","beaconCounter","rootReducer","state","action","payload","patient","forEach","item","id","highlight","asset","authenticated","autherror","isAuthenticating","message","beacon","assignDevices","filter","staffmember","aggregations","buckets","x","latest","hits","_source","patientCounter","assetCounter","staffCounter","staffmem","index","$set"],"mappings":"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","sourcesContent":["import {\r\n  AUTH_USER,\r\n  AUTH_ERROR,\r\n  SIGN_OUT_USER,\r\n  ADD_USERNAME,\r\n  ASSIGN_BEACON,\r\n  ASSIGN_DEVICES,\r\n  CONFIRM_TYPE,\r\n  ADD_PATIENT,\r\n  EDIT_PATIENT,\r\n  REMOVE_PATIENT,\r\n  REMOVE_STAFF,\r\n  REMOVE_ASSET,\r\n  ADD_STAFF,\r\n  ADD_ASSET,\r\n  FETCH_MAPS,\r\n  LOAD_MAP,\r\n  LOAD_INFO,\r\n  FETCH_DEVICES,\r\n  HIGHLIGHT_PATIENT,\r\n  HIGHLIGHT_ASSET,\r\n  HIGHLIGHT_STAFF,\r\n  FETCH_PATIENT_COUNT,\r\n  FETCH_ASSET_COUNT,\r\n  FETCH_STAFF_COUNT,\r\n  FETCH_DEVICE_LOCATIONS,\r\n  FETCH_SIMULATION_COORDINATES,\r\n  FETCH_CONTACT_TRACE,\r\n  FETCH_ECG_VITALS,\r\n  FETCH_HEARTRATE_VITALS,\r\n  FETCHING_PROCESS,\r\n  FETCHING_DONE,\r\n  UPDATE_TRACE_DETAILS,\r\n  UPDATE_PATIENT,\r\n  UPDATE_STAFF,\r\n  UPDATE_ASSET,\r\n  FETCH_FILTER_TRACE,\r\n  FETCH_NEW_BEACON,\r\n  READ_PATIENTS,\r\n  READ_ASSETS,\r\n  READ_STAFF,\r\n} from \"../constants/action-types\";\r\nimport update from 'immutability-helper';\r\nconst initialState = {\r\n  username: { username: 'staff', },\r\n  confirmType: { type: 'Patient'},\r\n  assets: [],\r\n  staff: [],\r\n  patients: [],\r\n  contactTrace: [],\r\n  edit: \"\",\r\n  maps: [],\r\n  map : \"\",\r\n  devices: [],\r\n  deviceLogs: [],\r\n  ecg: {},\r\n  heartrate: {},\r\n  simulation: \"\",\r\n  info: \"\",\r\n  fetching: false,\r\n  traceDetails: [],\r\n  filterTrace: [],\r\n  beaconCounter: \"\",\r\n};\r\n\r\nconst rootReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n      case READ_PATIENTS:\r\n      return {...state, patients: action.payload.map(patient => {\r\n        state.patients.forEach(item => {\r\n          if(item.id == patient.id) {\r\n            patient.highlight = item.highlight\r\n          }\r\n        })\r\n        return patient\r\n      })}\r\n      case READ_ASSETS:\r\n      return {...state, assets: action.payload.map(asset => {\r\n        state.assets.forEach(item => {\r\n          if(item.id == asset.id) {\r\n            asset.highlight = item.highlight\r\n          }\r\n        })\r\n        return asset\r\n      })}\r\n      case READ_STAFF:\r\n      return {...state, staff: action.payload.map(staff => {\r\n        state.staff.forEach(item => {\r\n          if(item.id == staff.id) {\r\n            staff.highlight = item.highlight\r\n          }\r\n        })\r\n        return staff\r\n      })}\r\n      case AUTH_USER:\r\n        return {...state, authenticated: true, autherror: null, isAuthenticating: false};\r\n      case SIGN_OUT_USER:\r\n        return {...state, authenticated: false, autherror: null, isAuthenticating: false}\r\n      case AUTH_ERROR:\r\n        return {...state, authenticated: false, autherror: action.payload.message, isAuthenticating: false}\r\n      case ADD_USERNAME:\r\n        return { ...state, username: action.payload };\r\n      case ASSIGN_BEACON:\r\n        return { ...state, beacon: action.payload };\r\n      case ASSIGN_DEVICES:\r\n        return { ...state, assignDevices: action.payload };\r\n      case CONFIRM_TYPE:\r\n        return { ...state, confirmType: action.payload };\r\n      case ADD_PATIENT:\r\n        return { ...state,  patients: [...state.patients, action.payload] };\r\n      case EDIT_PATIENT:\r\n        return {...state,  edit: action.payload}\r\n      case REMOVE_PATIENT:\r\n        return {...state,  patients: state.patients.filter(patient => patient !== action.payload)}\r\n      case ADD_STAFF:\r\n        return { ...state,  staff: [...state.staff, action.payload] };\r\n      case REMOVE_STAFF:\r\n        return {...state,  staff: state.staff.filter(staffmember => staffmember !== action.payload)}\r\n      case ADD_ASSET:\r\n        return { ...state,  assets: [...state.assets, action.payload] };\r\n      case REMOVE_ASSET:\r\n        return {...state,  assets: state.assets.filter(asset => asset !== action.payload)}\r\n      case FETCH_MAPS:\r\n        return { ...state,  maps: action.payload };\r\n      case LOAD_MAP:\r\n        return { ...state,  map: action.payload };\r\n      case FETCH_DEVICES:\r\n        return { ...state,  devices: action.payload };\r\n      case FETCH_DEVICE_LOCATIONS:\r\n        return { ...state,  deviceLogs: action.payload.aggregations.id.buckets.map ((x) => x.latest.hits.hits[0]._source) };\r\n      case FETCH_ECG_VITALS:\r\n        return { ...state,  ecg: action.payload };\r\n      case FETCH_SIMULATION_COORDINATES:\r\n        return {...state, simulation: action.payload}\r\n        case FETCH_HEARTRATE_VITALS:\r\n          return { ...state,  heartrate: action.payload };\r\n      case LOAD_INFO:\r\n        return { ...state,  info: action.payload };\r\n      case FETCH_CONTACT_TRACE:\r\n        return { ...state,  contactTrace: action.payload };\r\n      case FETCHING_PROCESS:\r\n        return { ...state,  fetching: true };\r\n      case FETCHING_DONE:\r\n        return { ...state,  fetching: false };\r\n      case UPDATE_TRACE_DETAILS:\r\n        return {...state,  traceDetails: action.payload}\r\n      case FETCH_FILTER_TRACE:\r\n        return {...state,  filterTrace: action.payload}\r\n      case FETCH_NEW_BEACON:\r\n        return {...state,  beaconCounter: action.payload}\r\n      case FETCH_PATIENT_COUNT:\r\n        return {...state, patientCounter: action.payload}\r\n      case FETCH_ASSET_COUNT:\r\n        return {...state, assetCounter: action.payload}\r\n      case FETCH_STAFF_COUNT:\r\n        return {...state, staffCounter: action.payload}\r\n      case UPDATE_PATIENT:\r\n      return {\r\n        ...state,\r\n          patients: state.patients.map(patient => (patient.id === action.payload.id) ? action.payload : patient),\r\n      }\r\n      case UPDATE_STAFF:\r\n      return {\r\n        ...state,\r\n          staff: state.staff.map(staffmem => (staffmem.id === action.payload.id) ? action.payload : staffmem),\r\n      }\r\n      case UPDATE_ASSET:\r\n      return {\r\n        ...state,\r\n          assets: state.assets.map(asset => (asset.id === action.payload.id) ? action.payload : asset),\r\n      }\r\n      case HIGHLIGHT_PATIENT:\r\n        return update(state, {\r\n            patients: {\r\n              [action.payload.index]: {\r\n                highlight: {$set: action.payload.highlight}\r\n              }\r\n            }\r\n        })\r\n        case HIGHLIGHT_ASSET:\r\n          return update(state, {\r\n              assets: {\r\n                [action.payload.index]: {\r\n                  highlight: {$set: action.payload.highlight}\r\n                }\r\n              }\r\n          })\r\n          case HIGHLIGHT_STAFF:\r\n            return update(state, {\r\n                staff: {\r\n                  [action.payload.index]: {\r\n                    highlight: {$set: action.payload.highlight}\r\n                  }\r\n                }\r\n            })\r\n      default:\r\n        return state;\r\n    }\r\n};\r\n\r\nexport default rootReducer;\r\n"]},"metadata":{},"sourceType":"module"}