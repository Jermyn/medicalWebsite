{"ast":null,"code":"import _objectSpread from \"/Users/jermz/Desktop/eclipse-workspace/medicalWebsite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/jermz/Desktop/eclipse-workspace/medicalWebsite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jermz/Desktop/eclipse-workspace/medicalWebsite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jermz/Desktop/eclipse-workspace/medicalWebsite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jermz/Desktop/eclipse-workspace/medicalWebsite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jermz/Desktop/eclipse-workspace/medicalWebsite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/jermz/Desktop/eclipse-workspace/medicalWebsite/src/InfoMap.js\";\nimport React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { fetchMaps as _fetchMaps, confirmType as _confirmType, fetchDeviceLocations as _fetchDeviceLocations } from \"./actions/index\";\nimport MapGL, { Marker, Popup, NavigationControl } from 'react-map-gl';\nimport ReactMapboxGl from 'react-mapbox-gl';\nimport { Source, Layer, Feature } from \"react-mapbox-gl\";\nimport mapboxgl from 'mapbox-gl'; // import StatePin from './StatePin'\n\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport axios from 'axios';\nvar e = React.createElement;\nvar restUrlHTTPS = \"http://137.132.165.139:3000/api\";\nvar TOKEN = 'pk.eyJ1IjoiZnlwZW5nIiwiYSI6ImNqcmFlazM4YjAxejkzeW1wbWg2Zmp2aWsifQ.obOnEjbqcpEWu9HIh6zPlw'; // Set your mapbox token here\n\nvar graphqlUrlHTTPS = 'http://137.132.165.139:3000/graphql';\nvar ReactMap = ReactMapboxGl({\n  accessToken: \"\".concat(TOKEN),\n  maxZoom: 13,\n  minZoom: 8\n});\nvar navStyle = {\n  position: 'absolute',\n  top: 0,\n  left: 0,\n  padding: '10px'\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    maps: state.maps,\n    devices: state.devices,\n    deviceLogs: state.deviceLogs,\n    patients: state.patients,\n    assets: state.assets,\n    staff: state.staff,\n    info: state.info\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    confirmType: function confirmType(type) {\n      return dispatch(_confirmType(type));\n    },\n    fetchMaps: function fetchMaps(maps) {\n      return dispatch(_fetchMaps(maps));\n    },\n    fetchDeviceLocations: function fetchDeviceLocations(deviceLogs) {\n      return dispatch(_fetchDeviceLocations(deviceLogs));\n    }\n  };\n};\n\nvar InfoMap =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(InfoMap, _Component);\n\n  function InfoMap(props) {\n    var _this;\n\n    _classCallCheck(this, InfoMap);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(InfoMap).call(this, props));\n\n    _this.fetch = function (dispatch) {\n      var query = \"\\n      query {\\n        maps {\\n          id\\n          scale\\n          coordinates\\n          imageURL\\n          navMesh\\n          navPath\\n          pois\\n        }\\n      }\\n    \";\n\n      _this.request({\n        query: query\n      }).then(function (data) {\n        var loading = _this.state.loading;\n\n        if (loading) {\n          _this.getDeviceLogs();\n        }\n\n        _this.props.fetchMaps(data.data.data.maps);\n      });\n    };\n\n    _this.request = function (_ref) {\n      var query = _ref.query,\n          variables = _ref.variables;\n      var promise = axios({\n        method: 'post',\n        url: \"\".concat(graphqlUrlHTTPS),\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        data: JSON.stringify({\n          query: query,\n          variables: variables\n        })\n      });\n      return promise;\n    };\n\n    _this.getDeviceLogs = function (dispatch) {\n      var promise = axios({\n        method: 'get',\n        url: \"\".concat(restUrlHTTPS, \"/Devices/logs\"),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(function (data) {\n        _this.props.fetchDeviceLocations(data.data);\n      });\n      return promise;\n    };\n\n    _this.mapgl = function () {\n      return _this.refs.map.getChildContext().map;\n    };\n\n    _this.getChildContext = function () {\n      return {\n        map: _this.map\n      };\n    };\n\n    _this.createBeaconMarkers = function (initialize) {\n      var map = _this.state.map;\n\n      if (initialize != null) {\n        map = initialize;\n      }\n\n      if (map != \"\") {\n        var filteredLogs = _this.props.deviceLogs.filter(function (device) {\n          return device.map.id == map.id;\n        });\n\n        var mobileDevices = [];\n        var staffDevices = [];\n        var assetDevices = [];\n        filteredLogs = filteredLogs.filter(function (device) {\n          return device.id == _this.props.info.beacon[0];\n        });\n        filteredLogs.map(function (device) {\n          if (_this.props.info.type == \"Patient\") {\n            _this.props.patients.forEach(function (patient) {\n              if (patient.beacon != null) {\n                if (device.id == patient.beacon[0]) {\n                  var newObj = JSON.parse(JSON.stringify(device));\n                  newObj.id = patient.name;\n                  mobileDevices.push(newObj);\n                }\n              }\n            });\n          } else if (_this.props.info.type == \"Asset\") {\n            _this.props.assets.forEach(function (asset) {\n              if (asset.beacon != null) {\n                if (device.id == asset.beacon[0]) {\n                  var newObj = JSON.parse(JSON.stringify(device));\n                  newObj.id = asset.name;\n                  assetDevices.push(newObj);\n                }\n              }\n            });\n          } else {\n            _this.props.staff.forEach(function (staffmem) {\n              if (staffmem.beacon != null) {\n                if (device.id == staffmem.beacon[0]) {\n                  var newObj = JSON.parse(JSON.stringify(device));\n                  newObj.id = staffmem.name;\n                  staffDevices.push(newObj);\n                }\n              }\n            });\n          }\n        });\n\n        _this.setState({\n          mobileDevices: mobileDevices\n        });\n\n        _this.setState({\n          staffDevices: staffDevices\n        });\n\n        _this.setState({\n          assetDevices: assetDevices\n        });\n      }\n    };\n\n    _this.initializeMap = function (map, jump) {\n      _this.setState({\n        initial: map\n      });\n\n      _this.setState({\n        map: map\n      });\n\n      var sourceOptions = {\n        coordinates: map != null ? map.coordinates : undefined,\n        type: 'image',\n        url: map != null ? map.imageURL : undefined\n      };\n\n      _this.setState({\n        sourceOptions: sourceOptions\n      });\n\n      if (map != \"\" && _this.props.info != \"\" && _this.props.info != null) {\n        var bounds = new mapboxgl.LngLatBounds(_this.__guard__(map != null ? map.coordinates : undefined, function (x) {\n          return x[3];\n        }), _this.__guard__(map != null ? map.coordinates : undefined, function (x1) {\n          return x1[1];\n        }));\n        var center = bounds.getCenter();\n\n        _this.setState({\n          center: center\n        });\n\n        var filteredLogs = _this.props.deviceLogs.filter(function (device) {\n          return device.map.id == map.id;\n        });\n\n        filteredLogs = filteredLogs.filter(function (device) {\n          return device.id == _this.props.info.beacon[0];\n        });\n        var mobileDevices = [];\n        var assetDevices = [];\n        var staffDevices = [];\n        filteredLogs.map(function (device) {\n          if (_this.props.info.type == \"Patient\") {\n            _this.props.patients.forEach(function (patient) {\n              if (patient.beacon != null) {\n                if (device.id == patient.beacon[0]) {\n                  var newObj = JSON.parse(JSON.stringify(device));\n                  newObj.id = patient.name;\n                  mobileDevices.push(newObj);\n                }\n              }\n            });\n          } else if (_this.props.info.type == \"Asset\") {\n            _this.props.assets.forEach(function (asset) {\n              if (asset.beacon != null) {\n                if (device.id == asset.beacon[0]) {\n                  var newObj = JSON.parse(JSON.stringify(device));\n                  newObj.id = asset.name;\n                  assetDevices.push(newObj);\n                }\n              }\n            });\n          } else {\n            _this.props.staff.forEach(function (staffmem) {\n              if (staffmem.beacon != null) {\n                if (device.id == staffmem.beacon[0]) {\n                  var newObj = JSON.parse(JSON.stringify(device));\n                  newObj.id = staffmem.name;\n                  staffDevices.push(newObj);\n                }\n              }\n            });\n          }\n        });\n\n        _this.setState({\n          mobileDevices: mobileDevices\n        });\n\n        _this.setState({\n          assetDevices: assetDevices\n        });\n\n        _this.setState({\n          staffDevices: staffDevices\n        });\n\n        var staticDevices = _this.props.devices.filter(function (device) {\n          return device.type == 'static';\n        });\n\n        staticDevices = staticDevices.filter(function (device) {\n          return device.location != null;\n        });\n        staticDevices = staticDevices.filter(function (device) {\n          return device.location.map.id == map.id;\n        });\n\n        _this.setState({\n          staticDevices: staticDevices\n        });\n\n        _this.setState({\n          loading: false\n        });\n\n        _this.createBeaconMarkers(map);\n      }\n    };\n\n    _this.onStyleLoad = function (mapgl) {\n      var _this$props = _this.props,\n          onLoad = _this$props.onLoad,\n          map = _this$props.map;\n\n      if (map != null) {\n        _this.initializeMap(map);\n      }\n    };\n\n    _this.getCirclePaint = function () {\n      return {\n        'circle-radius': _this.state.circleRadius,\n        'circle-color': '#FFFF00',\n        'circle-opacity': 0.4\n      };\n    };\n\n    _this._resize = function () {\n      _this.setState({\n        viewport: _objectSpread({}, _this.state.viewport, {\n          width: '100%',\n          height: '70vh'\n        })\n      });\n    };\n\n    _this._updateViewport = function (viewport) {\n      _this.setState({\n        viewport: viewport\n      });\n    };\n\n    _this.__guard__ = function (value, transform) {\n      return typeof value !== 'undefined' && value !== null ? transform(value) : undefined;\n    };\n\n    _this.renderHighlightDevices = function () {\n      var patients = _this.props.patients;\n      var beacons = _this.state.mobileDevices;\n      var devices = [];\n\n      var _loop = function _loop(i) {\n        beacons.map(function (device) {\n          if (patients[i].beacon == device.id && patients[i].highlight == true) {\n            devices.push(React.createElement(Feature, {\n              key: device.id,\n              coordinates: [device.lng, device.lat],\n              properties: {\n                title: device.id,\n                id: device.id\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 346\n              },\n              __self: this\n            }));\n          }\n        });\n      };\n\n      for (var i = 0; i < patients.length; i++) {\n        _loop(i);\n      }\n\n      return devices;\n    };\n\n    _this.renderDevices = function (type) {\n      var devices = [];\n      var createDevices = [];\n      if (type == 'static') createDevices = _this.state.staticDevices.map(function (device) {\n        devices.push(React.createElement(Feature, {\n          key: device.id,\n          coordinates: [device.location.lng, device.location.lat],\n          properties: {\n            title: device.id,\n            id: device.id\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 366\n          },\n          __self: this\n        }));\n      });else {\n        createDevices = _this.state.mobileDevices.map(function (device) {\n          devices.push(React.createElement(Feature, {\n            key: device.id,\n            coordinates: [device.lng, device.lat],\n            properties: {\n              title: device.id,\n              id: device.id\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 378\n            },\n            __self: this\n          }));\n        });\n      }\n      createDevices = createDevices;\n      console.log(devices);\n      return devices;\n    };\n\n    _this.renderPopup = function () {\n      return _this.state.popupInfo && React.createElement(Popup, {\n        tipSize: 5,\n        anchor: \"bottom-right\",\n        longitude: _this.state.popupInfo.state.longitude,\n        latitude: _this.state.popupInfo.state.latitude,\n        onClose: function onClose() {\n          return _this.setState({\n            popupInfo: null\n          });\n        },\n        closeOnClick: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 396\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 402\n        },\n        __self: this\n      }, _this.state.popupInfo.state.fullName), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 403\n        },\n        __self: this\n      }, _this.state.popupInfo.incidentNumber, \" \", _this.state.popupInfo.disaster, \" incident(s)\"), React.createElement(\"div\", {\n        class: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 404\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: _this.state.popupInfo.icon.imgUrl,\n        style: {\n          height: \"50px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 405\n        },\n        __self: this\n      })));\n    };\n\n    _this.renderStaffDevices = function () {\n      var devices = [];\n\n      _this.state.staffDevices.map(function (device) {\n        devices.push(React.createElement(Feature, {\n          key: device.id,\n          coordinates: [device.lng, device.lat],\n          properties: {\n            title: device.id,\n            id: device.id\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 416\n          },\n          __self: this\n        }));\n      });\n\n      return devices;\n    };\n\n    _this.renderAssetDevices = function () {\n      var devices = [];\n\n      _this.state.assetDevices.map(function (device) {\n        devices.push(React.createElement(Feature, {\n          key: device.id,\n          coordinates: [device.lng, device.lat],\n          properties: {\n            title: device.id,\n            id: device.id\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 433\n          },\n          __self: this\n        }));\n      });\n\n      return devices;\n    };\n\n    _this.state = {\n      viewport: {\n        latitude: 37.785164,\n        longitude: -100,\n        zoom: 2.8,\n        bearing: 0,\n        pitch: 0,\n        width: 500,\n        height: 500\n      },\n      popupInfo: null,\n      map: '',\n      loading: true,\n      sourceOptions: {},\n      center: [-0.2416815, 51.5285582],\n      staticDevices: \"\",\n      mobileDevices: [],\n      assetDevices: [],\n      staffDevices: [],\n      circleRadius: 30,\n      loadingStep: 1\n    };\n    return _this;\n  }\n\n  _createClass(InfoMap, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.fetch();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      window.removeEventListener('resize', this._resize);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var _this2 = this;\n\n      if (this.props.deviceLogs !== prevProps.deviceLogs) {\n        if (this.state.map == '' && this.state.loading == true) {\n          var beacon = \"b1\";\n\n          if (this.props.info != \"\" && this.props.info != null) {\n            beacon = this.props.info.beacon[0];\n          }\n\n          var map = '';\n          this.props.deviceLogs.map(function (log) {\n            if (log.id == beacon) {\n              map = log.map.id;\n            }\n          });\n          this.props.maps.map(function (displayMap) {\n            if (displayMap.id == map) {\n              map = displayMap;\n              var newObj = JSON.parse(JSON.stringify(displayMap));\n\n              _this2.setState({\n                map: newObj\n              });\n            }\n          });\n          this.initializeMap(map);\n          this.setState({\n            loading: false\n          });\n          this.timer = setInterval(function () {\n            return _this2.getDeviceLogs();\n          }, 1000);\n        }\n\n        this.createBeaconMarkers();\n      }\n    }\n  }, {\n    key: \"getChildContext\",\n    value: function getChildContext() {\n      return {\n        map: this.state.map\n      };\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var viewport = this.state.viewport;\n      var sourceOptions = this.state.sourceOptions;\n      var imageURL = \"mapbox://styles/mapbox/dark-v9\";\n      var center = this.state.center;\n\n      if (this.props.map != \"\") {}\n\n      var _this$props2 = this.props,\n          children = _this$props2.children,\n          onLoad = _this$props2.onLoad,\n          map = _this$props2.map,\n          height = _this$props2.height,\n          width = _this$props2.width;\n      var locationOrigin = window.location.origin;\n      var style = {\n        version: 8,\n        name: 'custom',\n        sources: {},\n        sprite: \"\".concat(locationOrigin, \"/mapbox-styles/maki\"),\n        glyphs: \"\".concat(locationOrigin, \"/mapbox-styles/font/{fontstack}/{range}.pbf\"),\n        layers: []\n      };\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 467\n        },\n        __self: this\n      }, React.createElement(ReactMap, {\n        style: style,\n        center: center,\n        movingMethod: 'jumpTo',\n        ref: this.mapLocation,\n        containerStyle: {\n          height: '70vh',\n          width: '100%'\n        },\n        onStyleLoad: this.onStyleLoad,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 468\n        },\n        __self: this\n      }, React.createElement(Layer, {\n        type: \"symbol\",\n        id: \"staticDevices\",\n        layout: {\n          'icon-image': 'triangle-15',\n          'icon-allow-overlap': true,\n          'icon-ignore-placement': true,\n          'text-allow-overlap': true,\n          'text-ignore-placement': true,\n          'text-field': '{title}',\n          'text-font': ['Open Sans Semibold'],\n          'text-offset': [0, 0.8],\n          'text-anchor': 'top'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 479\n        },\n        __self: this\n      }), React.createElement(Layer, {\n        type: \"circle\",\n        paint: this.getCirclePaint(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 498\n        },\n        __self: this\n      }), React.createElement(Layer, {\n        type: \"symbol\",\n        id: \"patientDevices\",\n        layout: {\n          'icon-image': 'marker-15',\n          'icon-allow-overlap': true,\n          'icon-ignore-placement': true,\n          'text-allow-overlap': true,\n          'text-ignore-placement': true,\n          'text-field': '{title}',\n          'text-font': ['Open Sans Semibold'],\n          'text-offset': [0, 0.8],\n          'text-anchor': 'top'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 503\n        },\n        __self: this\n      },\n      /*this.state.mobileDevices != \"\" ? this.renderDevices('mobile') : null */\n      this.renderDevices('mobile')), React.createElement(Layer, {\n        type: \"symbol\",\n        id: \"staffDevices\",\n        layout: {\n          'icon-image': 'hospital-15',\n          'icon-allow-overlap': true,\n          'icon-ignore-placement': true,\n          'text-allow-overlap': true,\n          'text-ignore-placement': true,\n          'text-field': '{title}',\n          'text-font': ['Open Sans Semibold'],\n          'text-offset': [0, 0.8],\n          'text-anchor': 'top'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 522\n        },\n        __self: this\n      },\n      /*this.state.mobileDevices != \"\" ? this.renderDevices('mobile') : null */\n      this.renderStaffDevices()), React.createElement(Layer, {\n        type: \"symbol\",\n        id: \"assetDevices\",\n        layout: {\n          'icon-image': 'suitcase-15',\n          'icon-allow-overlap': true,\n          'icon-ignore-placement': true,\n          'text-allow-overlap': true,\n          'text-ignore-placement': true,\n          'text-field': '{title}',\n          'text-font': ['Open Sans Semibold'],\n          'text-offset': [0, 0.8],\n          'text-anchor': 'top'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 541\n        },\n        __self: this\n      },\n      /*this.state.mobileDevices != \"\" ? this.renderDevices('mobile') : null */\n      this.renderAssetDevices()), this.state.map != \"\" ? React.createElement(Source, {\n        id: \"image_source\",\n        tileJsonSource: sourceOptions,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 561\n        },\n        __self: this\n      }) : null, React.createElement(Layer, {\n        id: \"image_layer\",\n        before: \"staticDevices\",\n        type: \"raster\",\n        sourceId: \"image_source\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 563\n        },\n        __self: this\n      })), React.createElement(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        style: {\n          marginTop: '1em'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 566\n        },\n        __self: this\n      }, this.state.map != \"\" ? \"Location: \".concat(this.state.map.id) : null, \" \"));\n    }\n  }]);\n\n  return InfoMap;\n}(Component);\n\nvar ConnectedInfoMap = connect(mapStateToProps, mapDispatchToProps)(InfoMap);\nexport default ConnectedInfoMap;","map":{"version":3,"sources":["/Users/jermz/Desktop/eclipse-workspace/medicalWebsite/src/InfoMap.js"],"names":["React","Component","connect","fetchMaps","confirmType","fetchDeviceLocations","MapGL","Marker","Popup","NavigationControl","ReactMapboxGl","Source","Layer","Feature","mapboxgl","withStyles","Typography","axios","e","createElement","restUrlHTTPS","TOKEN","graphqlUrlHTTPS","ReactMap","accessToken","maxZoom","minZoom","navStyle","position","top","left","padding","mapStateToProps","state","maps","devices","deviceLogs","patients","assets","staff","info","mapDispatchToProps","dispatch","type","InfoMap","props","fetch","query","request","then","data","loading","getDeviceLogs","variables","promise","method","url","headers","JSON","stringify","mapgl","refs","map","getChildContext","createBeaconMarkers","initialize","filteredLogs","filter","device","id","mobileDevices","staffDevices","assetDevices","beacon","forEach","patient","newObj","parse","name","push","asset","staffmem","setState","initializeMap","jump","initial","sourceOptions","coordinates","undefined","imageURL","bounds","LngLatBounds","__guard__","x","x1","center","getCenter","staticDevices","location","onStyleLoad","onLoad","getCirclePaint","circleRadius","_resize","viewport","width","height","_updateViewport","value","transform","renderHighlightDevices","beacons","i","highlight","lng","lat","title","length","renderDevices","createDevices","console","log","renderPopup","popupInfo","longitude","latitude","fullName","incidentNumber","disaster","icon","imgUrl","renderStaffDevices","renderAssetDevices","zoom","bearing","pitch","loadingStep","window","removeEventListener","prevProps","prevState","displayMap","timer","setInterval","children","locationOrigin","origin","style","version","sources","sprite","glyphs","layers","mapLocation","marginTop","ConnectedInfoMap"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { fetchMaps, confirmType, fetchDeviceLocations } from \"./actions/index\";\r\nimport MapGL, {Marker, Popup, NavigationControl} from 'react-map-gl';\r\nimport ReactMapboxGl from 'react-mapbox-gl';\r\nimport { Source, Layer, Feature } from \"react-mapbox-gl\";\r\nimport mapboxgl from 'mapbox-gl';\r\n// import StatePin from './StatePin'\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport axios from 'axios';\r\nconst e             = React.createElement;\r\n\r\nconst restUrlHTTPS = `http://137.132.165.139:3000/api`;\r\n\r\nconst TOKEN = 'pk.eyJ1IjoiZnlwZW5nIiwiYSI6ImNqcmFlazM4YjAxejkzeW1wbWg2Zmp2aWsifQ.obOnEjbqcpEWu9HIh6zPlw'; // Set your mapbox token here\r\nconst graphqlUrlHTTPS = 'http://137.132.165.139:3000/graphql';\r\n\r\nconst ReactMap = ReactMapboxGl({\r\n  accessToken: `${TOKEN}`,\r\n  maxZoom:    13,\r\n  minZoom:    8,\r\n})\r\nconst navStyle = {\r\n  position: 'absolute',\r\n  top: 0,\r\n  left: 0,\r\n  padding: '10px'\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n\r\n  return {\r\n    maps: state.maps,\r\n    devices: state.devices,\r\n    deviceLogs: state.deviceLogs,\r\n    patients: state.patients,\r\n    assets: state.assets,\r\n    staff: state.staff,\r\n    info: state.info,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    confirmType: type => dispatch(confirmType(type)),\r\n    fetchMaps: maps => dispatch(fetchMaps(maps)),\r\n    fetchDeviceLocations: deviceLogs => dispatch(fetchDeviceLocations(deviceLogs))\r\n  };\r\n};\r\n\r\nclass InfoMap extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      viewport: {\r\n        latitude: 37.785164,\r\n        longitude: -100,\r\n        zoom: 2.8,\r\n        bearing: 0,\r\n        pitch: 0,\r\n        width: 500,\r\n        height: 500,\r\n      },\r\n      popupInfo: null,\r\n      map: '',\r\n      loading: true,\r\n      sourceOptions: {},\r\n      center: [-0.2416815, 51.5285582 ],\r\n      staticDevices: \"\",\r\n      mobileDevices: [],\r\n      assetDevices: [],\r\n      staffDevices: [],\r\n      circleRadius: 30,\r\n      loadingStep: 1,\r\n\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetch()\r\n\r\n  }\r\n\r\n  fetch = (dispatch) => {\r\n    let query = `\r\n      query {\r\n        maps {\r\n          id\r\n          scale\r\n          coordinates\r\n          imageURL\r\n          navMesh\r\n          navPath\r\n          pois\r\n        }\r\n      }\r\n    `\r\n    this.request({query})\r\n    .then ((data) => {\r\n        let loading = this.state.loading\r\n        if(loading) {\r\n          this.getDeviceLogs()\r\n        }\r\n        this.props.fetchMaps(data.data.data.maps)\r\n      }\r\n    )\r\n  }\r\n\r\n  request = ({query, variables}) => {\r\n    let promise = axios({\r\n      method:   'post',\r\n      url:      `${graphqlUrlHTTPS}`,\r\n      headers:  {'Content-Type': 'application/json'},\r\n      data:     JSON.stringify({query, variables})\r\n    })\r\n    return promise;\r\n  }\r\n\r\n  getDeviceLogs = (dispatch) => {\r\n\r\n    let promise = axios({\r\n      method:   'get',\r\n      url:      `${restUrlHTTPS}/Devices/logs`,\r\n      headers:  {'Content-Type': 'application/json'},\r\n    }).then (data => {\r\n\r\n        this.props.fetchDeviceLocations(data.data)\r\n      }\r\n    )\r\n    return promise;\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('resize', this._resize);\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n\r\n    if(this.props.deviceLogs !== prevProps.deviceLogs) {\r\n      if(this.state.map == '' && this.state.loading == true) {\r\n        let beacon = \"b1\"\r\n\r\n        if(this.props.info != \"\" && this.props.info != null) {\r\n          beacon = this.props.info.beacon[0]\r\n        }\r\n        let map = ''\r\n        this.props.deviceLogs.map(log => {\r\n          if(log.id == beacon) {\r\n            map = log.map.id\r\n          }\r\n        })\r\n\r\n        this.props.maps.map(displayMap => {\r\n          if(displayMap.id == map) {\r\n            map = displayMap\r\n\r\n            let newObj = JSON.parse(JSON.stringify(displayMap))\r\n            this.setState({map: newObj})\r\n          }\r\n        })\r\n\r\n        this.initializeMap(map)\r\n        this.setState({loading : false})\r\n        this.timer = setInterval(()=> this.getDeviceLogs(), 1000);\r\n      }\r\n      this.createBeaconMarkers()\r\n    }\r\n  }\r\n\r\n  getChildContext() {\r\n    return {map: this.state.map};\r\n  }\r\n  mapgl = () => {\r\n    return this.refs.map.getChildContext().map;\r\n  }\r\n\r\n  getChildContext = () => {\r\n    return { map: this.map };\r\n  };\r\n\r\n  createBeaconMarkers = (initialize) => {\r\n\r\n    let map = this.state.map\r\n    if(initialize != null) {\r\n      map = initialize;\r\n    }\r\n    if(map != \"\") {\r\n      let filteredLogs = this.props.deviceLogs.filter(device => device.map.id == map.id);\r\n      let mobileDevices = []\r\n      let staffDevices = []\r\n      let assetDevices = []\r\n\r\n      filteredLogs = filteredLogs.filter(device => device.id == this.props.info.beacon[0]);\r\n      filteredLogs.map(device => {\r\n        if(this.props.info.type == \"Patient\") {\r\n          this.props.patients.forEach(patient => {\r\n            if(patient.beacon != null) {\r\n            if(device.id == patient.beacon[0]) {\r\n              let newObj = JSON.parse(JSON.stringify(device))\r\n              newObj.id = patient.name\r\n              mobileDevices.push(newObj)\r\n            }\r\n          }\r\n          })\r\n        } else if(this.props.info.type == \"Asset\") {\r\n          this.props.assets.forEach(asset => {\r\n            if(asset.beacon != null) {\r\n            if(device.id == asset.beacon[0]) {\r\n              let newObj = JSON.parse(JSON.stringify(device))\r\n              newObj.id = asset.name\r\n              assetDevices.push(newObj)\r\n            }\r\n          }\r\n          })\r\n        } else {\r\n          this.props.staff.forEach(staffmem => {\r\n            if(staffmem.beacon != null) {\r\n            if(device.id == staffmem.beacon[0]) {\r\n              let newObj = JSON.parse(JSON.stringify(device))\r\n              newObj.id = staffmem.name\r\n              staffDevices.push(newObj)\r\n            }\r\n          }\r\n          })\r\n        }\r\n      })\r\n\r\n      this.setState({mobileDevices})\r\n      this.setState({staffDevices})\r\n      this.setState({assetDevices})\r\n\r\n    }\r\n\r\n  }\r\n  initializeMap = (map, jump) => {\r\n\r\n    this.setState({initial: map})\r\n    this.setState({map})\r\n\r\n\r\n    let sourceOptions = {\r\n      coordinates: (map != null ? map.coordinates : undefined),\r\n      type:         'image',\r\n      url:          (map != null ? map.imageURL : undefined)\r\n    }\r\n    this.setState({sourceOptions})\r\n\r\n    if(map != \"\" && this.props.info != \"\" && this.props.info != null) {\r\n      const bounds = new mapboxgl.LngLatBounds(this.__guard__(map != null ? map.coordinates : undefined, x => x[3]), this.__guard__(map != null ? map.coordinates : undefined, x1 => x1[1]));\r\n      let center = bounds.getCenter();\r\n      this.setState({center});\r\n      let filteredLogs = this.props.deviceLogs.filter(device => device.map.id == map.id);\r\n      filteredLogs = filteredLogs.filter(device => device.id == this.props.info.beacon[0]);\r\n      let mobileDevices = []\r\n      let assetDevices = []\r\n      let staffDevices = []\r\n      filteredLogs.map(device => {\r\n        if(this.props.info.type == \"Patient\") {\r\n\r\n          this.props.patients.forEach(patient => {\r\n            if(patient.beacon != null) {\r\n            if(device.id == patient.beacon[0]) {\r\n              let newObj = JSON.parse(JSON.stringify(device))\r\n              newObj.id = patient.name\r\n              mobileDevices.push(newObj)\r\n            }\r\n          }\r\n          })\r\n        } else if(this.props.info.type == \"Asset\") {\r\n          this.props.assets.forEach(asset => {\r\n            if(asset.beacon != null) {\r\n            if(device.id == asset.beacon[0]) {\r\n              let newObj = JSON.parse(JSON.stringify(device))\r\n              newObj.id = asset.name\r\n              assetDevices.push(newObj)\r\n            }\r\n          }\r\n          })\r\n        } else {\r\n          this.props.staff.forEach(staffmem => {\r\n            if(staffmem.beacon != null) {\r\n            if(device.id == staffmem.beacon[0]) {\r\n              let newObj = JSON.parse(JSON.stringify(device))\r\n              newObj.id = staffmem.name\r\n              staffDevices.push(newObj)\r\n            }\r\n          }\r\n          })\r\n\r\n        }\r\n      })\r\n\r\n      this.setState({mobileDevices})\r\n      this.setState({assetDevices})\r\n      this.setState({staffDevices})\r\n      let staticDevices = this.props.devices.filter(device => device.type == 'static');\r\n      staticDevices = staticDevices.filter(device => device.location != null)\r\n      staticDevices = staticDevices.filter(device => device.location.map.id == map.id)\r\n      this.setState({staticDevices})\r\n      this.setState({loading: false})\r\n      this.createBeaconMarkers(map)\r\n    }\r\n\r\n  }\r\n\r\n  onStyleLoad = (mapgl) => {\r\n    const { onLoad, map } = this.props;\r\n    if (map != null) { this.initializeMap(map); }\r\n  }\r\n\r\n  getCirclePaint = () => ({\r\n    'circle-radius': this.state.circleRadius,\r\n    'circle-color': '#FFFF00',\r\n    'circle-opacity': 0.4\r\n  });\r\n\r\n  _resize = () => {\r\n    this.setState({\r\n      viewport: {\r\n        ...this.state.viewport,\r\n        width: '100%',\r\n        height: '70vh'\r\n      }\r\n    });\r\n  };\r\n\r\n  _updateViewport = (viewport) => {\r\n    this.setState({viewport});\r\n  }\r\n\r\n  __guard__ = (value, transform) => {\r\n    return (typeof value !== 'undefined' && value !== null) ? transform(value) : undefined;\r\n  }\r\n\r\n  renderHighlightDevices = () => {\r\n    let patients = this.props.patients;\r\n    let beacons = this.state.mobileDevices;\r\n    let devices = []\r\n    for(let i = 0 ; i < patients.length; i++) {\r\n\r\n      beacons.map((device) => {\r\n        if(patients[i].beacon == device.id && patients[i].highlight == true) {\r\n        devices.push(\r\n        <Feature\r\n          key={device.id}\r\n          coordinates={[device.lng, device.lat]}\r\n          properties={{\r\n            title:  device.id,\r\n            id:     device.id\r\n          }}\r\n        />)\r\n      }})\r\n\r\n    }\r\n\r\n    return devices;\r\n  }\r\n  renderDevices = (type) => {\r\n    let devices = []\r\n    let createDevices = []\r\n    if(type == 'static')\r\n      createDevices = this.state.staticDevices.map ((device) => {\r\n        devices.push(\r\n        <Feature\r\n          key={device.id}\r\n          coordinates={[device.location.lng, device.location.lat]}\r\n          properties={{\r\n            title:  device.id,\r\n            id:     device.id\r\n          }}\r\n        />)\r\n      })\r\n    else {\r\n      createDevices = this.state.mobileDevices.map((device) => {\r\n        devices.push(\r\n        <Feature\r\n          key={device.id}\r\n          coordinates={[device.lng, device.lat]}\r\n          properties={{\r\n            title:  device.id,\r\n            id:     device.id\r\n          }}\r\n        />)\r\n      })\r\n    }\r\n\r\n    createDevices = createDevices\r\n\r\n    console.log(devices)\r\n    return devices;\r\n  }\r\n  renderPopup = () => {\r\n    return this.state.popupInfo && (\r\n      <Popup tipSize={5}\r\n        anchor=\"bottom-right\"\r\n        longitude={this.state.popupInfo.state.longitude}\r\n        latitude={this.state.popupInfo.state.latitude}\r\n        onClose={() => this.setState({popupInfo: null})}\r\n        closeOnClick={true}>\r\n        <h4>{this.state.popupInfo.state.fullName}</h4>\r\n        <p>{this.state.popupInfo.incidentNumber} {this.state.popupInfo.disaster} incident(s)</p>\r\n        <div class=\"text-center\">\r\n        <img src={this.state.popupInfo.icon.imgUrl} style={{height: \"50px\"}} />\r\n        </div>\r\n      </Popup>\r\n\r\n      )\r\n  }\r\n\r\n  renderStaffDevices = () => {\r\n    let devices = []\r\n    this.state.staffDevices.map((device) => {\r\n      devices.push(\r\n      <Feature\r\n        key={device.id}\r\n        coordinates={[device.lng, device.lat]}\r\n        properties={{\r\n          title:  device.id,\r\n          id:     device.id\r\n        }}\r\n      />)\r\n    })\r\n\r\n    return devices\r\n  }\r\n\r\n  renderAssetDevices = () => {\r\n    let devices = []\r\n    this.state.assetDevices.map((device) => {\r\n      devices.push(\r\n      <Feature\r\n        key={device.id}\r\n        coordinates={[device.lng, device.lat]}\r\n        properties={{\r\n          title:  device.id,\r\n          id:     device.id\r\n        }}\r\n      />)\r\n    })\r\n\r\n    return devices\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n    const {viewport} = this.state;\r\n    let sourceOptions = this.state.sourceOptions\r\n    let imageURL = \"mapbox://styles/mapbox/dark-v9\";\r\n    let center = this.state.center\r\n    if(this.props.map != \"\") {\r\n    }\r\n    const { children, onLoad, map, height, width } = this.props;\r\n    let locationOrigin = window.location.origin\r\n    let style = {\r\n        version:  8,\r\n        name:     'custom',\r\n        sources:  {},\r\n        sprite:   `${locationOrigin}/mapbox-styles/maki`,\r\n        glyphs:   `${locationOrigin}/mapbox-styles/font/{fontstack}/{range}.pbf`,\r\n        layers:   []\r\n    }\r\n\r\n    return (\r\n      <div>\r\n      <ReactMap\r\n        style={style}\r\n        center={center}\r\n        movingMethod={'jumpTo'}\r\n        ref={this.mapLocation}\r\n        containerStyle={{\r\n          height: '70vh',\r\n          width: '100%'}}\r\n        onStyleLoad={this.onStyleLoad}\r\n      >\r\n\r\n      <Layer type=\"symbol\"\r\n      id=\"staticDevices\"\r\n      layout={{\r\n        'icon-image':             'triangle-15',\r\n        'icon-allow-overlap':     true,\r\n        'icon-ignore-placement':  true,\r\n        'text-allow-overlap':     true,\r\n        'text-ignore-placement':  true,\r\n        'text-field':             '{title}',\r\n        'text-font':              ['Open Sans Semibold'],\r\n        'text-offset':            [0, 0.8],\r\n        'text-anchor':            'top',\r\n      }}>\r\n\r\n      {\r\n        //this.state.staticDevices != \"\" ? this.renderDevices('static') : null\r\n      }\r\n      </Layer>\r\n\r\n      <Layer type=\"circle\"  paint={this.getCirclePaint()}>\r\n      {\r\n      //  this.renderHighlightDevices()\r\n      }\r\n      </Layer>\r\n      <Layer type=\"symbol\"\r\n      id=\"patientDevices\"\r\n      layout={{\r\n        'icon-image':             'marker-15',\r\n        'icon-allow-overlap':     true,\r\n        'icon-ignore-placement':  true,\r\n        'text-allow-overlap':     true,\r\n        'text-ignore-placement':  true,\r\n        'text-field':             '{title}',\r\n        'text-font':              ['Open Sans Semibold'],\r\n        'text-offset':            [0, 0.8],\r\n        'text-anchor':            'top',\r\n      }}>\r\n\r\n      {\r\n        /*this.state.mobileDevices != \"\" ? this.renderDevices('mobile') : null */\r\n        this.renderDevices('mobile')\r\n      }\r\n      </Layer>\r\n      <Layer type=\"symbol\"\r\n      id=\"staffDevices\"\r\n      layout={{\r\n        'icon-image':             'hospital-15',\r\n        'icon-allow-overlap':     true,\r\n        'icon-ignore-placement':  true,\r\n        'text-allow-overlap':     true,\r\n        'text-ignore-placement':  true,\r\n        'text-field':             '{title}',\r\n        'text-font':              ['Open Sans Semibold'],\r\n        'text-offset':            [0, 0.8],\r\n        'text-anchor':            'top',\r\n      }}>\r\n\r\n      {\r\n        /*this.state.mobileDevices != \"\" ? this.renderDevices('mobile') : null */\r\n        this.renderStaffDevices()\r\n      }\r\n      </Layer>\r\n      <Layer type=\"symbol\"\r\n      id=\"assetDevices\"\r\n      layout={{\r\n        'icon-image':             'suitcase-15',\r\n        'icon-allow-overlap':     true,\r\n        'icon-ignore-placement':  true,\r\n        'text-allow-overlap':     true,\r\n        'text-ignore-placement':  true,\r\n        'text-field':             '{title}',\r\n        'text-font':              ['Open Sans Semibold'],\r\n        'text-offset':            [0, 0.8],\r\n        'text-anchor':            'top',\r\n      }}>\r\n\r\n      {\r\n        /*this.state.mobileDevices != \"\" ? this.renderDevices('mobile') : null */\r\n        this.renderAssetDevices()\r\n      }\r\n      </Layer>\r\n      {this.state.map != \"\" ?\r\n      <Source id=\"image_source\" tileJsonSource={sourceOptions} />\r\n      : null}\r\n      <Layer id=\"image_layer\" before=\"staticDevices\" type=\"raster\" sourceId=\"image_source\"/>\r\n    </ReactMap>\r\n\r\n    <Typography variant=\"h6\" gutterBottom style={{marginTop: '1em'}}>{this.state.map != \"\" ? `Location: ${this.state.map.id}` : null} </Typography>\r\n    </div>\r\n  )\r\n  }\r\n\r\n}\r\nconst ConnectedInfoMap = connect(mapStateToProps, mapDispatchToProps)(InfoMap);\r\n\r\nexport default ConnectedInfoMap;\r\n"]},"metadata":{},"sourceType":"module"}