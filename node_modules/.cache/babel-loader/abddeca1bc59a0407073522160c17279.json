{"ast":null,"code":"import _classCallCheck from \"/Users/jermz/Desktop/eclipse-workspace/medicalWebsite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jermz/Desktop/eclipse-workspace/medicalWebsite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jermz/Desktop/eclipse-workspace/medicalWebsite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jermz/Desktop/eclipse-workspace/medicalWebsite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jermz/Desktop/eclipse-workspace/medicalWebsite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"/Users/jermz/Desktop/eclipse-workspace/medicalWebsite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/jermz/Desktop/eclipse-workspace/medicalWebsite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _objectWithoutProperties from \"/Users/jermz/Desktop/eclipse-workspace/medicalWebsite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/jermz/Desktop/eclipse-workspace/medicalWebsite/src/AddPatient.js\";\nimport React, { Component } from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport { withStyles } from '@material-ui/core/styles';\nimport { connect } from \"react-redux\";\nimport { confirmType as _confirmType, addPatient as _addPatient, fetchMaps as _fetchMaps, editPatient as _editPatient, updatePatient as _updatePatient, fetchPatientCount as _fetchPatientCount, updatePatientCount as _updatePatientCount, removePatient as _removePatient, signOutUser as _signOutUser, assignBeacon as _assignBeacon, assignDevices as _assignDevices } from \"./actions/index\";\nimport Card from '@material-ui/core/Card';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport TemporaryDrawer from './TemporaryDrawer';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport AddIcon from '@material-ui/icons/Add';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport classNames from 'classnames';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport BeaconTable from './BeaconTable';\nimport DevicesTable from './DevicesTable';\nimport Scanner from './Scanner';\nimport Result from './Result';\nimport Select from 'react-select';\nimport axios from 'axios';\nimport NoSsr from '@material-ui/core/NoSsr';\nimport Paper from '@material-ui/core/Paper';\nimport Chip from '@material-ui/core/Chip';\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport { fakeDataRef } from \"./firebase/index\";\nimport LinearProgress from '@material-ui/core/LinearProgress';\nvar graphqlUrlHTTPS = 'http://137.132.165.139:3000/graphql';\n\nvar styles = function styles(theme) {\n  return {\n    container: {\n      display: 'flex',\n      flexWrap: 'wrap'\n    },\n    root: {\n      flexGrow: 1\n    },\n    grow: {\n      flexGrow: 1\n    },\n    card: {\n      minWidth: 275,\n      padding: '2rem'\n    },\n    textField: {// marginLeft: theme.spacing.unit,\n      // marginRight: theme.spacing.unit,\n    },\n    borderBox: {\n      border: '1px solid',\n      padding: '2rem',\n      borderRadius: '16px'\n    },\n    menu: {\n      width: 200\n    },\n    menuButton: {\n      marginLeft: -12,\n      marginRight: 20,\n      opacity: 0.4,\n      color: 'black'\n    },\n    align: {\n      padding: \"\".concat(theme.spacing.unit * 2, \"px \").concat(theme.spacing.unit * 3, \"px \").concat(theme.spacing.unit * 3, \"px\")\n    },\n    input: {\n      display: 'flex',\n      padding: 0\n    },\n    valueContainer: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      flex: 1,\n      alignItems: 'center',\n      overflow: 'hidden',\n      padding: '18.5px 14px'\n    },\n    noOptionsMessage: {\n      padding: \"\".concat(theme.spacing.unit, \"px \").concat(theme.spacing.unit * 2, \"px\")\n    },\n    singleValue: {\n      fontSize: 16\n    },\n    placeholder: {\n      position: 'absolute',\n      left: 2,\n      fontSize: 16,\n      padding: '18.5px 14px'\n    },\n    paper: {\n      position: 'absolute',\n      zIndex: 1,\n      marginTop: theme.spacing.unit,\n      left: 0,\n      right: 0\n    },\n    error: {\n      borderColor: 'red !important'\n    }\n  };\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    beacon: state.beacon,\n    maps: state.maps,\n    edit: state.edit,\n    devices: state.assignDevices,\n    isAuthenticating: state.isAuthenticating,\n    authenticated: state.authenticated,\n    patientCounter: state.patientCounter\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    confirmType: function confirmType(type) {\n      return dispatch(_confirmType(type));\n    },\n    addPatient: function addPatient(patient) {\n      return dispatch(_addPatient(patient));\n    },\n    assignDevices: function assignDevices(devices) {\n      return dispatch(_assignDevices(devices));\n    },\n    editPatient: function editPatient(patient) {\n      return dispatch(_editPatient(patient));\n    },\n    removePatient: function removePatient(patient) {\n      return dispatch(_removePatient(patient));\n    },\n    fetchMaps: function fetchMaps(maps) {\n      return dispatch(_fetchMaps(maps));\n    },\n    assignBeacon: function assignBeacon(beacon) {\n      return dispatch(_assignBeacon(beacon));\n    },\n    signOutUser: function signOutUser(credentials) {\n      return dispatch(_signOutUser(credentials));\n    },\n    fetchPatientCount: function fetchPatientCount(count) {\n      return dispatch(_fetchPatientCount(count));\n    },\n    updatePatientCount: function updatePatientCount(count) {\n      return dispatch(_updatePatientCount(count));\n    },\n    updatePatient: function updatePatient(patient) {\n      return dispatch(_updatePatient(patient));\n    }\n  };\n};\n\nfunction NoOptionsMessage(props) {\n  return React.createElement(Typography, Object.assign({\n    color: \"textSecondary\",\n    className: props.selectProps.classes.noOptionsMessage\n  }, props.innerProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }), props.children);\n}\n\nfunction inputComponent(_ref) {\n  var inputRef = _ref.inputRef,\n      props = _objectWithoutProperties(_ref, [\"inputRef\"]);\n\n  return React.createElement(\"div\", Object.assign({\n    ref: inputRef\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }));\n}\n\nfunction Control(props, state) {\n  return React.createElement(TextField, Object.assign({\n    fullWidth: true,\n    variant: \"outlined\",\n    style: {\n      borderColor: 'red !important'\n    },\n    InputProps: {\n      inputComponent: inputComponent,\n      inputProps: _objectSpread({\n        className: props.selectProps.classes.input,\n        inputRef: props.innerRef,\n        children: props.children\n      }, props.innerProps)\n    },\n    required: true,\n    error: props.selectProps.error,\n    helperText: props.selectProps.error ? \"This field is required\" : null\n  }, props.selectProps.textFieldProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }));\n}\n\nfunction Option(props) {\n  return React.createElement(MenuItem, Object.assign({\n    buttonRef: props.innerRef,\n    selected: props.isFocused,\n    component: \"div\",\n    style: {\n      fontWeight: props.isSelected ? 500 : 400\n    }\n  }, props.innerProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185\n    },\n    __self: this\n  }), props.children);\n}\n\nfunction Placeholder(props) {\n  return React.createElement(Typography, Object.assign({\n    color: \"textSecondary\",\n    className: props.selectProps.classes.placeholder\n  }, props.innerProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201\n    },\n    __self: this\n  }), props.children);\n}\n\nfunction SingleValue(props) {\n  return React.createElement(Typography, Object.assign({\n    className: props.selectProps.classes.singleValue\n  }, props.innerProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213\n    },\n    __self: this\n  }), props.children);\n}\n\nfunction ValueContainer(props) {\n  return React.createElement(\"div\", {\n    className: props.selectProps.classes.valueContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220\n    },\n    __self: this\n  }, props.children);\n}\n\nfunction MultiValue(props) {\n  return React.createElement(Chip, {\n    tabIndex: -1,\n    label: props.children,\n    className: classNames(props.selectProps.classes.chip, _defineProperty({}, props.selectProps.classes.chipFocused, props.isFocused)),\n    onDelete: props.removeProps.onClick,\n    deleteIcon: React.createElement(CancelIcon, Object.assign({}, props.removeProps, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225\n    },\n    __self: this\n  });\n}\n\nfunction SubMenu(props) {\n  return React.createElement(Paper, Object.assign({\n    square: true,\n    className: props.selectProps.classes.paper\n  }, props.innerProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239\n    },\n    __self: this\n  }), props.children);\n}\n\nvar components = {\n  Control: Control,\n  SubMenu: SubMenu,\n  MultiValue: MultiValue,\n  NoOptionsMessage: NoOptionsMessage,\n  Option: Option,\n  Placeholder: Placeholder,\n  SingleValue: SingleValue,\n  ValueContainer: ValueContainer\n};\n\nvar AddPatient =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AddPatient, _Component);\n\n  function AddPatient(props) {\n    var _this;\n\n    _classCallCheck(this, AddPatient);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AddPatient).call(this, props));\n\n    _this.flushData = function () {\n      _this.setState({\n        name: \"\",\n        age: \"\",\n        race: \"\",\n        gender: \"\",\n        ward: \"\",\n        edit: false\n      });\n\n      var chosen = \"\";\n\n      _this.props.assignBeacon(chosen);\n    };\n\n    _this.createOptions = function (maps) {\n      var options = maps.map(function (map) {\n        return {\n          value: map.id,\n          label: map.id\n        };\n      });\n\n      _this.setState({\n        options: options\n      });\n    };\n\n    _this.fetch = function (dispatch) {\n      var query = \"\\n      query {\\n        maps {\\n          id\\n          scale\\n          coordinates\\n          imageURL\\n          navMesh\\n          navPath\\n          pois\\n        }\\n      }\\n    \";\n\n      _this.request({\n        query: query\n      }).then(function (data) {\n        _this.props.fetchMaps(data.data.data.maps);\n\n        _this.createOptions(data.data.data.maps);\n      });\n    };\n\n    _this.crossReferenceData = function (result) {\n      fakeDataRef.on(\"value\", function (snapshot) {\n        var fullShot = snapshot.val();\n\n        for (var _i = 0, _Object$keys = Object.keys(fullShot); _i < _Object$keys.length; _i++) {\n          var key = _Object$keys[_i];\n\n          if (key == result.codeResult.code) {\n            var name = fullShot[key].name;\n            var race = fullShot[key].race;\n            var age = fullShot[key].age;\n            var gender = fullShot[key].gender;\n\n            _this.setState({\n              name: name,\n              gender: gender,\n              race: race,\n              age: age\n            });\n\n            _this.forceUpdate();\n          }\n        }\n      });\n    };\n\n    _this.request = function (_ref2) {\n      var query = _ref2.query,\n          variables = _ref2.variables;\n      var promise = axios({\n        method: 'post',\n        url: \"\".concat(graphqlUrlHTTPS),\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        data: JSON.stringify({\n          query: query,\n          variables: variables\n        })\n      });\n      return promise;\n    };\n\n    _this.toggleDrawer = function () {\n      _this.setState({\n        drawer: true\n      });\n    };\n\n    _this.toggleCloseDrawer = function () {\n      _this.setState({\n        drawer: false\n      });\n    };\n\n    _this.handleMenu = function (event) {\n      _this.setState({\n        drawer: false\n      });\n\n      _this.setState({\n        anchorEl: event.currentTarget\n      });\n    };\n\n    _this.handleClose = function () {\n      _this.setState({\n        drawer: false\n      });\n\n      _this.setState({\n        anchorEl: null\n      });\n    };\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n\n      _this.handleClose();\n\n      var errorCheck = false;\n      var type = _this.state.type;\n\n      if (_this.state.name == \"\") {\n        _this.setState({\n          nameError: true\n        });\n\n        errorCheck = true;\n      }\n\n      if (_this.state.ward.value == null) {\n        _this.setState({\n          wardError: true\n        });\n\n        errorCheck = true;\n      }\n\n      var devices = _this.props.devices;\n\n      if (devices != null) {\n        if (devices[0] != \"None\" && devices.length > 0) {\n          var imuCount = 0;\n          var ecgCount = 0;\n          var hrCount = 0;\n          devices.map(function (device) {\n            if (device.id.charAt(0) == 'e') {\n              ecgCount += 1;\n            }\n\n            if (device.id.charAt(0) == 'h') {\n              hrCount += 1;\n            }\n\n            if (device.id.charAt(0) == 'i') {\n              imuCount += 1;\n            }\n          });\n\n          if (imuCount > 1 | ecgCount > 1 | hrCount > 1) {\n            errorCheck = true;\n          }\n        }\n      }\n\n      if (errorCheck) return;\n\n      if (devices == null) {\n        devices = [\"None\"];\n      }\n\n      var patient = {\n        name: _this.state.name,\n        age: _this.state.age,\n        race: _this.state.race,\n        gender: _this.state.gender,\n        ward: _this.state.ward.value,\n        beacon: _this.props.beacon,\n        devices: devices,\n        highlight: false\n      };\n      var confirm = {\n        name: _this.state.name,\n        age: _this.state.age,\n        race: _this.state.race,\n        gender: _this.state.gender,\n        ward: _this.state.ward.value,\n        beacon: _this.props.beacon,\n        devices: devices,\n        type: type\n      };\n\n      if (_this.state.edit) {\n        patient.id = _this.props.edit.id;\n\n        _this.props.updatePatient(patient);\n\n        _this.setState({\n          editSuccess: true\n        });\n      } else {\n        _this.props.updatePatientCount(_this.props.patientCounter.count);\n\n        _this.props.addPatient(patient);\n      }\n\n      _this.props.confirmType({\n        confirm: confirm\n      });\n\n      var chosenBeacon = \"None\";\n      var chosen = [\"None\"];\n\n      _this.props.assignBeacon(chosenBeacon);\n\n      _this.props.assignDevices(chosen);\n\n      _this.props.history.push('/addConfirmation');\n    };\n\n    _this.handleLoading = function () {\n      _this.setState(function (state) {\n        return {\n          loading: !state.loading\n        };\n      });\n    };\n\n    _this.removePatient = function () {\n      _this.props.removePatient(_this.props.edit);\n\n      _this.props.history.push('/locationTracking');\n    };\n\n    _this.handleLogOut = function () {\n      _this.handleClose();\n\n      _this.props.signOutUser();\n    };\n\n    _this.handleChange = function (prop) {\n      return function (event) {\n        if (prop == \"ward\") _this.setState(_defineProperty({}, prop, event));else {\n          _this.setState(_defineProperty({}, prop, event.target.value));\n        }\n      };\n    };\n\n    _this.cancel = function () {\n      _this.props.editPatient('');\n\n      if (_this.state.edit) {\n        _this.props.history.push('/locationTracking');\n      } else _this.props.history.push('/home');\n    };\n\n    _this._scan = function () {\n      _this.setState({\n        scanning: !_this.state.scanning\n      });\n    };\n\n    _this._onDetected = function (result) {\n      var results = _this.state.results;\n\n      if (results.indexOf(result) < 0) {\n        _this.setState({\n          results: [result]\n        });\n\n        _this.crossReferenceData(result);\n\n        _this._scan();\n      }\n    };\n\n    _this.state = {\n      anchorEl: null,\n      auth: true,\n      name: \"\",\n      age: \"\",\n      race: \"\",\n      gender: \"\",\n      ward: \"\",\n      type: \"Patient\",\n      beacon: _this.props.beacon,\n      scanning: false,\n      results: [],\n      options: [],\n      edit: false,\n      editSuccess: false,\n      nameError: false\n    };\n    return _this;\n  }\n\n  _createClass(AddPatient, [{\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.state.editSuccess == false) {\n        this.props.editPatient('');\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.fetch();\n      this.props.fetchPatientCount();\n\n      if (this.props.edit != \"\" && this.props.edit != null) {\n        var edit = this.props.edit;\n        this.setState({\n          name: edit.name,\n          age: edit.age,\n          race: edit.race,\n          gender: edit.gender,\n          ward: {\n            value: edit.ward,\n            label: edit.ward\n          },\n          edit: true\n        });\n      } else {\n        this.flushData();\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      if (this.state.edit == true && this.props.edit == \"\") {\n        this.flushData();\n      }\n\n      if (this.props.isAuthenticating == false && this.props.authenticated == false) {\n        this.props.history.push('/');\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          classes = _this$props.classes,\n          theme = _this$props.theme;\n      var _this$state = this.state,\n          anchorEl = _this$state.anchorEl,\n          auth = _this$state.auth;\n      var open = Boolean(anchorEl);\n      var races = ['Chinese', 'Malay', 'Indian', 'Others'];\n      var selectStyles = {\n        input: function input(base) {\n          return _objectSpread({}, base, {\n            color: theme.palette.text.primary,\n            cursor: 'pointer',\n            '& input': {\n              font: 'inherit'\n            }\n          });\n        }\n      };\n\n      if (this.props.isAuthenticating) {\n        return React.createElement(LinearProgress, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 554\n          },\n          __self: this\n        });\n      } else return React.createElement(\"div\", {\n        className: classes.root,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 557\n        },\n        __self: this\n      }, React.createElement(AppBar, {\n        position: \"static\",\n        style: {\n          boxShadow: \"none\",\n          backgroundColor: \"white\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 558\n        },\n        __self: this\n      }, React.createElement(Toolbar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 559\n        },\n        __self: this\n      }, React.createElement(IconButton, {\n        className: classes.menuButton,\n        color: \"inherit\",\n        \"aria-label\": \"Menu\",\n        onClick: this.toggleDrawer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 560\n        },\n        __self: this\n      }, React.createElement(MenuIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 561\n        },\n        __self: this\n      })), React.createElement(Typography, {\n        variant: \"title\",\n        className: classes.grow,\n        style: {\n          color: \"black\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 563\n        },\n        __self: this\n      }, this.state.edit ? 'Edit' : 'Add', \" Patient\"), auth && React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 567\n        },\n        __self: this\n      }, React.createElement(IconButton, {\n        \"aria-owns\": open ? 'menu-appbar' : null,\n        \"aria-haspopup\": \"true\",\n        onClick: this.handleMenu,\n        color: \"inherit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 568\n        },\n        __self: this\n      }, React.createElement(AccountCircle, {\n        style: {\n          color: \"black\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 574\n        },\n        __self: this\n      })), React.createElement(Menu, {\n        id: \"menu-appbar\",\n        anchorEl: anchorEl,\n        anchorOrigin: {\n          vertical: 'top',\n          horizontal: 'right'\n        },\n        transformOrigin: {\n          vertical: 'top',\n          horizontal: 'right'\n        },\n        open: open,\n        onClose: this.handleClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 576\n        },\n        __self: this\n      }, React.createElement(MenuItem, {\n        onClick: this.handleLogOut,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 590\n        },\n        __self: this\n      }, \"Logout\"))))), React.createElement(ClickAwayListener, {\n        onClickAway: this.toggleCloseDrawer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 596\n        },\n        __self: this\n      }, React.createElement(TemporaryDrawer, {\n        toggle: this.state.drawer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 597\n        },\n        __self: this\n      })), React.createElement(\"form\", {\n        className: classes.align,\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 599\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        direction: \"column\",\n        spacing: 0,\n        alignItems: \"center\",\n        style: {\n          minHeight: '75vh'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 600\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 605\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes.layout,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 606\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 607\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 608\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"h4\",\n        gutterBottom: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 609\n        },\n        __self: this\n      }, \"Patient\")), React.createElement(Grid, {\n        item: true,\n        xs: 6,\n        style: {\n          margin: 'auto'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 611\n        },\n        __self: this\n      }, this.state.edit ? React.createElement(Button, {\n        variant: \"outlined\",\n        onClick: this.removePatient,\n        style: {\n          float: 'right'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 612\n        },\n        __self: this\n      }, \" Delete \") : null)), React.createElement(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 615\n        },\n        __self: this\n      }, \"Barcode Scan\"), React.createElement(Button, {\n        variant: \"outlined\",\n        onClick: this._scan,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 616\n        },\n        __self: this\n      }, this.state.scanning ? 'Stop' : 'Start'), this.state.results.map(function (result) {\n        return React.createElement(Result, {\n          key: result.codeResult.code,\n          result: result,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 617\n          },\n          __self: this\n        });\n      }), this.state.scanning ? React.createElement(Scanner, {\n        onDetected: this._onDetected,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 618\n        },\n        __self: this\n      }) : null, React.createElement(FormControl, {\n        margin: \"normal\",\n        required: true,\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 619\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        label: \"Name\",\n        placeholder: \"Name\",\n        autoComplete: \"name\",\n        variant: \"outlined\",\n        autoFocus: this.state.results[0] != null ? true : false,\n        value: this.state.name,\n        fullWidth: true,\n        className: classes.textField,\n        onChange: function onChange(e) {\n          return _this2.setState({\n            name: e.target.value\n          });\n        },\n        required: true,\n        error: this.state.nameError,\n        helperText: this.state.nameError ? \"This field is required\" : null,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 620\n        },\n        __self: this\n      }))), React.createElement(Grid, {\n        container: true,\n        direction: \"row\",\n        spacing: 24,\n        alignItems: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 636\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 641\n        },\n        __self: this\n      }, React.createElement(FormControl, {\n        margin: \"normal\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 642\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        id: \"outlined-adornment-age\",\n        className: classNames(classes.margin, classes.textField),\n        variant: \"outlined\",\n        label: \"Age\",\n        value: this.state.age,\n        onChange: this.handleChange('age'),\n        InputProps: {\n          endAdornment: React.createElement(InputAdornment, {\n            position: \"end\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 651\n            },\n            __self: this\n          }, \"Years Old\")\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 643\n        },\n        __self: this\n      }))), React.createElement(Grid, {\n        item: true,\n        xs: 6,\n        style: {\n          textAlign: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 656\n        },\n        __self: this\n      }, React.createElement(FormControl, {\n        component: \"fieldset\",\n        margin: \"normal\",\n        className: classes.formControl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 657\n        },\n        __self: this\n      }, React.createElement(FormLabel, {\n        component: \"legend\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 658\n        },\n        __self: this\n      }, \"Gender\"), React.createElement(RadioGroup, {\n        \"aria-label\": \"Gender\",\n        name: \"gender1\",\n        row: true,\n        className: classNames(classes.margin, classes.textField, classes.group),\n        value: this.state.gender,\n        onChange: this.handleChange('gender'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 659\n        },\n        __self: this\n      }, React.createElement(FormControlLabel, {\n        value: \"male\",\n        control: React.createElement(Radio, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 667\n          },\n          __self: this\n        }),\n        label: \"Male\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 667\n        },\n        __self: this\n      }), React.createElement(FormControlLabel, {\n        value: \"female\",\n        control: React.createElement(Radio, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 668\n          },\n          __self: this\n        }),\n        label: \"Female\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 668\n        },\n        __self: this\n      }))))), React.createElement(Grid, {\n        container: true,\n        direction: \"row\",\n        spacing: 0,\n        alignItems: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 673\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 678\n        },\n        __self: this\n      }, React.createElement(FormControl, {\n        required: true,\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 679\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        id: \"outlined-select-race\",\n        select: true,\n        label: \"Race\",\n        className: classes.textField,\n        value: this.state.race,\n        onChange: this.handleChange('race'),\n        SelectProps: {\n          MenuProps: {\n            className: classes.menu\n          }\n        },\n        margin: \"normal\",\n        variant: \"outlined\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 680\n        },\n        __self: this\n      }, races.map(function (race) {\n        return React.createElement(MenuItem, {\n          key: race,\n          value: race,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 696\n          },\n          __self: this\n        }, race);\n      }))), React.createElement(FormControl, {\n        margin: \"normal\",\n        required: true,\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 702\n        },\n        __self: this\n      }, React.createElement(NoSsr, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 703\n        },\n        __self: this\n      }, React.createElement(Select, {\n        classes: classes,\n        styles: selectStyles,\n        options: this.state.options,\n        components: components,\n        value: this.state.ward,\n        onChange: this.handleChange('ward'),\n        placeholder: \"Ward*\",\n        isClearable: true,\n        error: this.state.wardError,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 704\n        },\n        __self: this\n      }))), React.createElement(BeaconTable, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 717\n        },\n        __self: this\n      }), React.createElement(DevicesTable, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 718\n        },\n        __self: this\n      }))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 722\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        style: {\n          textAlign: 'center',\n          paddingTop: '1rem'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 723\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"submit\",\n        variant: \"contained\",\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 724\n        },\n        __self: this\n      }, \"Submit\"), React.createElement(Button, {\n        style: {\n          marginLeft: '3em'\n        },\n        onClick: this.cancel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 727\n        },\n        __self: this\n      }, \"Cancel\"))))));\n    }\n  }]);\n\n  return AddPatient;\n}(Component);\n\nvar ConnectedAddPatient = connect(mapStateToProps, mapDispatchToProps)(AddPatient);\nexport default withStyles(styles, {\n  withTheme: true\n})(ConnectedAddPatient);","map":{"version":3,"sources":["/Users/jermz/Desktop/eclipse-workspace/medicalWebsite/src/AddPatient.js"],"names":["React","Component","AppBar","Button","TextField","Grid","Typography","Toolbar","withStyles","connect","confirmType","addPatient","fetchMaps","editPatient","updatePatient","fetchPatientCount","updatePatientCount","removePatient","signOutUser","assignBeacon","assignDevices","Card","CircularProgress","TemporaryDrawer","IconButton","MenuIcon","AddIcon","AccountCircle","MenuItem","Menu","FormControl","FormControlLabel","classNames","InputAdornment","Radio","RadioGroup","FormLabel","BeaconTable","DevicesTable","Scanner","Result","Select","axios","NoSsr","Paper","Chip","CancelIcon","ClickAwayListener","fakeDataRef","LinearProgress","graphqlUrlHTTPS","styles","theme","container","display","flexWrap","root","flexGrow","grow","card","minWidth","padding","textField","borderBox","border","borderRadius","menu","width","menuButton","marginLeft","marginRight","opacity","color","align","spacing","unit","input","valueContainer","flex","alignItems","overflow","noOptionsMessage","singleValue","fontSize","placeholder","position","left","paper","zIndex","marginTop","right","error","borderColor","mapStateToProps","state","beacon","maps","edit","devices","isAuthenticating","authenticated","patientCounter","mapDispatchToProps","dispatch","type","patient","credentials","count","NoOptionsMessage","props","selectProps","classes","innerProps","children","inputComponent","inputRef","Control","inputProps","className","innerRef","textFieldProps","Option","isFocused","fontWeight","isSelected","Placeholder","SingleValue","ValueContainer","MultiValue","chip","chipFocused","removeProps","onClick","SubMenu","components","AddPatient","flushData","setState","name","age","race","gender","ward","chosen","createOptions","options","map","value","id","label","fetch","query","request","then","data","crossReferenceData","result","on","snapshot","fullShot","val","Object","keys","key","codeResult","code","forceUpdate","variables","promise","method","url","headers","JSON","stringify","toggleDrawer","drawer","toggleCloseDrawer","handleMenu","event","anchorEl","currentTarget","handleClose","handleSubmit","e","preventDefault","errorCheck","nameError","wardError","length","imuCount","ecgCount","hrCount","device","charAt","highlight","confirm","editSuccess","chosenBeacon","history","push","handleLoading","loading","handleLogOut","handleChange","prop","target","cancel","_scan","scanning","_onDetected","results","indexOf","auth","prevProps","prevState","open","Boolean","races","selectStyles","base","palette","text","primary","cursor","font","boxShadow","backgroundColor","vertical","horizontal","minHeight","layout","margin","float","endAdornment","textAlign","formControl","group","MenuProps","paddingTop","ConnectedAddPatient","withTheme"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from \"react-redux\";\r\nimport { confirmType, addPatient, fetchMaps, editPatient, updatePatient, fetchPatientCount, updatePatientCount, removePatient, signOutUser, assignBeacon, assignDevices } from \"./actions/index\";\r\nimport Card from '@material-ui/core/Card';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport TemporaryDrawer from './TemporaryDrawer';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport classNames from 'classnames';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport BeaconTable from './BeaconTable';\r\nimport DevicesTable from './DevicesTable';\r\nimport Scanner from './Scanner';\r\nimport Result from './Result';\r\nimport Select from 'react-select';\r\nimport axios from 'axios';\r\nimport NoSsr from '@material-ui/core/NoSsr';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\r\nimport { fakeDataRef } from \"./firebase/index\"\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\n\r\nconst graphqlUrlHTTPS = 'http://137.132.165.139:3000/graphql';\r\n\r\n\r\nconst styles = theme => ({\r\n  container: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  card: {\r\n    minWidth: 275,\r\n    padding: '2rem'\r\n  },\r\n  textField: {\r\n    // marginLeft: theme.spacing.unit,\r\n    // marginRight: theme.spacing.unit,\r\n  },\r\n  borderBox: {\r\n    border: '1px solid',\r\n    padding: '2rem',\r\n    borderRadius: '16px',\r\n  },\r\n  menu: {\r\n    width: 200,\r\n  },\r\n  menuButton: {\r\n    marginLeft: -12,\r\n    marginRight: 20,\r\n    opacity : 0.4,\r\n    color: 'black',\r\n  },\r\n  align: {\r\n    padding: `${theme.spacing.unit * 2}px ${theme.spacing.unit * 3}px ${theme.spacing.unit * 3}px`,\r\n  },\r\n  input: {\r\n    display: 'flex',\r\n    padding: 0,\r\n  },\r\n  valueContainer: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    overflow: 'hidden',\r\n    padding: '18.5px 14px',\r\n  },\r\n  noOptionsMessage: {\r\n   padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`,\r\n },\r\n singleValue: {\r\n    fontSize: 16,\r\n  },\r\n  placeholder: {\r\n    position: 'absolute',\r\n    left: 2,\r\n    fontSize: 16,\r\n    padding: '18.5px 14px',\r\n  },\r\n  paper: {\r\n    position: 'absolute',\r\n    zIndex: 1,\r\n    marginTop: theme.spacing.unit,\r\n    left: 0,\r\n    right: 0,\r\n  },\r\n  error: {\r\n    borderColor: 'red !important',\r\n  }\r\n});\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    beacon: state.beacon,\r\n    maps: state.maps,\r\n    edit: state.edit,\r\n    devices: state.assignDevices,\r\n    isAuthenticating: state.isAuthenticating,\r\n    authenticated: state.authenticated,\r\n    patientCounter: state.patientCounter\r\n   };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    confirmType: type => dispatch(confirmType(type)),\r\n    addPatient: patient => dispatch(addPatient(patient)),\r\n    assignDevices: devices => dispatch(assignDevices(devices)),\r\n    editPatient: patient => dispatch(editPatient(patient)),\r\n    removePatient: patient => dispatch(removePatient(patient)),\r\n    fetchMaps: maps => dispatch(fetchMaps(maps)),\r\n    assignBeacon: beacon => dispatch(assignBeacon(beacon)),\r\n    signOutUser: credentials => dispatch(signOutUser(credentials)),\r\n    fetchPatientCount: count => dispatch(fetchPatientCount(count)),\r\n    updatePatientCount: count => dispatch(updatePatientCount(count)),\r\n    updatePatient: patient => dispatch(updatePatient(patient)),\r\n  };\r\n};\r\n\r\nfunction NoOptionsMessage(props) {\r\n  return (\r\n    <Typography\r\n      color=\"textSecondary\"\r\n      className={props.selectProps.classes.noOptionsMessage}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nfunction inputComponent({ inputRef, ...props }) {\r\n  return <div ref={inputRef} {...props} />;\r\n}\r\n\r\nfunction Control(props, state) {\r\n  return (\r\n    <TextField\r\n      fullWidth\r\n      variant=\"outlined\"\r\n      style={{borderColor: 'red !important'}}\r\n      InputProps={{\r\n        inputComponent,\r\n        inputProps: {\r\n          className: props.selectProps.classes.input,\r\n          inputRef: props.innerRef,\r\n          children: props.children,\r\n          ...props.innerProps,\r\n        },\r\n      }}\r\n      required={true}\r\n      error={props.selectProps.error}\r\n      helperText={ props.selectProps.error ? \"This field is required\" : null}\r\n      {...props.selectProps.textFieldProps}\r\n    />\r\n  );\r\n}\r\n\r\nfunction Option(props) {\r\n  return (\r\n    <MenuItem\r\n      buttonRef={props.innerRef}\r\n      selected={props.isFocused}\r\n      component=\"div\"\r\n      style={{\r\n        fontWeight: props.isSelected ? 500 : 400,\r\n      }}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </MenuItem>\r\n  );\r\n}\r\n\r\nfunction Placeholder(props) {\r\n  return (\r\n    <Typography\r\n      color=\"textSecondary\"\r\n      className={props.selectProps.classes.placeholder}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nfunction SingleValue(props) {\r\n  return (\r\n    <Typography className={props.selectProps.classes.singleValue} {...props.innerProps}>\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nfunction ValueContainer(props) {\r\n  return <div className={props.selectProps.classes.valueContainer}>{props.children}</div>;\r\n}\r\n\r\nfunction MultiValue(props) {\r\n  return (\r\n    <Chip\r\n      tabIndex={-1}\r\n      label={props.children}\r\n      className={classNames(props.selectProps.classes.chip, {\r\n        [props.selectProps.classes.chipFocused]: props.isFocused,\r\n      })}\r\n      onDelete={props.removeProps.onClick}\r\n      deleteIcon={<CancelIcon {...props.removeProps} />}\r\n    />\r\n  );\r\n}\r\n\r\nfunction SubMenu(props) {\r\n  return (\r\n    <Paper square className={props.selectProps.classes.paper} {...props.innerProps}>\r\n      {props.children}\r\n    </Paper>\r\n  );\r\n}\r\n\r\nconst components = {\r\n  Control,\r\n  SubMenu,\r\n  MultiValue,\r\n  NoOptionsMessage,\r\n  Option,\r\n  Placeholder,\r\n  SingleValue,\r\n  ValueContainer,\r\n};\r\n\r\nclass AddPatient extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      anchorEl: null,\r\n      auth: true,\r\n      name: \"\",\r\n      age: \"\",\r\n      race: \"\",\r\n      gender: \"\",\r\n      ward: \"\",\r\n      type: \"Patient\",\r\n      beacon: this.props.beacon,\r\n      scanning: false,\r\n      results: [],\r\n      options: [],\r\n      edit: false,\r\n      editSuccess: false,\r\n      nameError: false,\r\n    };\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if(this.state.editSuccess == false) {\r\n      this.props.editPatient('')\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    this.fetch();\r\n    this.props.fetchPatientCount();\r\n    if(this.props.edit != \"\" && this.props.edit != null) {\r\n      let edit = this.props.edit;\r\n      this.setState({\r\n        name: edit.name,\r\n        age: edit.age,\r\n        race: edit.race,\r\n        gender: edit.gender,\r\n        ward: {value: edit.ward, label: edit.ward},\r\n        edit: true,\r\n      })\r\n    } else {\r\n      this.flushData()\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if(this.state.edit == true && this.props.edit == \"\") {\r\n      this.flushData()\r\n    }\r\n\r\n    if(this.props.isAuthenticating == false && this.props.authenticated == false) {\r\n      this.props.history.push('/');\r\n    }\r\n  }\r\n\r\n  flushData = () => {\r\n    this.setState({\r\n      name: \"\",\r\n      age: \"\",\r\n      race: \"\",\r\n      gender: \"\",\r\n      ward: \"\",\r\n      edit: false,\r\n    })\r\n\r\n    let chosen = \"\"\r\n    this.props.assignBeacon( chosen );\r\n  }\r\n\r\n  createOptions = (maps) => {\r\n\r\n    let options = maps.map((map) => ({\r\n      value: map.id,\r\n      label: map.id,\r\n    }))\r\n\r\n    this.setState({options})\r\n  }\r\n\r\n  fetch = (dispatch) => {\r\n    let query = `\r\n      query {\r\n        maps {\r\n          id\r\n          scale\r\n          coordinates\r\n          imageURL\r\n          navMesh\r\n          navPath\r\n          pois\r\n        }\r\n      }\r\n    `\r\n    this.request({query})\r\n    .then (data => {\r\n      this.props.fetchMaps(data.data.data.maps);\r\n      this.createOptions(data.data.data.maps);\r\n    })\r\n  }\r\n\r\n  crossReferenceData = (result) => {\r\n    fakeDataRef.on(\"value\", snapshot => {\r\n\r\n    let fullShot = snapshot.val()\r\n\r\n    for (const key of Object.keys(fullShot)) {\r\n\r\n      if(key == result.codeResult.code) {\r\n        let name = fullShot[key].name\r\n        let race = fullShot[key].race\r\n        let age = fullShot[key].age\r\n        let gender = fullShot[key].gender\r\n\r\n        this.setState({name, gender, race, age})\r\n        this.forceUpdate()\r\n      }\r\n    }\r\n    });\r\n  }\r\n\r\n  request = ({query, variables}) => {\r\n    let promise = axios({\r\n      method:   'post',\r\n      url:      `${graphqlUrlHTTPS}`,\r\n      headers:  {'Content-Type': 'application/json'},\r\n      data:     JSON.stringify({query, variables})\r\n    })\r\n    return promise;\r\n  }\r\n\r\n  toggleDrawer = () => {\r\n    this.setState({ drawer: true});\r\n  }\r\n\r\n  toggleCloseDrawer = () => {\r\n    this.setState({ drawer: false });\r\n  }\r\n\r\n  handleMenu = event => {\r\n    this.setState({ drawer: false });\r\n    this.setState({ anchorEl: event.currentTarget });\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({ drawer: false });\r\n    this.setState({ anchorEl: null });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.handleClose()\r\n    let errorCheck = false\r\n    const { type } = this.state;\r\n    if(this.state.name == \"\") {\r\n      this.setState({nameError: true})\r\n      errorCheck = true\r\n    }\r\n\r\n    if(this.state.ward.value == null) {\r\n      this.setState({wardError: true})\r\n      errorCheck = true\r\n    }\r\n\r\n    let devices = this.props.devices\r\n    if(devices != null) {\r\n      if(devices[0] != \"None\" && devices.length > 0) {\r\n        let imuCount = 0\r\n        let ecgCount = 0\r\n        let hrCount = 0\r\n        devices.map(device => {\r\n          if(device.id.charAt(0) == 'e') {\r\n            ecgCount += 1\r\n          }\r\n\r\n          if(device.id.charAt(0) == 'h') {\r\n            hrCount += 1\r\n          }\r\n          if(device.id.charAt(0)== 'i') {\r\n            imuCount += 1\r\n          }\r\n        })\r\n\r\n        if(imuCount > 1 | ecgCount > 1 | hrCount > 1) {\r\n          errorCheck = true\r\n        }\r\n      }\r\n    }\r\n    if(errorCheck)\r\n      return\r\n\r\n    if(devices == null) {\r\n      devices = [\"None\"]\r\n    }\r\n    let patient = {\r\n      name: this.state.name,\r\n      age: this.state.age,\r\n      race: this.state.race,\r\n      gender: this.state.gender,\r\n      ward: this.state.ward.value,\r\n      beacon: this.props.beacon,\r\n      devices: devices,\r\n      highlight: false,\r\n    }\r\n    let confirm = {\r\n      name: this.state.name,\r\n      age: this.state.age,\r\n      race: this.state.race,\r\n      gender: this.state.gender,\r\n      ward: this.state.ward.value,\r\n      beacon: this.props.beacon,\r\n      devices: devices,\r\n      type: type}\r\n      if(this.state.edit) {\r\n        patient.id = this.props.edit.id\r\n        this.props.updatePatient(patient)\r\n        this.setState({editSuccess: true})\r\n      } else {\r\n        this.props.updatePatientCount(this.props.patientCounter.count)\r\n        this.props.addPatient(patient);\r\n      }\r\n\r\n    this.props.confirmType({ confirm })\r\n\r\n\r\n    let chosenBeacon = \"None\"\r\n    let chosen = [\"None\"]\r\n    this.props.assignBeacon( chosenBeacon );\r\n    this.props.assignDevices(chosen);\r\n    this.props.history.push('/addConfirmation');\r\n\r\n  }\r\n\r\n  handleLoading = () => {\r\n    this.setState(state => ({\r\n      loading: !state.loading,\r\n    }))\r\n  }\r\n  removePatient = () => {\r\n    this.props.removePatient(this.props.edit)\r\n    this.props.history.push('/locationTracking')\r\n  }\r\n  handleLogOut = () => {\r\n    this.handleClose()\r\n    this.props.signOutUser()\r\n  }\r\n\r\n  handleChange = prop => event => {\r\n    if(prop == \"ward\")\r\n      this.setState({ [prop]: event });\r\n    else {\r\n      this.setState({ [prop]: event.target.value });\r\n    }\r\n  };\r\n\r\n  cancel = () => {\r\n    this.props.editPatient('')\r\n    if(this.state.edit) {\r\n      this.props.history.push('/locationTracking')\r\n    } else\r\n      this.props.history.push('/home');\r\n\r\n  }\r\n\r\n  _scan = () => {\r\n\r\n        this.setState({scanning: !this.state.scanning});\r\n    }\r\n\r\n    _onDetected = (result) => {\r\n        let results = this.state.results;\r\n        if(results.indexOf(result) < 0) {\r\n          this.setState({results: [result]});\r\n          this.crossReferenceData(result)\r\n          this._scan()\r\n        }\r\n    }\r\n\r\n\r\n  render() {\r\n\r\n    const { classes, theme } = this.props;\r\n    const { anchorEl, auth } = this.state;\r\n    const open = Boolean(anchorEl)\r\n    const races = ['Chinese', 'Malay', 'Indian', 'Others'];\r\n\r\n    const selectStyles = {\r\n      input: base => ({\r\n        ...base,\r\n        color: theme.palette.text.primary,\r\n        cursor: 'pointer',\r\n        '& input': {\r\n          font: 'inherit',\r\n        },\r\n      }),\r\n    };\r\n\r\n    if(this.props.isAuthenticating) {\r\n      return <LinearProgress />\r\n    } else\r\n    return (\r\n      <div className={classes.root}>\r\n        <AppBar position=\"static\" style={{boxShadow: \"none\", backgroundColor: \"white\"}}>\r\n          <Toolbar>\r\n            <IconButton className={classes.menuButton} color=\"inherit\" aria-label=\"Menu\" onClick={this.toggleDrawer}>\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Typography variant=\"title\" className={classes.grow} style={{color: \"black\"}}>\r\n              {this.state.edit ? 'Edit': 'Add'} Patient\r\n            </Typography>\r\n            {auth && (\r\n                <div>\r\n                  <IconButton\r\n                    aria-owns={open ? 'menu-appbar' : null}\r\n                    aria-haspopup=\"true\"\r\n                    onClick={this.handleMenu}\r\n                    color=\"inherit\"\r\n                  >\r\n                    <AccountCircle style={{color: \"black\"}} />\r\n                  </IconButton>\r\n                  <Menu\r\n                    id=\"menu-appbar\"\r\n                    anchorEl={anchorEl}\r\n                    anchorOrigin={{\r\n                      vertical: 'top',\r\n                      horizontal: 'right',\r\n                    }}\r\n                    transformOrigin={{\r\n                      vertical: 'top',\r\n                      horizontal: 'right',\r\n                    }}\r\n                    open={open}\r\n                    onClose={this.handleClose}\r\n                  >\r\n                    <MenuItem onClick={this.handleLogOut}>Logout</MenuItem>\r\n                  </Menu>\r\n                </div>\r\n              )}\r\n          </Toolbar>\r\n        </AppBar>\r\n        <ClickAwayListener onClickAway={this.toggleCloseDrawer}>\r\n          <TemporaryDrawer toggle={this.state.drawer} />\r\n        </ClickAwayListener>\r\n        <form className={classes.align} onSubmit={this.handleSubmit}>\r\n          <Grid container\r\n            direction=\"column\"\r\n            spacing={0}\r\n            alignItems=\"center\"\r\n            style={{ minHeight: '75vh'}}>\r\n            <Grid item xs={12}>\r\n              <div className={classes.layout}>\r\n              <Grid container>\r\n                <Grid item xs={6}>\r\n                  <Typography variant=\"h4\" gutterBottom>Patient</Typography>\r\n                </Grid>\r\n                <Grid item xs={6} style={{margin: 'auto'}}>\r\n                  {this.state.edit ? <Button variant=\"outlined\" onClick={this.removePatient} style={{float: 'right'}}> Delete </Button> : null}\r\n                </Grid>\r\n              </Grid>\r\n              <Typography variant=\"h6\" gutterBottom>Barcode Scan</Typography>\r\n              <Button variant=\"outlined\" onClick={this._scan}>{this.state.scanning ? 'Stop' : 'Start'}</Button>\r\n                {this.state.results.map((result) => (<Result key={result.codeResult.code} result={result} />))}\r\n                {this.state.scanning ? <Scanner onDetected={this._onDetected}/> : null}\r\n              <FormControl margin=\"normal\" required fullWidth>\r\n                <TextField\r\n                  label=\"Name\"\r\n                  placeholder=\"Name\"\r\n                  autoComplete=\"name\"\r\n                  variant=\"outlined\"\r\n                  autoFocus = {this.state.results[0] != null ? true : false}\r\n                  value={this.state.name}\r\n                  fullWidth\r\n                  className={classes.textField}\r\n                  onChange = {(e) => this.setState({name:e.target.value})}\r\n                  required = {true}\r\n                  error={this.state.nameError}\r\n                  helperText={this.state.nameError ? \"This field is required\" : null}\r\n                />\r\n              </FormControl>\r\n            </div>\r\n            <Grid container\r\n              direction=\"row\"\r\n              spacing={24}\r\n              alignItems=\"center\"\r\n            >\r\n              <Grid item xs={6}>\r\n                <FormControl margin=\"normal\" required>\r\n                  <TextField\r\n                    id=\"outlined-adornment-age\"\r\n                    className={classNames(classes.margin, classes.textField)}\r\n                    variant=\"outlined\"\r\n                    label=\"Age\"\r\n                    value={this.state.age}\r\n                    onChange={this.handleChange('age')}\r\n                    InputProps={{\r\n                      endAdornment: <InputAdornment position=\"end\">Years Old</InputAdornment>,\r\n                    }}\r\n                  />\r\n                </FormControl>\r\n              </Grid>\r\n              <Grid item xs={6} style={{textAlign: 'center'}}>\r\n                <FormControl component=\"fieldset\" margin=\"normal\" className={classes.formControl}>\r\n                  <FormLabel component=\"legend\">Gender</FormLabel>\r\n                  <RadioGroup\r\n                    aria-label=\"Gender\"\r\n                    name=\"gender1\"\r\n                    row ={true}\r\n                    className={classNames(classes.margin, classes.textField, classes.group)}\r\n                    value={this.state.gender}\r\n                    onChange={this.handleChange('gender')}\r\n                    >\r\n                    <FormControlLabel value=\"male\" control={<Radio />} label=\"Male\" />\r\n                    <FormControlLabel value=\"female\" control={<Radio />} label=\"Female\" />\r\n                  </RadioGroup>\r\n                </FormControl>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid container\r\n              direction=\"row\"\r\n              spacing={0}\r\n              alignItems=\"center\"\r\n            >\r\n              <Grid item xs={12}>\r\n                <FormControl required fullWidth>\r\n                  <TextField\r\n                    id=\"outlined-select-race\"\r\n                    select\r\n                    label=\"Race\"\r\n                    className={classes.textField}\r\n                    value={this.state.race}\r\n                    onChange={this.handleChange('race')}\r\n                    SelectProps={{\r\n                      MenuProps: {\r\n                        className: classes.menu,\r\n                      },\r\n                    }}\r\n                    margin=\"normal\"\r\n                    variant=\"outlined\"\r\n                  >\r\n                    {races.map(race => (\r\n                      <MenuItem key={race} value={race}>\r\n                        {race}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </TextField>\r\n                </FormControl>\r\n                <FormControl margin=\"normal\" required fullWidth>\r\n                  <NoSsr>\r\n                    <Select\r\n                      classes={classes}\r\n                      styles={selectStyles}\r\n                      options={this.state.options}\r\n                      components={components}\r\n                      value={this.state.ward}\r\n                      onChange={this.handleChange('ward')}\r\n                      placeholder=\"Ward*\"\r\n                      isClearable\r\n                      error={this.state.wardError}\r\n                    />\r\n                  </NoSsr>\r\n                </FormControl>\r\n                <BeaconTable />\r\n                <DevicesTable />\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <br/>\r\n            <div style={{ textAlign: 'center', paddingTop: '1rem'}}>\r\n              <Button type='submit' variant=\"contained\" color=\"primary\">\r\n                Submit\r\n              </Button>\r\n              <Button style={{marginLeft: '3em'}} onClick={this.cancel}>\r\n                Cancel\r\n              </Button>\r\n            </div>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n\r\n    )\r\n\r\n  }\r\n}\r\n\r\nconst ConnectedAddPatient = connect(mapStateToProps, mapDispatchToProps)(AddPatient);\r\n\r\nexport default withStyles(styles, {withTheme: true})(ConnectedAddPatient);\r\n"]},"metadata":{},"sourceType":"module"}